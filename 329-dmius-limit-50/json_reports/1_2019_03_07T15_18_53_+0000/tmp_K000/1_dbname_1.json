{
  "snapshot_timestamptz": "2019-03-07T15:19:08.113818+00:00",
  "snapshot_timestamptz_s": 1551971948.11382,
  "queries": {
    "163cfa2d9b239012222256b85416e9ef": {
      "rownum": 1,
      "query": "create table t_slw_q as select id::int8 from generate_series(0, 10000000) _(id)",
      "calls": 1,
      "total_time": 24347.836966,
      "rows": 0,
      "shared_blks_hit": 132,
      "shared_blks_read": 44248,
      "shared_blks_dirtied": 44250,
      "shared_blks_written": 42200,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 17090,
      "temp_blks_written": 17090,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -837353630728469800,
      "md5": "163cfa2d9b239012222256b85416e9ef"
    },
    "eec46fe61d3934b8c6c2139d5e7161be": {
      "rownum": 2,
      "query": "VACUUM ANALYZE",
      "calls": 1,
      "total_time": 9133.749445,
      "rows": 0,
      "shared_blks_hit": 126545,
      "shared_blks_read": 147934,
      "shared_blks_dirtied": 84252,
      "shared_blks_written": 72325,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4922882474069691000,
      "md5": "eec46fe61d3934b8c6c2139d5e7161be"
    },
    "05f9d44992276e849a316faf875dbe58": {
      "rownum": 3,
      "query": "update t_rar_q set t_dat=$1 where t_dat between $2 and $3",
      "calls": 9,
      "total_time": 6360.147622,
      "rows": 744419,
      "shared_blks_hit": 1520928,
      "shared_blks_read": 17301,
      "shared_blks_dirtied": 11932,
      "shared_blks_written": 8501,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 615357981169976700,
      "md5": "05f9d44992276e849a316faf875dbe58"
    },
    "4646397ec75bf0bfdcf9e52a3e414f3f": {
      "rownum": 4,
      "query": "update t_with_bloat set i = i",
      "calls": 1,
      "total_time": 5148.287743,
      "rows": 1000000,
      "shared_blks_hit": 2013316,
      "shared_blks_read": 8819,
      "shared_blks_dirtied": 8818,
      "shared_blks_written": 5022,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7126752365344959000,
      "md5": "4646397ec75bf0bfdcf9e52a3e414f3f"
    },
    "8b24dc720ee7b997d06403463ee87e6c": {
      "rownum": 5,
      "query": "create table test_schema.t_with_invalid_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 5082.794921,
      "rows": 0,
      "shared_blks_hit": 130,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4426,
      "shared_blks_written": 3058,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5156236148593934000,
      "md5": "8b24dc720ee7b997d06403463ee87e6c"
    },
    "850453c65d65fcf612bf296d9a6a9268": {
      "rownum": 6,
      "query": "create index r_red_fk_2_fk_idx on t_red_fk_2(r_t1_id)",
      "calls": 1,
      "total_time": 4267.555468,
      "rows": 0,
      "shared_blks_hit": 1150,
      "shared_blks_read": 1820,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1303,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2801630118753177600,
      "md5": "850453c65d65fcf612bf296d9a6a9268"
    },
    "cc1686ee07ff9eb8e52d11ca718b58f0": {
      "rownum": 7,
      "query": "INSERT INTO test_schema.order(cnt) select id from generate_series($1, $2) _(id)",
      "calls": 1,
      "total_time": 4121.624786,
      "rows": 1000001,
      "shared_blks_hit": 3172188,
      "shared_blks_read": 7173,
      "shared_blks_dirtied": 7170,
      "shared_blks_written": 4327,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 6592396101052552000,
      "md5": "cc1686ee07ff9eb8e52d11ca718b58f0"
    },
    "27a2afaa729fad42c3714d99adcdcc8c": {
      "rownum": 8,
      "query": "create table t_fk_2 as select id, (random() * 1000000)::int8 as t1_id from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 3438.47033,
      "rows": 0,
      "shared_blks_hit": 134,
      "shared_blks_read": 5406,
      "shared_blks_dirtied": 5406,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 22211663676525936,
      "md5": "27a2afaa729fad42c3714d99adcdcc8c"
    },
    "182ba4f0ffb554baf311c8fa6800939f": {
      "rownum": 9,
      "query": "create database dbname",
      "calls": 1,
      "total_time": 3278.653722,
      "rows": 0,
      "shared_blks_hit": 51,
      "shared_blks_read": 8,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3617698589948080000,
      "md5": "182ba4f0ffb554baf311c8fa6800939f"
    },
    "ec072b80b11cc3e40fb8bf74a5761bb3": {
      "rownum": 10,
      "query": "VACUUM (ANALYZE)",
      "calls": 1,
      "total_time": 3274.931372,
      "rows": 0,
      "shared_blks_hit": 53600,
      "shared_blks_read": 91542,
      "shared_blks_dirtied": 19087,
      "shared_blks_written": 17349,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 613725734663719400,
      "md5": "ec072b80b11cc3e40fb8bf74a5761bb3"
    },
    "a46b26bc52f7d1afc7d154f92496efd4": {
      "rownum": 11,
      "query": "create table t_rar_q as select id, (random() * 1000000)::int8 as t_dat from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 2488.603077,
      "rows": 0,
      "shared_blks_hit": 197,
      "shared_blks_read": 5407,
      "shared_blks_dirtied": 5425,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8726250694613120000,
      "md5": "a46b26bc52f7d1afc7d154f92496efd4"
    },
    "af25b9c8adc50fa5257e20b79affaad2": {
      "rownum": 12,
      "query": "create table t_red_fk_2 as select id, (random() * 1000000)::int8 as r_t1_id from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 2410.265781,
      "rows": 0,
      "shared_blks_hit": 135,
      "shared_blks_read": 5408,
      "shared_blks_dirtied": 5426,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 591824813582986000,
      "md5": "af25b9c8adc50fa5257e20b79affaad2"
    },
    "3c696f84403e8cc04bda0b9cb3851d09": {
      "rownum": 13,
      "query": "create table t_red_fk_1 as select id::int8 from generate_series(0, 1000000) _(id)",
      "calls": 1,
      "total_time": 2341.007047,
      "rows": 0,
      "shared_blks_hit": 135,
      "shared_blks_read": 4426,
      "shared_blks_dirtied": 4429,
      "shared_blks_written": 2628,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5601151487238124000,
      "md5": "3c696f84403e8cc04bda0b9cb3851d09"
    },
    "b2e6824504caaebf8acd2eaee913a031": {
      "rownum": 14,
      "query": "create table t_with_unused_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2226.096691,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4425,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -678916242629262500,
      "md5": "b2e6824504caaebf8acd2eaee913a031"
    },
    "74e5721c6470a95d09ee76772b44165b": {
      "rownum": 15,
      "query": "create table t_with_redundant_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2196.061185,
      "rows": 0,
      "shared_blks_hit": 128,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4427,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5095830603244401000,
      "md5": "74e5721c6470a95d09ee76772b44165b"
    },
    "87226e76b7e4a7d8e6309faa0f90a732": {
      "rownum": 16,
      "query": "create table t_fk_1 as select id::int8 from generate_series(0, 1000000) _(id)",
      "calls": 1,
      "total_time": 2160.274582,
      "rows": 0,
      "shared_blks_hit": 136,
      "shared_blks_read": 4428,
      "shared_blks_dirtied": 4431,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7718336515547744000,
      "md5": "87226e76b7e4a7d8e6309faa0f90a732"
    },
    "f02a209c690eb4e80fd5a6eb797601bd": {
      "rownum": 17,
      "query": "create table t_with_bloat as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 1934.239663,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4425,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6446764050704029000,
      "md5": "f02a209c690eb4e80fd5a6eb797601bd"
    },
    "ff81168f1c2862518de3443458d02bda": {
      "rownum": 18,
      "query": "alter table t_fk_1 add primary key (id)",
      "calls": 1,
      "total_time": 1226.851358,
      "rows": 0,
      "shared_blks_hit": 3291,
      "shared_blks_read": 3653,
      "shared_blks_dirtied": 2385,
      "shared_blks_written": 2345,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7844596772736630000,
      "md5": "ff81168f1c2862518de3443458d02bda"
    },
    "da5a0eef2ba2f7e988f1d5a0ff21fc4c": {
      "rownum": 19,
      "query": "create index concurrently i_redundant_1 on t_with_redundant_index(i)",
      "calls": 1,
      "total_time": 1225.2475,
      "rows": 0,
      "shared_blks_hit": 3335,
      "shared_blks_read": 6293,
      "shared_blks_dirtied": 1237,
      "shared_blks_written": 1203,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 566438153080519400,
      "md5": "da5a0eef2ba2f7e988f1d5a0ff21fc4c"
    },
    "856c7f8a018144ce1f247944c8d434cc": {
      "rownum": 20,
      "query": "alter table t_red_fk_1 add primary key (id)",
      "calls": 1,
      "total_time": 1215.930492,
      "rows": 0,
      "shared_blks_hit": 3197,
      "shared_blks_read": 3671,
      "shared_blks_dirtied": 2377,
      "shared_blks_written": 2345,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1287,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7202543407834562000,
      "md5": "856c7f8a018144ce1f247944c8d434cc"
    },
    "6d9a4e6ff38cfa7e3509df6ea5a57a5d": {
      "rownum": 21,
      "query": "create index concurrently i_unused on t_with_unused_index(i)",
      "calls": 1,
      "total_time": 1178.730059,
      "rows": 0,
      "shared_blks_hit": 3256,
      "shared_blks_read": 6338,
      "shared_blks_dirtied": 1279,
      "shared_blks_written": 1242,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1258,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6612128672608002000,
      "md5": "6d9a4e6ff38cfa7e3509df6ea5a57a5d"
    },
    "1649aed0a915d2e8036efb2c4b9755cc": {
      "rownum": 22,
      "query": "create index t_rar_q_idx on t_rar_q(id)",
      "calls": 1,
      "total_time": 1141.760168,
      "rows": 0,
      "shared_blks_hit": 1186,
      "shared_blks_read": 1730,
      "shared_blks_dirtied": 1726,
      "shared_blks_written": 1690,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1262,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2650688778442027500,
      "md5": "1649aed0a915d2e8036efb2c4b9755cc"
    },
    "009cd28de9f131450e7a7f53709571cf": {
      "rownum": 23,
      "query": "create index r_red_fk_1_X_idx on t_red_fk_1(id)",
      "calls": 1,
      "total_time": 1133.580623,
      "rows": 0,
      "shared_blks_hit": 1231,
      "shared_blks_read": 1170,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3969450259942249000,
      "md5": "009cd28de9f131450e7a7f53709571cf"
    },
    "8720b0edefb6a45da423ed1cd159dfb5": {
      "rownum": 24,
      "query": "create index r_red_fk_1_id_idx on t_red_fk_1(id)",
      "calls": 1,
      "total_time": 1129.660797,
      "rows": 0,
      "shared_blks_hit": 1173,
      "shared_blks_read": 1234,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3040282640922053000,
      "md5": "8720b0edefb6a45da423ed1cd159dfb5"
    },
    "3bf99ed9e7251ac855b911c880c74f10": {
      "rownum": 25,
      "query": "create index concurrently i_redundant_2 on t_with_redundant_index(i)",
      "calls": 1,
      "total_time": 1092.249001,
      "rows": 0,
      "shared_blks_hit": 3327,
      "shared_blks_read": 6281,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5045454327338548000,
      "md5": "3bf99ed9e7251ac855b911c880c74f10"
    },
    "2c9a2ec5fb1e2d77030e6204ea8b7318": {
      "rownum": 26,
      "query": "alter table t_fk_2 add constraint fk_t2_t1 foreign key (t1_id) references t_fk_1(id)",
      "calls": 1,
      "total_time": 832.663905,
      "rows": 0,
      "shared_blks_hit": 4473,
      "shared_blks_read": 5657,
      "shared_blks_dirtied": 3366,
      "shared_blks_written": 3326,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8519389473273073000,
      "md5": "2c9a2ec5fb1e2d77030e6204ea8b7318"
    },
    "2f0005113f457cf45d459529c3f01e05": {
      "rownum": 27,
      "query": "alter table t_red_fk_2 add constraint fk_red_fk2_t1 foreign key (r_t1_id) references t_red_fk_1(id)",
      "calls": 1,
      "total_time": 820.658351,
      "rows": 0,
      "shared_blks_hit": 4546,
      "shared_blks_read": 5516,
      "shared_blks_dirtied": 3375,
      "shared_blks_written": 3326,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2911641097746118700,
      "md5": "2f0005113f457cf45d459529c3f01e05"
    },
    "2b2351b396aba1c8f9efd79c7b6e1c12": {
      "rownum": 28,
      "query": "select count(*) from t_slw_q",
      "calls": 1,
      "total_time": 774.688503,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 44248,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5369673549656116000,
      "md5": "2b2351b396aba1c8f9efd79c7b6e1c12"
    },
    "07353b6ca38efff937cf943dc3a10af6": {
      "rownum": 29,
      "query": "create database checkup_test_db",
      "calls": 1,
      "total_time": 691.373362,
      "rows": 0,
      "shared_blks_hit": 61,
      "shared_blks_read": 4,
      "shared_blks_dirtied": 6,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2133351059478393300,
      "md5": "07353b6ca38efff937cf943dc3a10af6"
    },
    "7900f9ff95b009d844e03ae8f769a70a": {
      "rownum": 30,
      "query": "with data as (\n select\n ae.name,\n installed_version,\n default_version,\n case when installed_version <> default_version then $1 end as is_old\n from pg_extension e\n join pg_available_extensions ae on extname = ae.name\n order by ae.name\n ), withsettins as (\n select\n data.*,\n (select json_object_agg(name, setting)\n from pg_settings\n where name ~ data.name) as settings from data\n order by name\n )\n select json_object_agg(withsettins.name, withsettins) as json from withsettins",
      "calls": 1,
      "total_time": 273.52793,
      "rows": 1,
      "shared_blks_hit": 4,
      "shared_blks_read": 2,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8799259724768328000,
      "md5": "7900f9ff95b009d844e03ae8f769a70a"
    },
    "0fa02b6acfb1ea274d5d2ea3c42d9f2a": {
      "rownum": 31,
      "query": "CREATE TABLE test_schema.order\n(\n id serial,\n\tcnt integer,\n CONSTRAINT ordiadjust_pk PRIMARY KEY (id)\n)",
      "calls": 1,
      "total_time": 191.802242,
      "rows": 0,
      "shared_blks_hit": 470,
      "shared_blks_read": 37,
      "shared_blks_dirtied": 24,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2962912281322261000,
      "md5": "0fa02b6acfb1ea274d5d2ea3c42d9f2a"
    },
    "f3ca5b19ffc27a3fdd871531017e82b7": {
      "rownum": 32,
      "query": "with data as (\n with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n ), step1 as (\n select\n i.tblid,\n i.nspname as schema_name,\n i.tblname as table_name,\n i.idxname as index_name,\n i.reltuples,\n i.relpages,\n i.relam,\n a.attrelid AS table_oid,\n current_setting($2)::numeric AS bs,\n fillfactor,\n \n case when version() ~ $3 then $4 else $5 end as maxalign,\n /* per page header, fixed size: 20 for 7.X, 24 for others */\n $6 AS pagehdr,\n /* per page btree opaque data */\n $7 AS pageopqdata,\n /* per tuple header: add IndexAttributeBitMapData if some cols are null-able */\n case\n when max(coalesce(s.null_frac,$8)) = $9 then $10 \n else $11 + (( $12 + $13 - $14 ) / $15) \n end as index_tuple_hdr_bm,\n /* data len: we remove null values save space using it fractionnal part from stats */\n sum(($16 - coalesce(s.null_frac, $17)) * coalesce(s.avg_width, $18)) as nulldatawidth,\n max(case when a.atttypid = $19::regtype then $20 else $21 end) > $22 as is_na\n from pg_attribute as a\n join (\n select\n tbl.oid tblid, nspname, tbl.relname AS tblname, idx.relname AS idxname, idx.reltuples, idx.relpages, idx.relam,\n indrelid, indexrelid, indkey::smallint[] AS attnum,\n coalesce(substring(array_to_string(idx.reloptions, $23) from $24)::smallint, $25) as fillfactor\n from pg_index\n join pg_class idx on idx.oid = pg_index.indexrelid\n join pg_class tbl on tbl.oid = pg_index.indrelid\n join pg_namespace on pg_namespace.oid = idx.relnamespace\n where pg_index.indisvalid AND tbl.relkind = $26 AND idx.relpages > $27\n ) as i on a.attrelid = i.indexrelid\n join pg_stats as s on\n s.schemaname = i.nspname\n and (\n (s.tablename = i.tblname and s.attname = pg_catalog.pg_get_indexdef(a.attrelid, a.attnum, $28)) \n OR (s.tablename = i.idxname AND s.attname = a.attname) \n )\n join pg_type as t on a.atttypid = t.oid\n where a.attnum > $29\n group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n ), step2 as (\n select\n *,\n (\n index_tuple_hdr_bm + maxalign\n \n - case when index_tuple_hdr_bm % maxalign = $30 THEN maxalign else index_tuple_hdr_bm % maxalign end\n + nulldatawidth + maxalign\n \n - case\n when nulldatawidth = $31 then $32\n when nulldatawidth::integer % maxalign = $33 then maxalign\n else nulldatawidth::integer % maxalign\n end\n )::numeric as nulldatahdrwidth\n \n from step1\n ), step3 as (\n select\n *,\n \n coalesce($34 + ceil(reltuples / floor((bs - pageopqdata - pagehdr) / ($35 + nulldatahdrwidth)::float)), $36) as est_pages,\n coalesce($37 + ceil(reltuples / floor((bs - pageopqdata - pagehdr) * fillfactor / ($38 * ($39 + nulldatahdrwidth)::float))), $40) as est_pages_ff\n \n from step2\n join pg_am am on step2.relam = am.oid\n where am.amname = $41\n ), step4 as (\n SELECT\n *,\n bs*(relpages)::bigint AS real_size,\n \n bs*(relpages-est_pages)::bigint AS extra_size,\n $42 * (relpages-est_pages)::float / relpages AS extra_ratio,\n bs*(relpages-est_pages_ff) AS bloat_size,\n $43 * (relpages-est_pages_ff)::float / relpages AS bloat_ratio\n \n from step3\n \n )\n select\n case is_na when $44 then $45 else $46 end as \"Is N/A\",\n format(\n $47,\n left(index_name, $48) || case when length(index_name) > $49 then $50 else $51 end,\n coalesce(nullif(step4.schema_name, $52) || $53, $54) || step4.table_name\n ) as \"Index (Table)\",\n real_size as \"Real size bytes\",\n pg_size_pretty(real_size::numeric) as \"Size\",\n extra_ratio as \"Extra ratio\",\n case\n when extra_size::numeric >= $55\n then $56 || pg_size_pretty(extra_size::numeric)::text || $57 || round(extra_ratio::numeric, $58)::text || $59\n else $60\n end as \"Extra\",\n case\n when extra_size::numeric >= $61\n then extra_size\n else $62\n end as \"Extra size bytes\",\n case\n when bloat_size::numeric >= $63\n then $64 || pg_size_pretty(bloat_size::numeric)::text || $65 || round(bloat_ratio::numeric, $66)::text || $67\n else $68\n end as \"Bloat\",\n case\n when (bloat_size)::numeric >=$69\n then bloat_size\n else $70\n end as \"Bloat size bytes\",\n case\n when (bloat_ratio)::numeric >=$71\n then bloat_ratio\n else $72\n end as \"Bloat ratio\",\n case\n when (real_size - bloat_size)::numeric >=$73\n then $74 || pg_size_pretty((real_size - bloat_size)::numeric)\n else $75\n end as \"Live\",\n case\n when (real_size - bloat_size)::numeric >=$76\n then (real_size - bloat_size)::numeric\n else $77\n end as \"Live bytes\", \n fillfactor,\n case when ot.table_id is not null then $78 else $79 end as overrided_settings\n from step4\n left join overrided_tables ot on ot.table_id = step4.tblid\n order by real_size desc nulls last\n), limited_data as (\n select * from data limit $80\n), num_limited_data as (\n select\n row_number() over () num,\n limited_data.*\n from limited_data\n), limited_json_data as (\n select json_object_agg(ld.\"Index (Table)\", ld) as json from num_limited_data ld\n), total_data as (\n select\n sum($81) as count,\n sum(\"Extra size bytes\") as \"Extra size bytes sum\",\n sum(\"Real size bytes\") as \"Real size bytes sum\",\n sum(\"Bloat size bytes\") as \"Bloat size bytes sum\",\n (sum(\"Bloat size bytes\")::numeric/sum(\"Real size bytes\")::numeric * $82) as \"Bloat ratio\",\n sum(\"Extra size bytes\") as \"Extra size bytes sum\"\n from data\n)\nselect\n json_build_object(\n $83,\n (select * from limited_json_data),\n $84,\n (select row_to_json(total_data) from total_data),\n $85,\n (select count($86) from limited_data where overrided_settings = $87)\n )",
      "calls": 1,
      "total_time": 96.696854,
      "rows": 1,
      "shared_blks_hit": 143203,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4866697448425993000,
      "md5": "f3ca5b19ffc27a3fdd871531017e82b7"
    },
    "db570fdb9efb2788263a46d64f598460": {
      "rownum": 33,
      "query": "create table bloated as select i from generate_series(1, 100000) _(i)",
      "calls": 1,
      "total_time": 68.372076,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 443,
      "shared_blks_dirtied": 443,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 171,
      "temp_blks_written": 171,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2951921325210440700,
      "md5": "db570fdb9efb2788263a46d64f598460"
    },
    "47f3b6f83dd15d923f38781199dadd68": {
      "rownum": 34,
      "query": "create index i_bloated on bloated(i)",
      "calls": 1,
      "total_time": 43.819256,
      "rows": 0,
      "shared_blks_hit": 534,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8841083458873351000,
      "md5": "47f3b6f83dd15d923f38781199dadd68"
    },
    "1e338dafba47262a2667ea02f9cb43e0": {
      "rownum": 35,
      "query": "delete from bloated where i % $1 = $2",
      "calls": 1,
      "total_time": 31.305289,
      "rows": 50000,
      "shared_blks_hit": 50443,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5419102683897635000,
      "md5": "1e338dafba47262a2667ea02f9cb43e0"
    },
    "d8f019afbfe2a47c0b60750323b2f699": {
      "rownum": 36,
      "query": "with data as (\n with data as (\n select s.*\n from pg_stat_database s\n where s.datname = current_database()\n )\n select $1 as metric, version() as value\n union all\n select\n $2 as metric,\n (select setting from pg_settings where name = $3) as value\n union all\n select\n $4 as metric,\n case\n when pg_is_in_recovery() then $5 || $6\n || ((((case\n when pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() then $7\n else extract ($8 from now() - pg_last_xact_replay_timestamp())\n end)::int)::text || $9)::interval)::text\n || $10 || pg_is_wal_replay_paused()::text || $11\n else\n $12\n end as value\n union all\n (\n with repl_groups as (\n select sync_state, state, string_agg(host(client_addr), $13) as hosts\n from pg_stat_replication\n group by 1, 2\n )\n select\n $14,\n string_agg(sync_state || $15 || state || $16 || hosts, $17)\n from repl_groups\n )\n union all\n select $18, pg_postmaster_start_time()::timestamptz(0)::text\n union all\n select $19, (now() - pg_postmaster_start_time())::interval(0)::text\n union all\n select\n $20,\n (select (checkpoints_timed + checkpoints_req)::text from pg_stat_bgwriter)\n union all\n select\n $21,\n (\n select round($22 * checkpoints_req::numeric /\n (nullif(checkpoints_timed + checkpoints_req, $23)), $24)::text || $25\n from pg_stat_bgwriter\n )\n union all\n select\n $26,\n (\n select round((nullif(buffers_checkpoint::numeric, $27) /\n (($28 * $29 /\n (current_setting($30)::numeric))\n * extract($31 from now() - stats_reset)\n ))::numeric, $32)::text\n from pg_stat_bgwriter\n )\n union all\n select repeat($33, $34), repeat($35, $36)\n union all\n select $37 as metric, datname as value from data\n union all\n select $38, pg_size_pretty(pg_database_size(current_database()))\n union all\n select $39, stats_reset::timestamptz(0)::text from data\n union all\n select $40, (now() - stats_reset)::interval(0)::text from data\n union all\n select $41, (\n with exts as (\n select extname || $42 || extversion e, ($43 + row_number() over (order by extname)) / $44 i from pg_extension\n ), lines(l) as (\n select string_agg(e, $45 order by i) l from exts group by i\n )\n select string_agg(l, $46) from lines\n )\n union all\n select $47, (round(blks_hit * $48::numeric / (blks_hit + blks_read), $49))::text || $50 from data \n union all\n select $51, (round(xact_commit * $52::numeric / (xact_commit + xact_rollback), $53))::text || $54 from data\n union all\n select $55, conflicts::text from data\n union all\n select $56, pg_size_pretty(temp_bytes)::text from data\n union all\n select $57, temp_files::text from data\n union all\n select\n $58,\n case\n when (((extract($59 from now()) - extract($60 from data.stats_reset))/$61)::int) <> $62 then\n (temp_files / (((extract($63 from now()) - extract($64 from data.stats_reset))/$65)::int))::text\n else\n temp_files::text\n end\n from data\n union all\n select $66, pg_size_pretty(temp_bytes::numeric / nullif(temp_files, $67))::text from data\n union all\n select $68, deadlocks::text from data\n union all\n select\n $69,\n case\n when ((extract($70 from now()) - extract($71 from data.stats_reset))/$72)::int <> $73 then\n (deadlocks / (((extract($74 from now()) - extract($75 from data.stats_reset))/$76)::int))::text\n else\n deadlocks::text\n end\n from data\n), general_info_json as (\n select json_object_agg(data.metric, data) as json from data where data.metric not like $77\n), database_sizes as (\n select pd.datname, pg_database_size(pd.datname) as db_size from pg_database pd order by db_size desc\n), sorted_database_sizes as (\n select json_object_agg(datname, db_size) from database_sizes ds\n)\nselect\n json_build_object(\n $78,\n (select * from general_info_json),\n $79,\n (select * from sorted_database_sizes)\n )",
      "calls": 1,
      "total_time": 30.187636,
      "rows": 1,
      "shared_blks_hit": 23,
      "shared_blks_read": 1,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -221348159466462940,
      "md5": "d8f019afbfe2a47c0b60750323b2f699"
    },
    "8de816f5a1892abd8bdd864b5fc9df0f": {
      "rownum": 37,
      "query": "alter system set random_page_cost = 2.22",
      "calls": 1,
      "total_time": 18.921692,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1881993450838449000,
      "md5": "8de816f5a1892abd8bdd864b5fc9df0f"
    },
    "165a0d5711fd3f71d4870770e28b4a20": {
      "rownum": 38,
      "query": "with fk_indexes as (\n select\n schemaname as schema_name,\n (indexrelid::regclass)::text as index_name,\n (relid::regclass)::text as table_name,\n (confrelid::regclass)::text as fk_table_ref,\n array_to_string(indclass, $1) as opclasses\n from\n pg_stat_user_indexes\n join pg_index using (indexrelid)\n left join pg_constraint\n on array_to_string(indkey, $2) = array_to_string(conkey, $3)\n and schemaname = (connamespace::regnamespace)::text\n and conrelid = relid\n and contype = $4\n where idx_scan = $5\n and indisunique is false\n and conkey is not null \n), table_scans as (\n select relid,\n tables.idx_scan + tables.seq_scan as all_scans,\n ( tables.n_tup_ins + tables.n_tup_upd + tables.n_tup_del ) as writes,\n pg_relation_size(relid) as table_size\n from pg_stat_user_tables as tables\n), all_writes as (\n select sum(writes) as total_writes\n from table_scans\n), indexes as (\n select\n idx_stat.relid,\n idx_stat.indexrelid,\n idx_stat.schemaname as schema_name,\n idx_stat.relname as table_name,\n idx_stat.indexrelname as index_name,\n quote_ident(idx_stat.schemaname) as formated_schema_name,\n quote_ident(idx_stat.indexrelname) as formated_index_name,\n quote_ident(idx_stat.relname) as formated_table_name,\n coalesce(nullif(quote_ident(idx_stat.schemaname), $6) || $7, $8) || quote_ident(idx_stat.relname) as formated_relation_name,\n idx_stat.idx_scan,\n pg_relation_size(idx_stat.indexrelid) as index_bytes,\n indexdef ~* $9 as idx_is_btree,\n pg_get_indexdef(pg_index.indexrelid) as index_def,\n array_to_string(pg_index.indclass, $10) as opclasses\n from pg_stat_user_indexes as idx_stat\n join pg_index\n using (indexrelid)\n join pg_indexes as indexes\n on idx_stat.schemaname = indexes.schemaname\n and idx_stat.relname = indexes.tablename\n and idx_stat.indexrelname = indexes.indexname\n where\n pg_index.indisunique = $11\n and pg_index.indisvalid = $12\n), index_ratios as (\n select\n i.indexrelid as index_id,\n i.schema_name,\n i.table_name,\n i.index_name,\n idx_scan,\n all_scans,\n round(( case when all_scans = $13 then $14::numeric\n else idx_scan::numeric/all_scans * $15 end), $16) as index_scan_pct,\n writes,\n round((case when writes = $17 then idx_scan::numeric else idx_scan::numeric/writes end), $18)\n as scans_per_write,\n index_bytes as index_size_bytes,\n table_size as table_size_bytes,\n idx_is_btree,\n index_def,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n i.opclasses,\n case when fi.index_name is not null then $19 else $20 end as supports_fk\n from indexes i\n left join fk_indexes fi on\n fi.fk_table_ref = i.table_name\n and fi.opclasses like (i.opclasses || $21)\n join table_scans\n using (relid)\n),\n\nnever_used_indexes as (\n select\n $22 as reason,\n ir.*\n from index_ratios ir\n where\n idx_scan = $23\n and idx_is_btree\n order by index_size_bytes desc\n), never_used_indexes_num as (\n select row_number() over () num, nui.* \n from never_used_indexes nui\n limit $24\n), never_used_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from never_used_indexes\n), never_used_indexes_json as (\n select\n json_object_agg(nuin.schema_name || $25 || nuin.index_name, nuin) as json\n from never_used_indexes_num nuin\n),\n\nrarely_used_indexes as (\n select\n $26 as reason,\n *,\n $27 as grp\n from index_ratios\n where\n scans_per_write <= $28\n and index_scan_pct < $29\n and idx_scan > $30\n and writes > $31\n and idx_is_btree\n union all\n select\n $32 as reason,\n *,\n $33 as grp\n from index_ratios\n where\n index_scan_pct < $34\n and scans_per_write > $35\n and idx_scan > $36\n and idx_is_btree\n and index_size_bytes > $37\n union all\n select\n $38 as reason,\n index_ratios.*,\n $39 as grp\n from index_ratios, all_writes\n where\n ( writes::numeric / ( total_writes + $40 ) ) > $41\n and not idx_is_btree\n and index_size_bytes > $42\n order by grp, index_size_bytes desc\n), rarely_used_indexes_num as (\n select row_number() over () num, rui.*\n from rarely_used_indexes rui\n limit $43\n), rarely_used_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from rarely_used_indexes\n), rarely_used_indexes_json as (\n select\n json_object_agg(ruin.schema_name || $44 || ruin.index_name, ruin) as json\n from rarely_used_indexes_num ruin\n),\n\nindex_data as (\n select\n *,\n indkey::text as columns,\n array_to_string(indclass, $45) as opclasses\n from pg_index\n where indisvalid = $46\n), redundant_indexes as (\n select\n i2.indexrelid as index_id,\n tnsp.nspname AS schema_name,\n trel.relname AS table_name,\n pg_relation_size(trel.oid) as table_size_bytes,\n irel.relname AS index_name,\n am1.amname as access_method,\n (i1.indexrelid::regclass)::text as reason,\n pg_get_indexdef(i1.indexrelid) main_index_def,\n pg_size_pretty(pg_relation_size(i1.indexrelid)) main_index_size,\n pg_get_indexdef(i2.indexrelid) index_def,\n pg_relation_size(i2.indexrelid) index_size_bytes,\n s.idx_scan as index_usage,\n quote_ident(tnsp.nspname) as formated_schema_name,\n quote_ident(irel.relname) as formated_index_name,\n quote_ident(trel.relname) AS formated_table_name,\n coalesce(nullif(quote_ident(tnsp.nspname), $47) || $48, $49) || quote_ident(trel.relname) as formated_relation_name,\n i2.opclasses\n from\n index_data as i1\n join index_data as i2 on (\n i1.indrelid = i2.indrelid \n and i1.indexrelid <> i2.indexrelid \n )\n inner join pg_opclass op1 on i1.indclass[$50] = op1.oid\n inner join pg_opclass op2 on i2.indclass[$51] = op2.oid\n inner join pg_am am1 on op1.opcmethod = am1.oid\n inner join pg_am am2 on op2.opcmethod = am2.oid\n join pg_stat_user_indexes as s on s.indexrelid = i2.indexrelid\n join pg_class as trel on trel.oid = i2.indrelid\n join pg_namespace as tnsp on trel.relnamespace = tnsp.oid\n join pg_class as irel on irel.oid = i2.indexrelid\n where\n not i1.indisprimary \n and not ( \n (i1.indisprimary or i1.indisunique)\n and (not i2.indisprimary or not i2.indisunique)\n )\n and am1.amname = am2.amname \n and (\n i2.columns like (i1.columns || $52) \n or i1.columns = i2.columns \n )\n and (\n i2.opclasses like (i1.opclasses || $53)\n or i1.opclasses = i2.opclasses\n )\n \n and pg_get_expr(i1.indexprs, i1.indrelid) is not distinct from pg_get_expr(i2.indexprs, i2.indrelid)\n \n and pg_get_expr(i1.indpred, i1.indrelid) is not distinct from pg_get_expr(i2.indpred, i2.indrelid)\n), redundant_indexes_fk as (\n select\n ri.*,\n case when fi.index_name is not null then $54 else $55 end as supports_fk\n from redundant_indexes ri\n left join fk_indexes fi on\n fi.fk_table_ref = ri.table_name\n and fi.opclasses like (ri.opclasses || $56)\n), redundant_indexes_grouped as (\n select\n index_id,\n schema_name,\n table_name,\n table_size_bytes,\n index_name,\n access_method,\n string_agg(reason, $57) as reason,\n string_agg(main_index_def, $58) as main_index_def,\n string_agg(main_index_size, $59) as main_index_size,\n index_def,\n index_size_bytes,\n index_usage,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n supports_fk\n from redundant_indexes_fk\n group by\n index_id,\n table_size_bytes,\n schema_name,\n table_name,\n index_name,\n access_method,\n index_def,\n index_size_bytes,\n index_usage,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n supports_fk\n order by index_size_bytes desc\n), redundant_indexes_num as (\n select row_number() over () num, rig.*\n from redundant_indexes_grouped rig\n limit $60\n),\nredundant_indexes_json as (\n select\n json_object_agg(rin.schema_name || $61 || rin.index_name, rin) as json\n from redundant_indexes_num rin\n), redundant_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from redundant_indexes_grouped\n),\n\ntogether as (\n select\n reason::text,\n index_id::text,\n schema_name::text,\n table_name::text,\n index_name::text,\n pg_size_pretty(index_size_bytes)::text as index_size,\n index_def::text,\n $62 as main_index_def,\n formated_index_name::text,\n formated_schema_name::text,\n formated_table_name::text,\n formated_relation_name::text\n from never_used_indexes\n union all\n select\n reason::text,\n index_id::text,\n schema_name::text,\n table_name::text,\n index_name::text,\n pg_size_pretty(index_size_bytes)::text as index_size,\n index_def::text,\n main_index_def::text,\n formated_index_name::text,\n formated_schema_name::text,\n formated_table_name::text,\n formated_relation_name::text\n from redundant_indexes\n), do_lines as (\n select format($63, max(formated_index_name), max(index_size), string_agg(reason, $64), table_name) as line\n from together t1\n group by table_name, index_name\n order by table_name, index_name\n), undo_lines as (\n select\n replace(\n format($65, max(index_def), table_name),\n $66,\n $67\n )as line\n from together t2\n group by table_name, index_name\n order by table_name, index_name\n), database_stat as (\n select\n row_to_json(dbstat)\n from (\n select\n sd.stats_reset::timestamptz(0),\n age(\n date_trunc($68,now()),\n date_trunc($69,sd.stats_reset)\n ) as stats_age,\n ((extract($70 from now()) - extract($71 from sd.stats_reset))/$72)::int as days\n from pg_stat_database sd\n where datname = current_database()\n ) dbstat\n)\n\nselect\n json_build_object(\n $73,\n (select * from never_used_indexes_json),\n $74,\n (select row_to_json(nuit) from never_used_indexes_total as nuit),\n $75,\n (select * from rarely_used_indexes_json),\n $76,\n (select row_to_json(ruit) from rarely_used_indexes_total as ruit),\n $77,\n (select * from redundant_indexes_json),\n $78,\n (select row_to_json(rit) from redundant_indexes_total as rit),\n $79,\n (select json_agg(dl.line) from do_lines as dl),\n $80,\n (select json_agg(ul.line) from undo_lines as ul),\n $81,\n (select * from database_stat)\n )",
      "calls": 1,
      "total_time": 17.574954,
      "rows": 1,
      "shared_blks_hit": 4231,
      "shared_blks_read": 1,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1127861613357849500,
      "md5": "165a0d5711fd3f71d4870770e28b4a20"
    },
    "1894946797d0e773abbd4df50a52ba7b": {
      "rownum": 39,
      "query": "select\n json_build_object($1, version(),\n $2, current_setting($3),\n $4, (select regexp_replace(current_setting($5), $6, $7)),\n $8, (select regexp_replace(current_setting($9), $10, $11)))",
      "calls": 1,
      "total_time": 17.188601,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4605761145085266400,
      "md5": "1894946797d0e773abbd4df50a52ba7b"
    },
    "6a7bb7b81c267b3641bc02ef300a4edf": {
      "rownum": 40,
      "query": "with timeouts as (\n select json_object_agg(s.name,s ) from pg_settings s where name in ($1, $2, $3)\n), locks as (\n select json_object_agg(s.name,s ) from pg_settings s where name in ($4, $5, $6, $7, $8, $9)\n), databases_stat as (\n select\n *,\n ((now() - sd.stats_reset)::interval(0)::text) as stats_reset_age\n from pg_stat_database sd\n where datname in (SELECT datname FROM pg_database WHERE datistemplate = $10)\n order by deadlocks desc\n limit $11\n), num_dbs_data as (\n select\n row_number() over () num,\n ds.*\n from databases_stat ds\n), dbs_data as (\n select json_object_agg(sd.datname, sd) from num_dbs_data sd\n), db_specified_settings as (\n select json_object_agg(dbs.database, dbs) from\n (select\n (select datname from pg_database where oid = pd.setdatabase) as database,\n *\n from pg_db_role_setting pd\n where\n setconfig::text ~ $12\n and setdatabase is not null and setdatabase <> $13\n ) dbs\n), user_specified_settings as (\n select json_object_agg(pr.rolname, pr) from pg_roles pr where rolconfig::text ~ $14\n)\nselect\n json_build_object(\n $15, (select * from timeouts), $16, (select * from locks),\n $17, (select * from dbs_data),\n $18, (select * from db_specified_settings),\n $19, (select * from user_specified_settings)\n )",
      "calls": 1,
      "total_time": 12.846303,
      "rows": 1,
      "shared_blks_hit": 16,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3081574733525319000,
      "md5": "6a7bb7b81c267b3641bc02ef300a4edf"
    },
    "bd43b8eba93ec0b66c6c3841ec5470d3": {
      "rownum": 41,
      "query": "with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n), data as (\n select\n coalesce(nullif(schemaname || $2, $3), $4) || c.relname as \"relation\",\n c.relkind,\n now() - last_autovacuum as since_last_autovacuum,\n now() - last_vacuum as since_last_vacuum,\n autovacuum_count as av_count,\n vacuum_count as v_count,\n n_tup_ins, \n n_tup_upd, \n n_tup_del,\n reltuples::int8 as pg_class_reltuples,\n n_live_tup,\n n_dead_tup,\n round((n_dead_tup::numeric * $5 / nullif(n_dead_tup + n_live_tup, $6))::numeric, $7) as dead_ratio,\n case when ot.table_id is not null then $8 else $9 end as overrided_settings\n from pg_stat_all_tables\n join pg_class c on c.oid = relid\n left join overrided_tables ot on ot.table_id = c.oid\n where reltuples > $10\n order by 13 desc\n limit $11\n), num_dead_tuples as (\n select\n row_number() over () num,\n data.*\n from data\n), dead_tuples as (\n select json_object_agg(num_dead_tuples.\"relation\", num_dead_tuples) as json from num_dead_tuples\n), database_stat as (\n select\n row_to_json(dbstat)\n from (\n select\n sd.stats_reset::timestamptz(0),\n age(\n date_trunc($12,now()),\n date_trunc($13,sd.stats_reset)\n ) as stats_age\n from pg_stat_database sd\n where datname = current_database()\n ) dbstat\n)\nselect\n json_build_object(\n $14,\n (select * from dead_tuples),\n $15,\n (select * from database_stat),\n $16,\n (select count($17) from data where overrided_settings = $18)\n )",
      "calls": 1,
      "total_time": 12.038197,
      "rows": 1,
      "shared_blks_hit": 46,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3860959321236779500,
      "md5": "bd43b8eba93ec0b66c6c3841ec5470d3"
    },
    "67126b3b2ac2533d5df8e2ed9b5ede4a": {
      "rownum": 42,
      "query": "create extension if not exists pg_stat_kcache",
      "calls": 1,
      "total_time": 6.864069,
      "rows": 0,
      "shared_blks_hit": 1416,
      "shared_blks_read": 64,
      "shared_blks_dirtied": 21,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2571546517107304400,
      "md5": "67126b3b2ac2533d5df8e2ed9b5ede4a"
    },
    "6ba1d6b0e36e2221c1e06c75bf3d81e3": {
      "rownum": 43,
      "query": "with data as (\n with fk_actions ( code, action ) as (\n values ($1, $2),\n ($3, $4),\n ($5, $6),\n ($7, $8),\n ($9, $10)\n ), fk_list as (\n select\n pg_constraint.oid as fkoid, conrelid, confrelid as parentid,\n conname,\n relname,\n nspname,\n fk_actions_update.action as update_action,\n fk_actions_delete.action as delete_action,\n conkey as key_cols\n from pg_constraint\n join pg_class on conrelid = pg_class.oid\n join pg_namespace on pg_class.relnamespace = pg_namespace.oid\n join fk_actions as fk_actions_update on confupdtype = fk_actions_update.code\n join fk_actions as fk_actions_delete on confdeltype = fk_actions_delete.code\n where contype = $11\n ), fk_attributes as (\n select fkoid, conrelid, attname, attnum\n from fk_list\n join pg_attribute on conrelid = attrelid and attnum = any(key_cols)\n order by fkoid, attnum\n ), fk_cols_list as (\n select fkoid, array_agg(attname) as cols_list\n from fk_attributes\n group by fkoid\n ), index_list as (\n select\n indexrelid as indexid,\n pg_class.relname as indexname,\n indrelid,\n indkey,\n indpred is not null as has_predicate,\n pg_get_indexdef(indexrelid) as indexdef\n from pg_index\n join pg_class on indexrelid = pg_class.oid\n where indisvalid\n ), fk_index_match as (\n select\n fk_list.*,\n indexid,\n indexname,\n indkey::int[] as indexatts,\n has_predicate,\n indexdef,\n array_length(key_cols, $12) as fk_colcount,\n array_length(indkey,$13) as index_colcount,\n round(pg_relation_size(conrelid)/($14^$15)::numeric) as table_mb,\n cols_list\n from fk_list\n join fk_cols_list using (fkoid)\n left join index_list on\n conrelid = indrelid\n and (indkey::int2[])[$16:(array_length(key_cols,$17) -$18)] operator(pg_catalog.@>) key_cols\n ), fk_perfect_match as (\n select fkoid\n from fk_index_match\n where\n (index_colcount - $19) <= fk_colcount\n and not has_predicate\n and indexdef like $20\n ), fk_index_check as (\n select $21 as issue, *, $22 as issue_sort\n from fk_index_match\n where indexid is null\n union all\n select $23 as issue, *, $24\n from fk_index_match\n where\n indexid is not null\n and fkoid not in (select fkoid from fk_perfect_match)\n ), parent_table_stats as (\n select\n fkoid,\n tabstats.relname as parent_name,\n (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as parent_writes,\n round(pg_relation_size(parentid)/($25^$26)::numeric) as parent_mb\n from pg_stat_user_tables as tabstats\n join fk_list on relid = parentid\n ), fk_table_stats as (\n select\n fkoid,\n (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as writes,\n seq_scan as table_scans\n from pg_stat_user_tables as tabstats\n join fk_list on relid = conrelid\n )\n select\n nspname as schema_name,\n relname as table_name,\n conname as fk_name,\n issue,\n table_mb,\n writes,\n table_scans,\n parent_name,\n parent_mb,\n parent_writes,\n cols_list,\n indexdef\n from fk_index_check\n join parent_table_stats using (fkoid)\n join fk_table_stats using (fkoid)\n where\n table_mb > $27\n and (\n writes > $28\n or parent_writes > $29\n or parent_mb > $30\n )\n order by issue_sort, table_mb desc, table_name, fk_name\n),\nnum_data as (\n select row_number() over () num, data.* from data limit $31\n)\nselect json_object_agg(num_data.num, num_data) from num_data",
      "calls": 1,
      "total_time": 6.797657,
      "rows": 1,
      "shared_blks_hit": 5498,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2132628873233605400,
      "md5": "6ba1d6b0e36e2221c1e06c75bf3d81e3"
    },
    "7659e119de9c5c07344d91d4fac85e2e": {
      "rownum": 44,
      "query": "select pg_reload_conf()",
      "calls": 1,
      "total_time": 6.083783,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6290564462188021000,
      "md5": "7659e119de9c5c07344d91d4fac85e2e"
    },
    "2248cfb271e4a76ca2d20d8609d7ce56": {
      "rownum": 45,
      "query": "create extension if not exists pg_stat_statements",
      "calls": 1,
      "total_time": 4.756808,
      "rows": 0,
      "shared_blks_hit": 692,
      "shared_blks_read": 125,
      "shared_blks_dirtied": 51,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5169817456611317000,
      "md5": "2248cfb271e4a76ca2d20d8609d7ce56"
    },
    "7889f773b9dea01749552b5172962b9e": {
      "rownum": 46,
      "query": "with data as (\n with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n ), step1 as (\n select\n tbl.oid tblid,\n ns.nspname as schema_name,\n tbl.relname as table_name,\n tbl.reltuples,\n tbl.relpages as heappages,\n coalesce(toast.relpages, $2) as toastpages,\n coalesce(toast.reltuples, $3) as toasttuples,\n coalesce(substring(array_to_string(tbl.reloptions, $4) from $5 for $6)::int2, $7) as fillfactor,\n current_setting($8)::numeric as bs,\n case when version() ~ $9 then $10 else $11 end as ma, \n $12 as page_hdr,\n $13 + case when max(coalesce(null_frac, $14)) > $15 then ($16 + count(*)) / $17 else $18::int end\n + case when tbl.relhasoids then $19 else $20 end as tpl_hdr_size,\n sum(($21 - coalesce(s.null_frac, $22)) * coalesce(s.avg_width, $23)) as tpl_data_size,\n bool_or(att.atttypid = $24::regtype) or count(att.attname) <> count(s.attname) as is_na\n from pg_attribute as att\n join pg_class as tbl on att.attrelid = tbl.oid and tbl.relkind = $25\n join pg_namespace as ns on ns.oid = tbl.relnamespace\n join pg_stats as s on s.schemaname = ns.nspname and s.tablename = tbl.relname and not s.inherited and s.attname = att.attname\n left join pg_class as toast on tbl.reltoastrelid = toast.oid\n where att.attnum > $26 and not att.attisdropped and s.schemaname not in ($27, $28)\n group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, tbl.relhasoids\n order by 2, 3\n ), step2 as (\n select\n *,\n (\n $29 + tpl_hdr_size + tpl_data_size + ($30 * ma)\n - case when tpl_hdr_size % ma = $31 then ma else tpl_hdr_size % ma end\n - case when ceil(tpl_data_size)::int % ma = $32 then ma else ceil(tpl_data_size)::int % ma end\n ) as tpl_size,\n bs - page_hdr as size_per_block,\n (heappages + toastpages) as tblpages\n from step1\n ), step3 as (\n select\n *,\n ceil(reltuples / ((bs - page_hdr) / tpl_size)) + ceil(toasttuples / $33) as est_tblpages,\n ceil(reltuples / ((bs - page_hdr) * fillfactor / (tpl_size * $34))) + ceil(toasttuples / $35) as est_tblpages_ff\n \n from step2\n ), step4 as (\n select\n *,\n tblpages * bs as real_size,\n (tblpages - est_tblpages) * bs as extra_size,\n case when tblpages - est_tblpages > $36 then $37 * (tblpages - est_tblpages) / tblpages::float else $38 end as extra_ratio,\n (tblpages - est_tblpages_ff) * bs as bloat_size,\n case when tblpages - est_tblpages_ff > $39 then $40 * (tblpages - est_tblpages_ff) / tblpages::float else $41 end as bloat_ratio\n \n from step3\n left join pg_stat_user_tables su on su.relid = tblid\n \n \n )\n select\n case is_na when $42 then $43 else $44 end as \"Is N/A\",\n coalesce(nullif(step4.schema_name, $45) || $46, $47) || step4.table_name as \"Table\",\n pg_size_pretty(real_size::numeric) as \"Size\",\n case\n when extra_size::numeric >= $48\n then extra_size::numeric\n else $49\n end as \"Extra size bytes\",\n extra_ratio as \"Extra_ratio\",\n case\n when extra_size::numeric >= $50\n then $51 || pg_size_pretty(extra_size::numeric)::text || $52 || round(extra_ratio::numeric, $53)::text || $54\n else $55\n end as \"Extra\",\n case\n when bloat_size::numeric >= $56\n then bloat_size::numeric\n else $57\n end as \"Bloat size bytes\",\n bloat_ratio as \"Bloat ratio\",\n case\n when bloat_size::numeric >= $58\n then $59 || pg_size_pretty(bloat_size::numeric)::text || $60 || round(bloat_ratio::numeric, $61)::text || $62\n else $63\n end as \"Bloat estimate\",\n real_size as \"Real size bytes\",\n case\n when (real_size - bloat_size)::numeric >=$64\n then $65 || pg_size_pretty((real_size - bloat_size)::numeric)\n else $66\n end as \"Live\",\n case\n when (real_size - bloat_size)::numeric >=$67\n then (real_size - bloat_size)::numeric\n else $68\n end as \"Live bytes\",\n greatest(last_autovacuum, last_vacuum)::timestamp(0)::text\n || case greatest(last_autovacuum, last_vacuum)\n when last_autovacuum then $69\n else $70 end as \"Last Vaccuum\",\n (\n select\n coalesce(substring(array_to_string(reloptions, $71) from $72)::smallint, $73)\n from pg_class\n where oid = tblid\n ) as \"Fillfactor\",\n case when ot.table_id is not null then $74 else $75 end as overrided_settings\n from step4\n left join overrided_tables ot on ot.table_id = step4.tblid\n order by bloat_size desc nulls last\n), limited_data as (\n select * from data limit $76\n), num_limited_data as (\n select\n row_number() over () num,\n limited_data.*\n from limited_data\n), limited_json_data as (\n select json_object_agg(ld.\"Table\", ld) as json from num_limited_data ld\n), total_data as (\n select\n sum($77) as count,\n sum(\"Extra size bytes\") as \"Extra size bytes sum\",\n sum(\"Real size bytes\") as \"Real size bytes sum\",\n sum(\"Bloat size bytes\") as \"Bloat size bytes sum\",\n (sum(\"Bloat size bytes\")::numeric/sum(\"Real size bytes\")::numeric * $78) as \"Bloat ratio\",\n sum(\"Extra size bytes\") as \"Extra size bytes sum\"\n from data\n)\nselect\n json_build_object(\n $79,\n (select * from limited_json_data),\n $80,\n (select row_to_json(total_data) from total_data),\n $81,\n (select count($82) from limited_data where overrided_settings = $83)\n )",
      "calls": 1,
      "total_time": 4.538099,
      "rows": 1,
      "shared_blks_hit": 1384,
      "shared_blks_read": 14,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8785073352377354000,
      "md5": "7889f773b9dea01749552b5172962b9e"
    },
    "c364bca5ada158a48062048f195078dd": {
      "rownum": 47,
      "query": "select json_object_agg(s.name, s) from (select * from pg_settings s order by category, name) s",
      "calls": 1,
      "total_time": 4.286586,
      "rows": 1,
      "shared_blks_hit": 3,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3946074279987536000,
      "md5": "c364bca5ada158a48062048f195078dd"
    },
    "d1e7d1edf6852267259e078548d505f7": {
      "rownum": 48,
      "query": "select json_object_agg(s.name, s) from (select * from pg_settings s order by name) s",
      "calls": 1,
      "total_time": 3.59646,
      "rows": 1,
      "shared_blks_hit": 3,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4991387957218323,
      "md5": "d1e7d1edf6852267259e078548d505f7"
    },
    "aff793375e45c6965e52f0a213e34c8b": {
      "rownum": 49,
      "query": "with data as (\n select\n ae.name,\n installed_version,\n default_version,\n case when installed_version <> default_version then $1 end as is_old\n from pg_extension e\n join pg_available_extensions ae on extname = ae.name\n order by ae.name\n ), withsettins as (\n select\n data.*,\n (select json_object_agg(name, setting)\n from pg_settings\n where name ~ data.name) as settings from data\n order by name\n )\n select json_object_agg(withsettins.name, withsettins) as json from withsettins",
      "calls": 1,
      "total_time": 2.970028,
      "rows": 1,
      "shared_blks_hit": 9,
      "shared_blks_read": 1,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8799259724768328000,
      "md5": "aff793375e45c6965e52f0a213e34c8b"
    },
    "9ecd06ad8170e0ecf1eedad167e485df": {
      "rownum": 50,
      "query": "with stat_statements as (\n select json_object_agg(pg_settings.name, pg_settings) as json from pg_settings where name ~ $1\n), kcache as (\n select json_object_agg(pg_settings.name, pg_settings) as json from pg_settings where name ~ $2\n)\nselect json_build_object($3, (select * from stat_statements), $4, (select * from kcache))",
      "calls": 1,
      "total_time": 2.132505,
      "rows": 1,
      "shared_blks_hit": 3,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3798127187466836000,
      "md5": "9ecd06ad8170e0ecf1eedad167e485df"
    },
    "a335c7387b3dc3bdef0a67bbac7223b1": {
      "rownum": 51,
      "query": "with settings_count as (\n select json_object_agg(coalesce(s.sourcefile, $1), s.count)\n from (select sourcefile, count(ps.*) as count from pg_settings ps group by 1) s\n), changes as (\n select\n json_agg(json_build_object(\n $2, s.sourcefile,\n $3, s.count,\n $4, s.examples\n ))\n from (\n select\n sourcefile,\n count(ps.*) as count,\n (json_agg(name order by name) filter (where sourcefile is not null)) as examples\n from pg_settings ps group by 1\n ) s\n)\nselect json_build_object($5, (select * from settings_count), $6, (select * from changes))",
      "calls": 1,
      "total_time": 1.894884,
      "rows": 1,
      "shared_blks_hit": 3,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8111815895428488000,
      "md5": "a335c7387b3dc3bdef0a67bbac7223b1"
    },
    "c718199ddad5bf5b586dd63d477c82ef": {
      "rownum": 52,
      "query": "with global_settings as (\n select\n json_object_agg(s.name, s)\n from (\n select *\n from pg_settings\n where (\n name ~ $1\n or name in (\n $2,\n $3\n )\n )\n order by name\n ) s\n), table_settings as (\n select\n json_object_agg(s.namespace || $4 || s.relname, s)\n from\n (select\n (select nspname from pg_namespace where oid = relnamespace)\n namespace,\n relname,\n reloptions\n from pg_class\n where reloptions::text ~ $5\n order by namespace, relname\n ) s\n)\nselect json_build_object($6, (select * from global_settings), $7, (select * from table_settings))",
      "calls": 1,
      "total_time": 1.51814,
      "rows": 1,
      "shared_blks_hit": 19,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6436803300980800000,
      "md5": "c718199ddad5bf5b586dd63d477c82ef"
    },
    "5a164eb9f58a7c5ac5c62b677c5dc0f1": {
      "rownum": 53,
      "query": "with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n), per_instance as (\n select\n datname,\n age(datfrozenxid),\n round(\n age(datfrozenxid)::numeric * $2\n / ($3 * $4^$5 - current_setting($6)::numeric\n )::numeric,\n $7\n ) as capacity_used,\n datfrozenxid,\n (age(datfrozenxid) > $8)::int as warning\n from pg_database\n order by 3 desc\n limit $9\n), num_per_instance as (\n select\n row_number() over () num,\n per_instance.*\n from per_instance\n limit $10\n), per_database as (\n select\n coalesce(nullif(n.nspname || $11, $12), $13) || c.relname as relation,\n greatest(age(c.relfrozenxid), age(t.relfrozenxid)) as age,\n round(\n (greatest(age(c.relfrozenxid), age(t.relfrozenxid))::numeric * \n $14 / ($15 * $16^$17 - current_setting($18)::numeric)::numeric),\n $19\n ) as capacity_used,\n c.relfrozenxid as rel_relfrozenxid,\n t.relfrozenxid as toast_relfrozenxid,\n (greatest(age(c.relfrozenxid), age(t.relfrozenxid)) > $20)::int as warning,\n case when ot.table_id is not null then $21 else $22 end as overrided_settings\n from pg_class c\n join pg_namespace n on c.relnamespace = n.oid\n left join pg_class t ON c.reltoastrelid = t.oid\n left join overrided_tables ot on ot.table_id = c.oid\n where c.relkind IN ($23, $24) and not (n.nspname = $25 and c.relname <> $26)\n and n.nspname <> $27\n order by 3 desc\n limit $28\n), num_per_database as (\n select\n row_number() over () num,\n per_database.*\n from per_database\n)\nselect \n json_build_object(\n $29, \n (select json_object_agg(i.datname, i) from num_per_instance i),\n $30, \n (select json_object_agg(d.relation, d) from num_per_database d),\n $31,\n (select count($32) from per_database where overrided_settings = $33)\n )",
      "calls": 1,
      "total_time": 0.783196,
      "rows": 1,
      "shared_blks_hit": 45,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5285619166238960000,
      "md5": "5a164eb9f58a7c5ac5c62b677c5dc0f1"
    },
    "d4af5014eea7ebcc86e001c30a8497fe": {
      "rownum": 54,
      "query": "with fk_indexes as (\n select\n schemaname as schema_name,\n (indexrelid::regclass)::text as index_name,\n (relid::regclass)::text as table_name,\n (confrelid::regclass)::text as fk_table_ref,\n array_to_string(indclass, $1) as opclasses\n from\n pg_stat_user_indexes\n join pg_index using (indexrelid)\n left join pg_constraint\n on array_to_string(indkey, $2) = array_to_string(conkey, $3)\n and schemaname = (connamespace::regnamespace)::text\n and conrelid = relid\n and contype = $4\n where idx_scan = $5\n and indisunique is false\n and conkey is not null \n), data as (\n select\n pci.relname as index_name,\n pn.nspname as schema_name,\n pct.relname as table_name,\n quote_ident(pn.nspname) as formated_schema_name,\n quote_ident(pci.relname) as formated_index_name,\n quote_ident(pct.relname) as formated_table_name,\n coalesce(nullif(quote_ident(pn.nspname), $6) || $7, $8) || quote_ident(pct.relname) as formated_relation_name,\n pg_relation_size(pidx.indexrelid) index_size_bytes,\n format(\n $9,\n quote_ident(pci.relname),\n $10,\n pct.relname) as drop_code,\n replace(\n format($11, pg_get_indexdef(pidx.indexrelid), pct.relname),\n $12,\n $13\n ) as revert_code,\n case when fi.index_name is not null then $14 else $15 end as supports_fk\n from pg_index pidx\n join pg_class as pci on pci.oid = pidx.indexrelid\n join pg_class as pct on pct.oid = pidx.indrelid\n left join pg_namespace pn on pn.oid = pct.relnamespace\n left join fk_indexes fi on\n fi.fk_table_ref = pct.relname\n and fi.opclasses like (array_to_string(pidx.indclass, $16) || $17)\n where pidx.indisvalid = $18\n), data_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum\n from data\n), num_data as (\n select\n row_number() over () num,\n data.*\n from data\n limit $19\n), data_json as (\n select\n json_object_agg(d.schema_name || $20 || d.index_name, d) as json\n from num_data d\n)\nselect\n json_build_object(\n $21,\n (select * from data_json),\n $22,\n (select row_to_json(dt) from data_total as dt)\n )",
      "calls": 1,
      "total_time": 0.757043,
      "rows": 1,
      "shared_blks_hit": 107,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3142345568409161000,
      "md5": "d4af5014eea7ebcc86e001c30a8497fe"
    },
    "495d53c9cc7d5987cd4b80748fb37076": {
      "rownum": 55,
      "query": "select \n json_object_agg(s.name, s) \n from pg_settings s \n where \n name in ($1,\n $2,\n $3,\n $4,\n $5,\n $6,\n $7,\n $8,\n $9\n )",
      "calls": 1,
      "total_time": 0.752943,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5426733085752100000,
      "md5": "495d53c9cc7d5987cd4b80748fb37076"
    },
    "fd6c2e34a8c50544f08e159556d121d7": {
      "rownum": 56,
      "query": "select json_object_agg(s.name, s) from pg_settings s where name in ($1, $2, $3, $4, $5, $6, $7)",
      "calls": 1,
      "total_time": 0.74937,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2153587197816942300,
      "md5": "fd6c2e34a8c50544f08e159556d121d7"
    },
    "1ebabeb2ac7f4d4a898575cc2c60b7d8": {
      "rownum": 57,
      "query": "select setting::integer / $1 from pg_settings where name = $2",
      "calls": 1,
      "total_time": 0.647136,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6797651002030005000,
      "md5": "1ebabeb2ac7f4d4a898575cc2c60b7d8"
    },
    "c1f4ed847457d37175cc7bce9ac519eb": {
      "rownum": 58,
      "query": "create table t_fillfactor (i int) with (fillfactor=60)",
      "calls": 1,
      "total_time": 0.602298,
      "rows": 0,
      "shared_blks_hit": 130,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8553739293807484000,
      "md5": "c1f4ed847457d37175cc7bce9ac519eb"
    },
    "7456d946e18be13835e3b55e8d748e60": {
      "rownum": 59,
      "query": "select * from pg_is_in_recovery()",
      "calls": 23,
      "total_time": 0.337557,
      "rows": 23,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -671927629304129800,
      "md5": "7456d946e18be13835e3b55e8d748e60"
    },
    "7cc853be1f5fb04c0f06328ca53d08c9": {
      "rownum": 60,
      "query": "BEGIN",
      "calls": 52,
      "total_time": 0.318214,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2397681704071011000,
      "md5": "7cc853be1f5fb04c0f06328ca53d08c9"
    },
    "a9962260d647103f2b0cd53966dc7578": {
      "rownum": 61,
      "query": "with data as (\n select\n coalesce(usename, $1) as \"User\",\n coalesce(datname, $2) as \"DB\",\n coalesce(state, $3) as \"Current State\",\n count(*) as \"Count\",\n count(*) filter (where state_change < now() - interval $4) as \"State changed >1m ago\",\n count(*) filter (where state_change < now() - interval $5) as \"State changed >1h ago\"\n from pg_stat_activity\n group by grouping sets ((datname, usename, state), (usename, state), ())\n order by\n usename is null desc,\n datname is null desc,\n 2 asc,\n 3 asc,\n count(*) desc\n),\nnum_data as (\n select row_number() over () num, data.*\n from data\n limit $6\n)\nselect json_object_agg(num_data.num, num_data) from num_data",
      "calls": 1,
      "total_time": 0.277094,
      "rows": 1,
      "shared_blks_hit": 19,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2128461986801663200,
      "md5": "a9962260d647103f2b0cd53966dc7578"
    },
    "29085b8d4aee87c22717239f135a04d3": {
      "rownum": 62,
      "query": "create schema test_schema",
      "calls": 1,
      "total_time": 0.255625,
      "rows": 0,
      "shared_blks_hit": 13,
      "shared_blks_read": 4,
      "shared_blks_dirtied": 4,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4703648938658324000,
      "md5": "29085b8d4aee87c22717239f135a04d3"
    },
    "dba4f791bc7a3f5a8400f65f4e1207e4": {
      "rownum": 63,
      "query": "create role username superuser login",
      "calls": 1,
      "total_time": 0.234658,
      "rows": 0,
      "shared_blks_hit": 16,
      "shared_blks_read": 4,
      "shared_blks_dirtied": 4,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8729823270316331000,
      "md5": "dba4f791bc7a3f5a8400f65f4e1207e4"
    },
    "812099a5063a18c8cf681a935c942309": {
      "rownum": 64,
      "query": "create user checkup_test_user with encrypted password 'mypass'",
      "calls": 1,
      "total_time": 0.221388,
      "rows": 0,
      "shared_blks_hit": 10,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5031890138099652000,
      "md5": "812099a5063a18c8cf681a935c942309"
    },
    "d95ae2fca4597d2a0dc26455a5e74aa6": {
      "rownum": 65,
      "query": "alter user checkup_test_user set lock_timeout to '3s'",
      "calls": 1,
      "total_time": 0.194769,
      "rows": 0,
      "shared_blks_hit": 4,
      "shared_blks_read": 2,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2426759691711615000,
      "md5": "d95ae2fca4597d2a0dc26455a5e74aa6"
    },
    "bc280dab388607c84297299d1f9bcca4": {
      "rownum": 66,
      "query": "SELECT d.datname as \"Name\",\n pg_catalog.pg_get_userbyid(d.datdba) as \"Owner\",\n pg_catalog.pg_encoding_to_char(d.encoding) as \"Encoding\",\n d.datcollate as \"Collate\",\n d.datctype as \"Ctype\",\n pg_catalog.array_to_string(d.datacl, $1) AS \"Access privileges\"\nFROM pg_catalog.pg_database d\nORDER BY 1",
      "calls": 3,
      "total_time": 0.185231,
      "rows": 9,
      "shared_blks_hit": 18,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8287348214389432000,
      "md5": "bc280dab388607c84297299d1f9bcca4"
    },
    "f3ee8a6c27aa79b479afe2fa3aa60325": {
      "rownum": 67,
      "query": "ALTER TABLE t_with_bloat SET (autovacuum_vacuum_scale_factor=0.01)",
      "calls": 1,
      "total_time": 0.179985,
      "rows": 0,
      "shared_blks_hit": 30,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 5,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8909888645023044000,
      "md5": "f3ee8a6c27aa79b479afe2fa3aa60325"
    },
    "b111e794fc073fe9b7daead725d2d8bf": {
      "rownum": 68,
      "query": "explain select count(*) from t_slw_q",
      "calls": 1,
      "total_time": 0.168493,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 9001527758190093000,
      "md5": "b111e794fc073fe9b7daead725d2d8bf"
    },
    "1a84ac189ed80931af4979651246af34": {
      "rownum": 69,
      "query": "select json_object_agg(s.name, s) from (select * from pg_config s order by name) s",
      "calls": 1,
      "total_time": 0.153679,
      "rows": 1,
      "shared_blks_hit": 3,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5128248192178664000,
      "md5": "1a84ac189ed80931af4979651246af34"
    },
    "6900d1898f59ae514cb623e3ad68b3cc": {
      "rownum": 70,
      "query": "grant all privileges on database checkup_test_db to checkup_test_user",
      "calls": 1,
      "total_time": 0.135688,
      "rows": 0,
      "shared_blks_hit": 13,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 4,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3308233476612417000,
      "md5": "6900d1898f59ae514cb623e3ad68b3cc"
    },
    "4fffeff1bceab3d9a56c0449bf87be92": {
      "rownum": 71,
      "query": "select * from t_rar_q where id = $1",
      "calls": 1,
      "total_time": 0.071304,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 4,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4815970342114997000,
      "md5": "4fffeff1bceab3d9a56c0449bf87be92"
    },
    "4638bff6d1e2e5363197e81906a2d18e": {
      "rownum": 72,
      "query": "COMMIT",
      "calls": 51,
      "total_time": 0.060969,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3694949039461716500,
      "md5": "4638bff6d1e2e5363197e81906a2d18e"
    },
    "fce27aa8d3ba233ed722732c5d7e738e": {
      "rownum": 73,
      "query": "alter database checkup_test_db set lock_timeout = '4s'",
      "calls": 1,
      "total_time": 0.054079,
      "rows": 0,
      "shared_blks_hit": 8,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1842882532482576600,
      "md5": "fce27aa8d3ba233ed722732c5d7e738e"
    },
    "1f367bdb1e0f5112ed7ce2fa38c9f6c7": {
      "rownum": 74,
      "query": "select\n datname\n from pg_database\n where datname not in ($1, $2, $3)\n order by datname",
      "calls": 1,
      "total_time": 0.041432,
      "rows": 2,
      "shared_blks_hit": 4,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4276799848214763500,
      "md5": "1f367bdb1e0f5112ed7ce2fa38c9f6c7"
    },
    "5bdd480514550718495e7d315cf3016b": {
      "rownum": 75,
      "query": "set statement_timeout to '20ms'",
      "calls": 1,
      "total_time": 0.026287,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3987058320180519000,
      "md5": "5bdd480514550718495e7d315cf3016b"
    },
    "80e1e50d7c439157cc6404c6d39cb2d6": {
      "rownum": 76,
      "query": "SELECT pg_catalog.set_config($1, $2, $3)",
      "calls": 1,
      "total_time": 0.025633,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2111374520580565500,
      "md5": "80e1e50d7c439157cc6404c6d39cb2d6"
    },
    "9f1f75b8fe45c5c86828c73cd91eaa7b": {
      "rownum": 77,
      "query": "SELECT pg_catalog.pg_tablespace_location(oid)\n FROM pg_catalog.pg_tablespace\n WHERE pg_tablespace_location(oid) ~ $1",
      "calls": 1,
      "total_time": 0.02412,
      "rows": 0,
      "shared_blks_hit": 1,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8065068459892479000,
      "md5": "9f1f75b8fe45c5c86828c73cd91eaa7b"
    },
    "f573e8f4337efd8d61bdb6b64f633b51": {
      "rownum": 78,
      "query": "set statement_timeout to 0",
      "calls": 1,
      "total_time": 0.010506,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4565690638491063000,
      "md5": "f573e8f4337efd8d61bdb6b64f633b51"
    },
    "2bc6a366e7c1e6925c607ea2d04a3af2": {
      "rownum": 79,
      "query": "show data_directory",
      "calls": 1,
      "total_time": 0.009353,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5803563320932421000,
      "md5": "2bc6a366e7c1e6925c607ea2d04a3af2"
    },
    "79baeef9784b9c7c723a58de38514504": {
      "rownum": 80,
      "query": "show stats_temp_directory",
      "calls": 1,
      "total_time": 0.009175,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2855945610335484400,
      "md5": "79baeef9784b9c7c723a58de38514504"
    },
    "ea35c12a667f2f0132c117774603331a": {
      "rownum": 81,
      "query": "SELECT version()",
      "calls": 1,
      "total_time": 0.009114,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2970500937162639000,
      "md5": "ea35c12a667f2f0132c117774603331a"
    },
    "20971435e60309a4f2add938f5f9af93": {
      "rownum": 82,
      "query": "SHOW server_version",
      "calls": 1,
      "total_time": 0.008715,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7592958026581161000,
      "md5": "20971435e60309a4f2add938f5f9af93"
    },
    "237ceda368441b2e293a5e91edbd4af8": {
      "rownum": 83,
      "query": "show log_directory",
      "calls": 1,
      "total_time": 0.008382,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6193504009202493000,
      "md5": "237ceda368441b2e293a5e91edbd4af8"
    },
    "b02f03aafc2cffc9b5865ef22c63bec5": {
      "rownum": 84,
      "query": "BEGIN",
      "calls": 1,
      "total_time": 0.005762,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2397681704071011000,
      "md5": "b02f03aafc2cffc9b5865ef22c63bec5"
    },
    "568c12a24783a640400e049b8ab87482": {
      "rownum": 85,
      "query": "COMMIT",
      "calls": 1,
      "total_time": 0.001088,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3694949039461716500,
      "md5": "568c12a24783a640400e049b8ab87482"
    }
  }
}
