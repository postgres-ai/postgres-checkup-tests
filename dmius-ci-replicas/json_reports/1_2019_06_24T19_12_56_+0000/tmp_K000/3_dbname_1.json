{
  "snapshot_timestamptz": "2019-06-24T19:13:59.973492+00:00",
  "snapshot_timestamptz_s": 1561403639.97349,
  "queries": {
    "5ea24c6fa36fca74368f683ce46db5e0": {
      "rownum": 1,
      "query": "create table t_slw_q as select id::int8 from generate_series(0, 10000000) _(id)",
      "calls": 1,
      "total_time": 31502.23001,
      "rows": 0,
      "shared_blks_hit": 130,
      "shared_blks_read": 44248,
      "shared_blks_dirtied": 44248,
      "shared_blks_written": 42200,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 17090,
      "temp_blks_written": 17090,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -837353630728469800,
      "md5": "5ea24c6fa36fca74368f683ce46db5e0"
    },
    "fc89994603784033979249977e304289": {
      "rownum": 2,
      "query": "VACUUM ANALYZE",
      "calls": 1,
      "total_time": 15369.366458,
      "rows": 0,
      "shared_blks_hit": 133269,
      "shared_blks_read": 177158,
      "shared_blks_dirtied": 90637,
      "shared_blks_written": 77076,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4922882474069691000,
      "md5": "fc89994603784033979249977e304289"
    },
    "8af1e5f39b7de7d8eeaffad3d8acd54b": {
      "rownum": 3,
      "query": "update t_rar_q set t_dat=$1 where t_dat between $2 and $3",
      "calls": 9,
      "total_time": 10477.884235,
      "rows": 745727,
      "shared_blks_hit": 1526156,
      "shared_blks_read": 17349,
      "shared_blks_dirtied": 11980,
      "shared_blks_written": 8111,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3222149299978340400,
      "md5": "8af1e5f39b7de7d8eeaffad3d8acd54b"
    },
    "8729d45b34fea2d78356073d4de81396": {
      "rownum": 4,
      "query": "update t_with_bloat set i = i",
      "calls": 1,
      "total_time": 6196.584526,
      "rows": 1000000,
      "shared_blks_hit": 2013316,
      "shared_blks_read": 8819,
      "shared_blks_dirtied": 8818,
      "shared_blks_written": 4485,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4145010178302556700,
      "md5": "8729d45b34fea2d78356073d4de81396"
    },
    "f04600d0b0c9a2d20505d593f69c9b7f": {
      "rownum": 5,
      "query": "VACUUM (ANALYZE)",
      "calls": 1,
      "total_time": 5590.91043,
      "rows": 0,
      "shared_blks_hit": 54646,
      "shared_blks_read": 87433,
      "shared_blks_dirtied": 14587,
      "shared_blks_written": 12034,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 613725734663719400,
      "md5": "f04600d0b0c9a2d20505d593f69c9b7f"
    },
    "32f5ef2ab3cfc8ba05d96229f852c456": {
      "rownum": 6,
      "query": "create table t_with_redundant_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 5096.848312,
      "rows": 0,
      "shared_blks_hit": 127,
      "shared_blks_read": 4426,
      "shared_blks_dirtied": 4427,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5095830603244401000,
      "md5": "32f5ef2ab3cfc8ba05d96229f852c456"
    },
    "9496008daf0f193d85061c9f64bde9ab": {
      "rownum": 7,
      "query": "create table t_red_fk_2 as select id, (random() * 1000000)::int8 as r_t1_id from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 3421.449015,
      "rows": 0,
      "shared_blks_hit": 140,
      "shared_blks_read": 5406,
      "shared_blks_dirtied": 5406,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 591824813582986000,
      "md5": "9496008daf0f193d85061c9f64bde9ab"
    },
    "2708cb9f644092f24be600bdcf8e0e26": {
      "rownum": 8,
      "query": "create table t_with_redundant_idx as select id, id as f1, id as f2, id as f3, id as f4 from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 3386.788836,
      "rows": 0,
      "shared_blks_hit": 158,
      "shared_blks_read": 6370,
      "shared_blks_dirtied": 6370,
      "shared_blks_written": 4815,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2527906257619262000,
      "md5": "2708cb9f644092f24be600bdcf8e0e26"
    },
    "d16ce3233d3d18f9e990387d5892ee22": {
      "rownum": 9,
      "query": "create table public.t_with_redundant_ref_idx as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2682.037193,
      "rows": 0,
      "shared_blks_hit": 124,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4425,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4227063200314075600,
      "md5": "d16ce3233d3d18f9e990387d5892ee22"
    },
    "c8703f324c1fb37854d9a2c6edbaa6a2": {
      "rownum": 10,
      "query": "create index r_red_fk_1_X_idx on t_red_fk_1(id)",
      "calls": 1,
      "total_time": 2582.281663,
      "rows": 0,
      "shared_blks_hit": 1142,
      "shared_blks_read": 1198,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1251,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3969450259942249000,
      "md5": "c8703f324c1fb37854d9a2c6edbaa6a2"
    },
    "e722b82f5ebb6dbabf7e05bd0004d039": {
      "rownum": 11,
      "query": "create table t_rar_q as select id, (random() * 1000000)::int8 as t_dat from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 2538.325954,
      "rows": 0,
      "shared_blks_hit": 148,
      "shared_blks_read": 5455,
      "shared_blks_dirtied": 5424,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8726250694613120000,
      "md5": "e722b82f5ebb6dbabf7e05bd0004d039"
    },
    "7d09632ff93304084401533d8f67aa16": {
      "rownum": 12,
      "query": "create table t_red_fk_1 as select id::int8 from generate_series(0, 1000000) _(id)",
      "calls": 1,
      "total_time": 2287.95862,
      "rows": 0,
      "shared_blks_hit": 127,
      "shared_blks_read": 4430,
      "shared_blks_dirtied": 4429,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5601151487238124000,
      "md5": "7d09632ff93304084401533d8f67aa16"
    },
    "3f094705882eaade4441c4dfbc1809b9": {
      "rownum": 13,
      "query": "create table t_with_unused_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2249.287366,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4425,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -678916242629262500,
      "md5": "3f094705882eaade4441c4dfbc1809b9"
    },
    "8bd7f2c2ba1ee035dd61d0040f578590": {
      "rownum": 14,
      "query": "create table test_schema.t_with_invalid_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2247.603523,
      "rows": 0,
      "shared_blks_hit": 130,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4432,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5156236148593934000,
      "md5": "8bd7f2c2ba1ee035dd61d0040f578590"
    },
    "3ebee924ec35c0d73b9480782463f72e": {
      "rownum": 15,
      "query": "create unique index t_with_redundant_idx_f1_uniq on t_with_redundant_idx (f1)",
      "calls": 1,
      "total_time": 2029.580051,
      "rows": 0,
      "shared_blks_hit": 1251,
      "shared_blks_read": 2180,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1566471017150549200,
      "md5": "3ebee924ec35c0d73b9480782463f72e"
    },
    "ef0f4334b8f15b0a142c41903e836106": {
      "rownum": 16,
      "query": "create table exp_redundant.t_with_redundant_ref_idx as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 1973.199796,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4426,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1861943955546907400,
      "md5": "ef0f4334b8f15b0a142c41903e836106"
    },
    "85058944e069d1ab2406dcb7614028c3": {
      "rownum": 17,
      "query": "create table t_with_bloat as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 1930.073552,
      "rows": 0,
      "shared_blks_hit": 132,
      "shared_blks_read": 4429,
      "shared_blks_dirtied": 4429,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6446764050704029000,
      "md5": "85058944e069d1ab2406dcb7614028c3"
    },
    "41649b5376672435db270b265abd719b": {
      "rownum": 18,
      "query": "create index r_red_fk_2_fk_idx on t_red_fk_2(r_t1_id)",
      "calls": 1,
      "total_time": 1694.551993,
      "rows": 0,
      "shared_blks_hit": 1146,
      "shared_blks_read": 1779,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2801630118753177600,
      "md5": "41649b5376672435db270b265abd719b"
    },
    "1657dd3ac6a8396cda288ccf95b3e93e": {
      "rownum": 19,
      "query": "create index concurrently t_with_redundant_idx_f3_1 on t_with_redundant_idx(f3)",
      "calls": 1,
      "total_time": 1391.555921,
      "rows": 0,
      "shared_blks_hit": 3757,
      "shared_blks_read": 8816,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7990293000632035000,
      "md5": "1657dd3ac6a8396cda288ccf95b3e93e"
    },
    "eb413a8ade520c34aa6278929cd8b8d0": {
      "rownum": 20,
      "query": "create index concurrently i_redundant_1 on t_with_redundant_index(i)",
      "calls": 1,
      "total_time": 1218.53908,
      "rows": 0,
      "shared_blks_hit": 3251,
      "shared_blks_read": 6345,
      "shared_blks_dirtied": 1289,
      "shared_blks_written": 1255,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1265,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 566438153080519400,
      "md5": "eb413a8ade520c34aa6278929cd8b8d0"
    },
    "76531a1eb8e34ee84b9f6f32762a30e1": {
      "rownum": 21,
      "query": "create index concurrently i_unused on t_with_unused_index(i)",
      "calls": 1,
      "total_time": 1215.981818,
      "rows": 0,
      "shared_blks_hit": 3314,
      "shared_blks_read": 6289,
      "shared_blks_dirtied": 1228,
      "shared_blks_written": 1191,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1263,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6612128672608002000,
      "md5": "76531a1eb8e34ee84b9f6f32762a30e1"
    },
    "179dd95fcd8662bf4e071266e75a8377": {
      "rownum": 22,
      "query": "create index concurrently t_with_redundant_idx_id on t_with_redundant_idx(id)",
      "calls": 1,
      "total_time": 1214.941016,
      "rows": 0,
      "shared_blks_hit": 3434,
      "shared_blks_read": 9145,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 877,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5967467509848557000,
      "md5": "179dd95fcd8662bf4e071266e75a8377"
    },
    "59e32b402631edd68f57233d02a6ff1c": {
      "rownum": 23,
      "query": "alter table t_with_redundant_idx add primary key (id)",
      "calls": 1,
      "total_time": 1211.214309,
      "rows": 0,
      "shared_blks_hit": 3247,
      "shared_blks_read": 6633,
      "shared_blks_dirtied": 4329,
      "shared_blks_written": 4290,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3416651331628416000,
      "md5": "59e32b402631edd68f57233d02a6ff1c"
    },
    "df3e7ad51d29398d30aebde32df0d71d": {
      "rownum": 24,
      "query": "create index concurrently t_with_redundant_idx_f2 on t_with_redundant_idx(f2)",
      "calls": 1,
      "total_time": 1209.514096,
      "rows": 0,
      "shared_blks_hit": 3677,
      "shared_blks_read": 8893,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 323,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1902759977384827000,
      "md5": "df3e7ad51d29398d30aebde32df0d71d"
    },
    "62992e0ccb57f6bdfda778c7c473e8ad": {
      "rownum": 25,
      "query": "create index t_with_redundant_ref_idx_1 on exp_redundant.t_with_redundant_ref_idx using btree (i)",
      "calls": 1,
      "total_time": 1200.06981,
      "rows": 0,
      "shared_blks_hit": 1006,
      "shared_blks_read": 1738,
      "shared_blks_dirtied": 1750,
      "shared_blks_written": 1704,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 3916,
      "temp_blks_written": 2934,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -395938069363296600,
      "md5": "62992e0ccb57f6bdfda778c7c473e8ad"
    },
    "479aad6eb92a27d10c03fb12a793614e": {
      "rownum": 26,
      "query": "create index concurrently t_with_redundant_idx_f1 on t_with_redundant_idx(f1)",
      "calls": 1,
      "total_time": 1191.253348,
      "rows": 0,
      "shared_blks_hit": 3609,
      "shared_blks_read": 8961,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7862275411983427000,
      "md5": "479aad6eb92a27d10c03fb12a793614e"
    },
    "10ea71b17cbe4e8574737f13d9aa74a7": {
      "rownum": 27,
      "query": "create index concurrently t_with_redundant_idx_f1_f2 on t_with_redundant_idx(f1,f2)",
      "calls": 1,
      "total_time": 1177.660047,
      "rows": 0,
      "shared_blks_hit": 3925,
      "shared_blks_read": 8678,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8920212056722243000,
      "md5": "10ea71b17cbe4e8574737f13d9aa74a7"
    },
    "287d9693318affc139279ec76e414f24": {
      "rownum": 28,
      "query": "create index concurrently t_with_redundant_idx_f3_2 on t_with_redundant_idx(f3)",
      "calls": 1,
      "total_time": 1176.902975,
      "rows": 0,
      "shared_blks_hit": 3898,
      "shared_blks_read": 8672,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8565802378619238000,
      "md5": "287d9693318affc139279ec76e414f24"
    },
    "7035f68c6b282d8119eec6722d1d3abc": {
      "rownum": 29,
      "query": "create index concurrently i_redundant_2 on t_with_redundant_index(i)",
      "calls": 1,
      "total_time": 1174.121594,
      "rows": 0,
      "shared_blks_hit": 3343,
      "shared_blks_read": 6302,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1304,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5045454327338548000,
      "md5": "7035f68c6b282d8119eec6722d1d3abc"
    },
    "d2b42fdb3e69ab37ae920aa6154580d5": {
      "rownum": 30,
      "query": "alter table t_red_fk_1 add primary key (id)",
      "calls": 1,
      "total_time": 1167.052232,
      "rows": 0,
      "shared_blks_hit": 3213,
      "shared_blks_read": 3651,
      "shared_blks_dirtied": 2383,
      "shared_blks_written": 2345,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1266,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7202543407834562000,
      "md5": "d2b42fdb3e69ab37ae920aa6154580d5"
    },
    "1e7bc5cce40a35c4730e436ea664a3f9": {
      "rownum": 31,
      "query": "create index concurrently t_with_redundant_idx_f1_2 on t_with_redundant_idx(f1)",
      "calls": 1,
      "total_time": 1166.808509,
      "rows": 0,
      "shared_blks_hit": 3771,
      "shared_blks_read": 8799,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 1119,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 879148290678321700,
      "md5": "1e7bc5cce40a35c4730e436ea664a3f9"
    },
    "cbcd92704dd802d204b9bc7ee8b39187": {
      "rownum": 32,
      "query": "create index t_rar_q_idx on t_rar_q(id)",
      "calls": 1,
      "total_time": 1145.142764,
      "rows": 0,
      "shared_blks_hit": 1118,
      "shared_blks_read": 1714,
      "shared_blks_dirtied": 1707,
      "shared_blks_written": 1671,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1224,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2650688778442027500,
      "md5": "cbcd92704dd802d204b9bc7ee8b39187"
    },
    "7e370d36c2447380a7d5678a0b2040d7": {
      "rownum": 33,
      "query": "create index t_with_redundant_ref_idx_2 on exp_redundant.t_with_redundant_ref_idx using btree (i)",
      "calls": 1,
      "total_time": 1142.753263,
      "rows": 0,
      "shared_blks_hit": 1138,
      "shared_blks_read": 1266,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -94268938950487040,
      "md5": "7e370d36c2447380a7d5678a0b2040d7"
    },
    "7d1bf9b05e76b943c47b50b366c65772": {
      "rownum": 34,
      "query": "create index t_with_redundant_ref_idx_3 on exp_redundant.t_with_redundant_ref_idx using btree (i)",
      "calls": 1,
      "total_time": 1142.581096,
      "rows": 0,
      "shared_blks_hit": 1209,
      "shared_blks_read": 1189,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1845904424067371800,
      "md5": "7d1bf9b05e76b943c47b50b366c65772"
    },
    "5f8e51e07770412b1911cebb26c55f4b": {
      "rownum": 35,
      "query": "create index t_with_redundant_ref_idx_1 on public.t_with_redundant_ref_idx using btree (i)",
      "calls": 1,
      "total_time": 1134.152721,
      "rows": 0,
      "shared_blks_hit": 1138,
      "shared_blks_read": 1253,
      "shared_blks_dirtied": 1253,
      "shared_blks_written": 1221,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1273,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7121640066867289000,
      "md5": "5f8e51e07770412b1911cebb26c55f4b"
    },
    "cdfd61b4586420038e5e614ab85aeeae": {
      "rownum": 36,
      "query": "create index t_with_redundant_ref_idx_2 on public.t_with_redundant_ref_idx using btree (i)",
      "calls": 1,
      "total_time": 1115.969675,
      "rows": 0,
      "shared_blks_hit": 1130,
      "shared_blks_read": 1276,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3115028882787390000,
      "md5": "cdfd61b4586420038e5e614ab85aeeae"
    },
    "6bc4ef68211b4d4714588b1314c3b450": {
      "rownum": 37,
      "query": "create index t_with_redundant_ref_idx_3 on public.t_with_redundant_ref_idx using btree (i)",
      "calls": 1,
      "total_time": 1111.151402,
      "rows": 0,
      "shared_blks_hit": 1185,
      "shared_blks_read": 1208,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1280,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 39141847517093180,
      "md5": "6bc4ef68211b4d4714588b1314c3b450"
    },
    "95f449a74e628c4e8d47ae2af9b2fd43": {
      "rownum": 38,
      "query": "create index r_red_fk_1_id_idx on t_red_fk_1(id)",
      "calls": 1,
      "total_time": 1100.385493,
      "rows": 0,
      "shared_blks_hit": 1132,
      "shared_blks_read": 1275,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3040282640922053000,
      "md5": "95f449a74e628c4e8d47ae2af9b2fd43"
    },
    "182ba4f0ffb554baf311c8fa6800939f": {
      "rownum": 39,
      "query": "create database dbname",
      "calls": 1,
      "total_time": 947.004071,
      "rows": 0,
      "shared_blks_hit": 51,
      "shared_blks_read": 8,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3617698589948080000,
      "md5": "182ba4f0ffb554baf311c8fa6800939f"
    },
    "63ed402d488d71cb2ac691b882743cad": {
      "rownum": 40,
      "query": "alter table t_red_fk_2 add constraint fk_red_fk2_t1 foreign key (r_t1_id) references t_red_fk_1(id)",
      "calls": 1,
      "total_time": 867.232874,
      "rows": 0,
      "shared_blks_hit": 4601,
      "shared_blks_read": 5533,
      "shared_blks_dirtied": 3366,
      "shared_blks_written": 3326,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2911641097746118700,
      "md5": "63ed402d488d71cb2ac691b882743cad"
    },
    "f975f70089262d562c3884413b6f9eaa": {
      "rownum": 41,
      "query": "select count(*) from t_slw_q",
      "calls": 1,
      "total_time": 695.320157,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 44248,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 11,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8706753100138026000,
      "md5": "f975f70089262d562c3884413b6f9eaa"
    },
    "6d85f5ed15e4a22c77379c8c27e4a096": {
      "rownum": 42,
      "query": "create database checkup_test_db",
      "calls": 1,
      "total_time": 635.403232,
      "rows": 0,
      "shared_blks_hit": 51,
      "shared_blks_read": 14,
      "shared_blks_dirtied": 7,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2133351059478393300,
      "md5": "6d85f5ed15e4a22c77379c8c27e4a096"
    },
    "c0614a53e439a8f3d6bacd5931057c90": {
      "rownum": 43,
      "query": "do $$\ndeclare\n rec record;\n out text;\n i numeric;\n val int8;\n ratio numeric;\nbegin\n out := '';\n i := 0;\n for rec in\n select\n c.oid,\n (select spcname from pg_tablespace where oid = reltablespace) as tblspace,\n nspname as schema_name,\n relname as table_name,\n t.typname,\n attname,\n (select pg_get_serial_sequence(quote_ident(nspname) || '.' || quote_ident(relname), attname)) as seq\n from pg_index i\n join pg_class c on c.oid = i.indrelid\n left join pg_namespace n on n.oid = c.relnamespace\n join pg_attribute a on\n a.attrelid = i.indrelid\n and a.attnum = any(i.indkey)\n join pg_type t on t.oid = atttypid\n where\n i.indisprimary\n and (c.relpages > 1000 or (select pg_get_serial_sequence(quote_ident(nspname) || '.' || quote_ident(relname), attname)) is not null)\n and t.typname in ('int2', 'int4')\n and nspname <> 'pg_toast'\n loop\n if rec.seq is null then\n execute format('select max(%I) from %I.%I;', rec.attname, rec.schema_name, rec.table_name) into val;\n else\n execute format('SELECT last_value FROM %s;', rec.seq) into val;\n end if;\n if rec.typname = 'int4' then\n ratio := (val::numeric / 2^31)::numeric;\n elsif rec.typname = 'int2' then\n ratio := (val::numeric / 2^15)::numeric;\n else\n assert false, 'unreachable point';\n end if;\n if ratio > 0.1 then -- report only if > 10% of capacity is reached\n i := i + 1;\n out := out || '{\"' || rec.table_name || '\":' || json_build_object(\n 'Table',\n coalesce(nullif(quote_ident(rec.schema_name), 'public') || '.', '') || quote_ident(rec.table_name),\n 'PK',\n rec.attname,\n 'Type',\n rec.typname,\n 'Current max value',\n val,\n 'Capacity used, %',\n round(100 * ratio, 2)\n ) || '}';\n end if;\n end loop;\n raise info '%', out;\nend;\n$$ language plpgsql",
      "calls": 2,
      "total_time": 151.869619,
      "rows": 0,
      "shared_blks_hit": 2670,
      "shared_blks_read": 6,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1352051163819512300,
      "md5": "c0614a53e439a8f3d6bacd5931057c90"
    },
    "c7ca45dc7a5c864fdfe617f4237e7a32": {
      "rownum": 44,
      "query": "with snap1(j) as (\n select $1::json\n ), snap2(j) as (\n select $2::json\n ), delta(seconds) as (\n select\n (select j->>$3 from snap2)::numeric\n - (select j->>$4 from snap1)::numeric\n ), s1(md5, obj) as (\n select _.*\n from snap1, lateral json_each(j->$5) as _\n ), s2(md5, obj) as (\n select _.*\n from snap2, lateral json_each(j->$6) as _\n ), si as ( \n select s1.md5\n from s1\n intersect\n select s2.md5\n from s2\n ), sum_si_s1 as ( \n select\n sum((s1.obj->>$7)::numeric) as sum_calls,\n sum((s1.obj->>$8)::numeric) as sum_total_time,\n $9 as key\n from s1\n where s1.md5 in (select md5 from si)\n ), sum_si_s2 as ( \n select\n sum((s2.obj->>$10)::numeric) as sum_calls,\n sum((s2.obj->>$11)::numeric) as sum_total_time,\n $12 as key\n from s2\n where s2.md5 in (select md5 from si)\n ), sum_s1 as (\n select\n \n sum((s1.obj->>$13)::numeric) as sum_calls,\n sum((s1.obj->>$14)::numeric) as sum_total_time,\n sum((s1.obj->>$15)::numeric) as sum_rows,\n sum((s1.obj->>$16)::numeric) as sum_shared_blks_hit,\n sum((s1.obj->>$17)::numeric) as sum_shared_blks_read,\n sum((s1.obj->>$18)::numeric) as sum_shared_blks_dirtied,\n sum((s1.obj->>$19)::numeric) as sum_shared_blks_written,\n sum((s1.obj->>$20)::numeric) as sum_local_blks_hit,\n sum((s1.obj->>$21)::numeric) as sum_local_blks_read,\n sum((s1.obj->>$22)::numeric) as sum_local_blks_dirtied,\n sum((s1.obj->>$23)::numeric) as sum_local_blks_written,\n sum((s1.obj->>$24)::numeric) as sum_temp_blks_read,\n sum((s1.obj->>$25)::numeric) as sum_temp_blks_written,\n sum((s1.obj->>$26)::numeric) as sum_blk_read_time,\n sum((s1.obj->>$27)::numeric) as sum_blk_write_time,\n sum((s1.obj->>$28)::numeric) as sum_kcache_reads,\n sum((s1.obj->>$29)::numeric) as sum_kcache_writes,\n sum((s1.obj->>$30)::numeric) as sum_kcache_user_time_ms,\n sum((s1.obj->>$31)::numeric) as sum_kcache_system_time_ms,\n $32 as key\n from s1\n ), sum_s2 as (\n select\n \n sum((s2.obj->>$33)::numeric) as sum_calls,\n sum((s2.obj->>$34)::numeric) as sum_total_time,\n sum((s2.obj->>$35)::numeric) as sum_rows,\n sum((s2.obj->>$36)::numeric) as sum_shared_blks_hit,\n sum((s2.obj->>$37)::numeric) as sum_shared_blks_read,\n sum((s2.obj->>$38)::numeric) as sum_shared_blks_dirtied,\n sum((s2.obj->>$39)::numeric) as sum_shared_blks_written,\n sum((s2.obj->>$40)::numeric) as sum_local_blks_hit,\n sum((s2.obj->>$41)::numeric) as sum_local_blks_read,\n sum((s2.obj->>$42)::numeric) as sum_local_blks_dirtied,\n sum((s2.obj->>$43)::numeric) as sum_local_blks_written,\n sum((s2.obj->>$44)::numeric) as sum_temp_blks_read,\n sum((s2.obj->>$45)::numeric) as sum_temp_blks_written,\n sum((s2.obj->>$46)::numeric) as sum_blk_read_time,\n sum((s2.obj->>$47)::numeric) as sum_blk_write_time,\n sum((s2.obj->>$48)::numeric) as sum_kcache_reads,\n sum((s2.obj->>$49)::numeric) as sum_kcache_writes,\n sum((s2.obj->>$50)::numeric) as sum_kcache_user_time_ms,\n sum((s2.obj->>$51)::numeric) as sum_kcache_system_time_ms,\n $52 as key\n from s2\n ), diff1 as ( \n select\n abs(sum_s1.sum_calls - sum_si_s1.sum_calls) as sum_calls,\n abs(sum_s1.sum_total_time - sum_si_s1.sum_total_time) as sum_total_time,\n key\n from sum_s1\n join sum_si_s1 using (key)\n ), diff2 as ( \n select\n abs(sum_s2.sum_calls - sum_si_s2.sum_calls) as sum_calls,\n abs(sum_s2.sum_total_time - sum_si_s2.sum_total_time) as sum_total_time,\n key\n from sum_s2\n join sum_si_s2 using (key)\n ), diff_calc_rel_err as (\n select\n abs(sum_si_s2.sum_calls - sum_si_s1.sum_calls) as sum_calls,\n abs(sum_si_s2.sum_total_time - sum_si_s1.sum_total_time) as sum_total_time,\n key\n from sum_si_s2\n join sum_si_s1 using (key)\n ), calc_error as ( \n select\n (diff1.sum_calls + diff2.sum_calls)::numeric / $53 as absolute_error_calls,\n (diff1.sum_total_time + diff2.sum_total_time)::numeric / $54 as absolute_error_total_time,\n case when (select sum_calls from diff_calc_rel_err) = $55 then $56 else\n (((diff1.sum_calls + diff2.sum_calls) / $57) * $58) / (select sum_calls from diff_calc_rel_err)\n end as relative_error_calls,\n case when (select sum_total_time from diff_calc_rel_err) = $59 then $60 else\n (((diff1.sum_total_time + diff2.sum_total_time) / $61) * $62) / (select sum_total_time from diff_calc_rel_err)\n end as relative_error_total_time\n from diff1\n join diff2 using (key)\n ), sum_delta as (\n select\n \n sum((s2.obj->>$63)::numeric - (s1.obj->>$64)::numeric) as sum_delta_calls,\n sum((s2.obj->>$65)::numeric - (s1.obj->>$66)::numeric) as sum_delta_total_time,\n sum((s2.obj->>$67)::numeric - (s1.obj->>$68)::numeric) as sum_delta_rows,\n sum((s2.obj->>$69)::numeric - (s1.obj->>$70)::numeric) as sum_delta_shared_blks_hit,\n sum((s2.obj->>$71)::numeric - (s1.obj->>$72)::numeric) as sum_delta_shared_blks_read,\n sum((s2.obj->>$73)::numeric - (s1.obj->>$74)::numeric) as sum_delta_shared_blks_dirtied,\n sum((s2.obj->>$75)::numeric - (s1.obj->>$76)::numeric) as sum_delta_shared_blks_written,\n sum((s2.obj->>$77)::numeric - (s1.obj->>$78)::numeric) as sum_delta_local_blks_hit,\n sum((s2.obj->>$79)::numeric - (s1.obj->>$80)::numeric) as sum_delta_local_blks_read,\n sum((s2.obj->>$81)::numeric - (s1.obj->>$82)::numeric) as sum_delta_local_blks_dirtied,\n sum((s2.obj->>$83)::numeric - (s1.obj->>$84)::numeric) as sum_delta_local_blks_written,\n sum((s2.obj->>$85)::numeric - (s1.obj->>$86)::numeric) as sum_delta_temp_blks_read,\n sum((s2.obj->>$87)::numeric - (s1.obj->>$88)::numeric) as sum_delta_temp_blks_written,\n sum((s2.obj->>$89)::numeric - (s1.obj->>$90)::numeric) as sum_delta_blk_read_time,\n sum((s2.obj->>$91)::numeric - (s1.obj->>$92)::numeric) as sum_delta_blk_write_time,\n sum((s2.obj->>$93)::numeric - (s1.obj->>$94)::numeric) as sum_delta_kcache_reads,\n sum((s2.obj->>$95)::numeric - (s1.obj->>$96)::numeric) as sum_delta_kcache_writes,\n sum((s2.obj->>$97)::numeric - (s1.obj->>$98)::numeric) as sum_delta_kcache_user_time_ms,\n sum((s2.obj->>$99)::numeric - (s1.obj->>$100)::numeric) as sum_delta_kcache_system_time_ms,\n $101 as _\n from s1\n join s2 using(md5)\n ), queries_pre as (\n select\n \n sum((s2.obj->>$102)::numeric) - sum((s1.obj->>$103)::numeric) as diff_calls,\n (sum((s2.obj->>$104)::numeric) - sum((s1.obj->>$105)::numeric)) / nullif((select seconds from delta ), $106) as per_sec_calls,\n (sum((s2.obj->>$107)::numeric) - sum((s1.obj->>$108)::numeric)) / nullif((sum((s2.obj->>$109)::numeric) - sum((s1.obj->>$110)::numeric)), $111) as per_call_calls,\n round($112 * (sum((s2.obj->>$113)::numeric) - sum((s1.obj->>$114)::numeric))::numeric / nullif((select sum_delta_calls from sum_delta), $115), $116) as ratio_calls,\n \n sum((s2.obj->>$117)::numeric) - sum((s1.obj->>$118)::numeric) as diff_total_time,\n (sum((s2.obj->>$119)::numeric) - sum((s1.obj->>$120)::numeric)) / nullif((select seconds from delta ), $121) as per_sec_total_time,\n (sum((s2.obj->>$122)::numeric) - sum((s1.obj->>$123)::numeric)) / nullif((sum((s2.obj->>$124)::numeric) - sum((s1.obj->>$125)::numeric)), $126) as per_call_total_time,\n round($127 * (sum((s2.obj->>$128)::numeric) - sum((s1.obj->>$129)::numeric))::numeric / nullif((select sum_delta_total_time from sum_delta), $130), $131) as ratio_total_time,\n \n sum((s2.obj->>$132)::numeric) - sum((s1.obj->>$133)::numeric) as diff_rows,\n (sum((s2.obj->>$134)::numeric) - sum((s1.obj->>$135)::numeric)) / nullif((select seconds from delta ), $136) as per_sec_rows,\n (sum((s2.obj->>$137)::numeric) - sum((s1.obj->>$138)::numeric)) / nullif((sum((s2.obj->>$139)::numeric) - sum((s1.obj->>$140)::numeric)), $141) as per_call_rows,\n round($142 * (sum((s2.obj->>$143)::numeric) - sum((s1.obj->>$144)::numeric))::numeric / nullif((select sum_delta_rows from sum_delta), $145), $146) as ratio_rows,\n \n sum((s2.obj->>$147)::numeric) - sum((s1.obj->>$148)::numeric) as diff_shared_blks_hit,\n (sum((s2.obj->>$149)::numeric) - sum((s1.obj->>$150)::numeric)) / nullif((select seconds from delta ), $151) as per_sec_shared_blks_hit,\n (sum((s2.obj->>$152)::numeric) - sum((s1.obj->>$153)::numeric)) / nullif((sum((s2.obj->>$154)::numeric) - sum((s1.obj->>$155)::numeric)), $156) as per_call_shared_blks_hit,\n round($157 * (sum((s2.obj->>$158)::numeric) - sum((s1.obj->>$159)::numeric))::numeric / nullif((select sum_delta_shared_blks_hit from sum_delta), $160), $161) as ratio_shared_blks_hit,\n \n sum((s2.obj->>$162)::numeric) - sum((s1.obj->>$163)::numeric) as diff_shared_blks_read,\n (sum((s2.obj->>$164)::numeric) - sum((s1.obj->>$165)::numeric)) / nullif((select seconds from delta ), $166) as per_sec_shared_blks_read,\n (sum((s2.obj->>$167)::numeric) - sum((s1.obj->>$168)::numeric)) / nullif((sum((s2.obj->>$169)::numeric) - sum((s1.obj->>$170)::numeric)), $171) as per_call_shared_blks_read,\n round($172 * (sum((s2.obj->>$173)::numeric) - sum((s1.obj->>$174)::numeric))::numeric / nullif((select sum_delta_shared_blks_read from sum_delta), $175), $176) as ratio_shared_blks_read,\n \n sum((s2.obj->>$177)::numeric) - sum((s1.obj->>$178)::numeric) as diff_shared_blks_dirtied,\n (sum((s2.obj->>$179)::numeric) - sum((s1.obj->>$180)::numeric)) / nullif((select seconds from delta ), $181) as per_sec_shared_blks_dirtied,\n (sum((s2.obj->>$182)::numeric) - sum((s1.obj->>$183)::numeric)) / nullif((sum((s2.obj->>$184)::numeric) - sum((s1.obj->>$185)::numeric)), $186) as per_call_shared_blks_dirtied,\n round($187 * (sum((s2.obj->>$188)::numeric) - sum((s1.obj->>$189)::numeric))::numeric / nullif((select sum_delta_shared_blks_dirtied from sum_delta), $190), $191) as ratio_shared_blks_dirtied,\n \n sum((s2.obj->>$192)::numeric) - sum((s1.obj->>$193)::numeric) as diff_shared_blks_written,\n (sum((s2.obj->>$194)::numeric) - sum((s1.obj->>$195)::numeric)) / nullif((select seconds from delta ), $196) as per_sec_shared_blks_written,\n (sum((s2.obj->>$197)::numeric) - sum((s1.obj->>$198)::numeric)) / nullif((sum((s2.obj->>$199)::numeric) - sum((s1.obj->>$200)::numeric)), $201) as per_call_shared_blks_written,\n round($202 * (sum((s2.obj->>$203)::numeric) - sum((s1.obj->>$204)::numeric))::numeric / nullif((select sum_delta_shared_blks_written from sum_delta), $205), $206) as ratio_shared_blks_written,\n \n sum((s2.obj->>$207)::numeric) - sum((s1.obj->>$208)::numeric) as diff_local_blks_hit,\n (sum((s2.obj->>$209)::numeric) - sum((s1.obj->>$210)::numeric)) / nullif((select seconds from delta ), $211) as per_sec_local_blks_hit,\n (sum((s2.obj->>$212)::numeric) - sum((s1.obj->>$213)::numeric)) / nullif((sum((s2.obj->>$214)::numeric) - sum((s1.obj->>$215)::numeric)), $216) as per_call_local_blks_hit,\n round($217 * (sum((s2.obj->>$218)::numeric) - sum((s1.obj->>$219)::numeric))::numeric / nullif((select sum_delta_local_blks_hit from sum_delta), $220), $221) as ratio_local_blks_hit,\n \n sum((s2.obj->>$222)::numeric) - sum((s1.obj->>$223)::numeric) as diff_local_blks_read,\n (sum((s2.obj->>$224)::numeric) - sum((s1.obj->>$225)::numeric)) / nullif((select seconds from delta ), $226) as per_sec_local_blks_read,\n (sum((s2.obj->>$227)::numeric) - sum((s1.obj->>$228)::numeric)) / nullif((sum((s2.obj->>$229)::numeric) - sum((s1.obj->>$230)::numeric)), $231) as per_call_local_blks_read,\n round($232 * (sum((s2.obj->>$233)::numeric) - sum((s1.obj->>$234)::numeric))::numeric / nullif((select sum_delta_local_blks_read from sum_delta), $235), $236) as ratio_local_blks_read,\n \n sum((s2.obj->>$237)::numeric) - sum((s1.obj->>$238)::numeric) as diff_local_blks_dirtied,\n (sum((s2.obj->>$239)::numeric) - sum((s1.obj->>$240)::numeric)) / nullif((select seconds from delta ), $241) as per_sec_local_blks_dirtied,\n (sum((s2.obj->>$242)::numeric) - sum((s1.obj->>$243)::numeric)) / nullif((sum((s2.obj->>$244)::numeric) - sum((s1.obj->>$245)::numeric)), $246) as per_call_local_blks_dirtied,\n round($247 * (sum((s2.obj->>$248)::numeric) - sum((s1.obj->>$249)::numeric))::numeric / nullif((select sum_delta_local_blks_dirtied from sum_delta), $250), $251) as ratio_local_blks_dirtied,\n \n sum((s2.obj->>$252)::numeric) - sum((s1.obj->>$253)::numeric) as diff_local_blks_written,\n (sum((s2.obj->>$254)::numeric) - sum((s1.obj->>$255)::numeric)) / nullif((select seconds from delta ), $256) as per_sec_local_blks_written,\n (sum((s2.obj->>$257)::numeric) - sum((s1.obj->>$258)::numeric)) / nullif((sum((s2.obj->>$259)::numeric) - sum((s1.obj->>$260)::numeric)), $261) as per_call_local_blks_written,\n round($262 * (sum((s2.obj->>$263)::numeric) - sum((s1.obj->>$264)::numeric))::numeric / nullif((select sum_delta_local_blks_written from sum_delta), $265), $266) as ratio_local_blks_written,\n \n sum((s2.obj->>$267)::numeric) - sum((s1.obj->>$268)::numeric) as diff_temp_blks_read,\n (sum((s2.obj->>$269)::numeric) - sum((s1.obj->>$270)::numeric)) / nullif((select seconds from delta ), $271) as per_sec_temp_blks_read,\n (sum((s2.obj->>$272)::numeric) - sum((s1.obj->>$273)::numeric)) / nullif((sum((s2.obj->>$274)::numeric) - sum((s1.obj->>$275)::numeric)), $276) as per_call_temp_blks_read,\n round($277 * (sum((s2.obj->>$278)::numeric) - sum((s1.obj->>$279)::numeric))::numeric / nullif((select sum_delta_temp_blks_read from sum_delta), $280), $281) as ratio_temp_blks_read,\n \n sum((s2.obj->>$282)::numeric) - sum((s1.obj->>$283)::numeric) as diff_temp_blks_written,\n (sum((s2.obj->>$284)::numeric) - sum((s1.obj->>$285)::numeric)) / nullif((select seconds from delta ), $286) as per_sec_temp_blks_written,\n (sum((s2.obj->>$287)::numeric) - sum((s1.obj->>$288)::numeric)) / nullif((sum((s2.obj->>$289)::numeric) - sum((s1.obj->>$290)::numeric)), $291) as per_call_temp_blks_written,\n round($292 * (sum((s2.obj->>$293)::numeric) - sum((s1.obj->>$294)::numeric))::numeric / nullif((select sum_delta_temp_blks_written from sum_delta), $295), $296) as ratio_temp_blks_written,\n \n sum((s2.obj->>$297)::numeric) - sum((s1.obj->>$298)::numeric) as diff_blk_read_time,\n (sum((s2.obj->>$299)::numeric) - sum((s1.obj->>$300)::numeric)) / nullif((select seconds from delta ), $301) as per_sec_blk_read_time,\n (sum((s2.obj->>$302)::numeric) - sum((s1.obj->>$303)::numeric)) / nullif((sum((s2.obj->>$304)::numeric) - sum((s1.obj->>$305)::numeric)), $306) as per_call_blk_read_time,\n round($307 * (sum((s2.obj->>$308)::numeric) - sum((s1.obj->>$309)::numeric))::numeric / nullif((select sum_delta_blk_read_time from sum_delta), $310), $311) as ratio_blk_read_time,\n \n sum((s2.obj->>$312)::numeric) - sum((s1.obj->>$313)::numeric) as diff_blk_write_time,\n (sum((s2.obj->>$314)::numeric) - sum((s1.obj->>$315)::numeric)) / nullif((select seconds from delta ), $316) as per_sec_blk_write_time,\n (sum((s2.obj->>$317)::numeric) - sum((s1.obj->>$318)::numeric)) / nullif((sum((s2.obj->>$319)::numeric) - sum((s1.obj->>$320)::numeric)), $321) as per_call_blk_write_time,\n round($322 * (sum((s2.obj->>$323)::numeric) - sum((s1.obj->>$324)::numeric))::numeric / nullif((select sum_delta_blk_write_time from sum_delta), $325), $326) as ratio_blk_write_time,\n \n sum((s2.obj->>$327)::numeric) - sum((s1.obj->>$328)::numeric) as diff_kcache_reads,\n (sum((s2.obj->>$329)::numeric) - sum((s1.obj->>$330)::numeric)) / nullif((select seconds from delta ), $331) as per_sec_kcache_reads,\n (sum((s2.obj->>$332)::numeric) - sum((s1.obj->>$333)::numeric)) / nullif((sum((s2.obj->>$334)::numeric) - sum((s1.obj->>$335)::numeric)), $336) as per_call_kcache_reads,\n round($337 * (sum((s2.obj->>$338)::numeric) - sum((s1.obj->>$339)::numeric))::numeric / nullif((select sum_delta_kcache_reads from sum_delta), $340), $341) as ratio_kcache_reads,\n \n sum((s2.obj->>$342)::numeric) - sum((s1.obj->>$343)::numeric) as diff_kcache_writes,\n (sum((s2.obj->>$344)::numeric) - sum((s1.obj->>$345)::numeric)) / nullif((select seconds from delta ), $346) as per_sec_kcache_writes,\n (sum((s2.obj->>$347)::numeric) - sum((s1.obj->>$348)::numeric)) / nullif((sum((s2.obj->>$349)::numeric) - sum((s1.obj->>$350)::numeric)), $351) as per_call_kcache_writes,\n round($352 * (sum((s2.obj->>$353)::numeric) - sum((s1.obj->>$354)::numeric))::numeric / nullif((select sum_delta_kcache_writes from sum_delta), $355), $356) as ratio_kcache_writes,\n \n sum((s2.obj->>$357)::numeric) - sum((s1.obj->>$358)::numeric) as diff_kcache_user_time_ms,\n (sum((s2.obj->>$359)::numeric) - sum((s1.obj->>$360)::numeric)) / nullif((select seconds from delta ), $361) as per_sec_kcache_user_time_ms,\n (sum((s2.obj->>$362)::numeric) - sum((s1.obj->>$363)::numeric)) / nullif((sum((s2.obj->>$364)::numeric) - sum((s1.obj->>$365)::numeric)), $366) as per_call_kcache_user_time_ms,\n round($367 * (sum((s2.obj->>$368)::numeric) - sum((s1.obj->>$369)::numeric))::numeric / nullif((select sum_delta_kcache_user_time_ms from sum_delta), $370), $371) as ratio_kcache_user_time_ms,\n \n sum((s2.obj->>$372)::numeric) - sum((s1.obj->>$373)::numeric) as diff_kcache_system_time_ms,\n (sum((s2.obj->>$374)::numeric) - sum((s1.obj->>$375)::numeric)) / nullif((select seconds from delta ), $376) as per_sec_kcache_system_time_ms,\n (sum((s2.obj->>$377)::numeric) - sum((s1.obj->>$378)::numeric)) / nullif((sum((s2.obj->>$379)::numeric) - sum((s1.obj->>$380)::numeric)), $381) as per_call_kcache_system_time_ms,\n round($382 * (sum((s2.obj->>$383)::numeric) - sum((s1.obj->>$384)::numeric))::numeric / nullif((select sum_delta_kcache_system_time_ms from sum_delta), $385), $386) as ratio_kcache_system_time_ms,\n \n s1.md5 as md5,\n s1.obj->>$387 as queryid,\n s1.obj->>$388 as query\n from s1\n join s2 using(md5)\n group by s1.md5, s1.obj->>'queryid', s1.obj->>'query'\n ), queries as (\n \n select\n row_number() over(order by diff_total_time desc) as rownum,\n *\n from queries_pre\n order by diff_total_time desc\n ), aggregated as (\n \n select\n \n sum((s2.obj->>$389)::numeric) - sum((s1.obj->>$390)::numeric) as diff_calls,\n (sum((s2.obj->>$391)::numeric) - sum((s1.obj->>$392)::numeric)) / nullif((select seconds from delta ), $393) as per_sec_calls,\n (sum((s2.obj->>$394)::numeric) - sum((s1.obj->>$395)::numeric)) / nullif((sum((s2.obj->>$396)::numeric) - sum((s1.obj->>$397)::numeric)), $398) as per_call_calls,\n round($399 * (sum((s2.obj->>$400)::numeric) - sum((s1.obj->>$401)::numeric))::numeric / nullif((select sum_delta_calls from sum_delta), $402), $403) as ratio_calls,\n \n sum((s2.obj->>$404)::numeric) - sum((s1.obj->>$405)::numeric) as diff_total_time,\n (sum((s2.obj->>$406)::numeric) - sum((s1.obj->>$407)::numeric)) / nullif((select seconds from delta ), $408) as per_sec_total_time,\n (sum((s2.obj->>$409)::numeric) - sum((s1.obj->>$410)::numeric)) / nullif((sum((s2.obj->>$411)::numeric) - sum((s1.obj->>$412)::numeric)), $413) as per_call_total_time,\n round($414 * (sum((s2.obj->>$415)::numeric) - sum((s1.obj->>$416)::numeric))::numeric / nullif((select sum_delta_total_time from sum_delta), $417), $418) as ratio_total_time,\n \n sum((s2.obj->>$419)::numeric) - sum((s1.obj->>$420)::numeric) as diff_rows,\n (sum((s2.obj->>$421)::numeric) - sum((s1.obj->>$422)::numeric)) / nullif((select seconds from delta ), $423) as per_sec_rows,\n (sum((s2.obj->>$424)::numeric) - sum((s1.obj->>$425)::numeric)) / nullif((sum((s2.obj->>$426)::numeric) - sum((s1.obj->>$427)::numeric)), $428) as per_call_rows,\n round($429 * (sum((s2.obj->>$430)::numeric) - sum((s1.obj->>$431)::numeric))::numeric / nullif((select sum_delta_rows from sum_delta), $432), $433) as ratio_rows,\n \n sum((s2.obj->>$434)::numeric) - sum((s1.obj->>$435)::numeric) as diff_shared_blks_hit,\n (sum((s2.obj->>$436)::numeric) - sum((s1.obj->>$437)::numeric)) / nullif((select seconds from delta ), $438) as per_sec_shared_blks_hit,\n (sum((s2.obj->>$439)::numeric) - sum((s1.obj->>$440)::numeric)) / nullif((sum((s2.obj->>$441)::numeric) - sum((s1.obj->>$442)::numeric)), $443) as per_call_shared_blks_hit,\n round($444 * (sum((s2.obj->>$445)::numeric) - sum((s1.obj->>$446)::numeric))::numeric / nullif((select sum_delta_shared_blks_hit from sum_delta), $447), $448) as ratio_shared_blks_hit,\n \n sum((s2.obj->>$449)::numeric) - sum((s1.obj->>$450)::numeric) as diff_shared_blks_read,\n (sum((s2.obj->>$451)::numeric) - sum((s1.obj->>$452)::numeric)) / nullif((select seconds from delta ), $453) as per_sec_shared_blks_read,\n (sum((s2.obj->>$454)::numeric) - sum((s1.obj->>$455)::numeric)) / nullif((sum((s2.obj->>$456)::numeric) - sum((s1.obj->>$457)::numeric)), $458) as per_call_shared_blks_read,\n round($459 * (sum((s2.obj->>$460)::numeric) - sum((s1.obj->>$461)::numeric))::numeric / nullif((select sum_delta_shared_blks_read from sum_delta), $462), $463) as ratio_shared_blks_read,\n \n sum((s2.obj->>$464)::numeric) - sum((s1.obj->>$465)::numeric) as diff_shared_blks_dirtied,\n (sum((s2.obj->>$466)::numeric) - sum((s1.obj->>$467)::numeric)) / nullif((select seconds from delta ), $468) as per_sec_shared_blks_dirtied,\n (sum((s2.obj->>$469)::numeric) - sum((s1.obj->>$470)::numeric)) / nullif((sum((s2.obj->>$471)::numeric) - sum((s1.obj->>$472)::numeric)), $473) as per_call_shared_blks_dirtied,\n round($474 * (sum((s2.obj->>$475)::numeric) - sum((s1.obj->>$476)::numeric))::numeric / nullif((select sum_delta_shared_blks_dirtied from sum_delta), $477), $478) as ratio_shared_blks_dirtied,\n \n sum((s2.obj->>$479)::numeric) - sum((s1.obj->>$480)::numeric) as diff_shared_blks_written,\n (sum((s2.obj->>$481)::numeric) - sum((s1.obj->>$482)::numeric)) / nullif((select seconds from delta ), $483) as per_sec_shared_blks_written,\n (sum((s2.obj->>$484)::numeric) - sum((s1.obj->>$485)::numeric)) / nullif((sum((s2.obj->>$486)::numeric) - sum((s1.obj->>$487)::numeric)), $488) as per_call_shared_blks_written,\n round($489 * (sum((s2.obj->>$490)::numeric) - sum((s1.obj->>$491)::numeric))::numeric / nullif((select sum_delta_shared_blks_written from sum_delta), $492), $493) as ratio_shared_blks_written,\n \n sum((s2.obj->>$494)::numeric) - sum((s1.obj->>$495)::numeric) as diff_local_blks_hit,\n (sum((s2.obj->>$496)::numeric) - sum((s1.obj->>$497)::numeric)) / nullif((select seconds from delta ), $498) as per_sec_local_blks_hit,\n (sum((s2.obj->>$499)::numeric) - sum((s1.obj->>$500)::numeric)) / nullif((sum((s2.obj->>$501)::numeric) - sum((s1.obj->>$502)::numeric)), $503) as per_call_local_blks_hit,\n round($504 * (sum((s2.obj->>$505)::numeric) - sum((s1.obj->>$506)::numeric))::numeric / nullif((select sum_delta_local_blks_hit from sum_delta), $507), $508) as ratio_local_blks_hit,\n \n sum((s2.obj->>$509)::numeric) - sum((s1.obj->>$510)::numeric) as diff_local_blks_read,\n (sum((s2.obj->>$511)::numeric) - sum((s1.obj->>$512)::numeric)) / nullif((select seconds from delta ), $513) as per_sec_local_blks_read,\n (sum((s2.obj->>$514)::numeric) - sum((s1.obj->>$515)::numeric)) / nullif((sum((s2.obj->>$516)::numeric) - sum((s1.obj->>$517)::numeric)), $518) as per_call_local_blks_read,\n round($519 * (sum((s2.obj->>$520)::numeric) - sum((s1.obj->>$521)::numeric))::numeric / nullif((select sum_delta_local_blks_read from sum_delta), $522), $523) as ratio_local_blks_read,\n \n sum((s2.obj->>$524)::numeric) - sum((s1.obj->>$525)::numeric) as diff_local_blks_dirtied,\n (sum((s2.obj->>$526)::numeric) - sum((s1.obj->>$527)::numeric)) / nullif((select seconds from delta ), $528) as per_sec_local_blks_dirtied,\n (sum((s2.obj->>$529)::numeric) - sum((s1.obj->>$530)::numeric)) / nullif((sum((s2.obj->>$531)::numeric) - sum((s1.obj->>$532)::numeric)), $533) as per_call_local_blks_dirtied,\n round($534 * (sum((s2.obj->>$535)::numeric) - sum((s1.obj->>$536)::numeric))::numeric / nullif((select sum_delta_local_blks_dirtied from sum_delta), $537), $538) as ratio_local_blks_dirtied,\n \n sum((s2.obj->>$539)::numeric) - sum((s1.obj->>$540)::numeric) as diff_local_blks_written,\n (sum((s2.obj->>$541)::numeric) - sum((s1.obj->>$542)::numeric)) / nullif((select seconds from delta ), $543) as per_sec_local_blks_written,\n (sum((s2.obj->>$544)::numeric) - sum((s1.obj->>$545)::numeric)) / nullif((sum((s2.obj->>$546)::numeric) - sum((s1.obj->>$547)::numeric)), $548) as per_call_local_blks_written,\n round($549 * (sum((s2.obj->>$550)::numeric) - sum((s1.obj->>$551)::numeric))::numeric / nullif((select sum_delta_local_blks_written from sum_delta), $552), $553) as ratio_local_blks_written,\n \n sum((s2.obj->>$554)::numeric) - sum((s1.obj->>$555)::numeric) as diff_temp_blks_read,\n (sum((s2.obj->>$556)::numeric) - sum((s1.obj->>$557)::numeric)) / nullif((select seconds from delta ), $558) as per_sec_temp_blks_read,\n (sum((s2.obj->>$559)::numeric) - sum((s1.obj->>$560)::numeric)) / nullif((sum((s2.obj->>$561)::numeric) - sum((s1.obj->>$562)::numeric)), $563) as per_call_temp_blks_read,\n round($564 * (sum((s2.obj->>$565)::numeric) - sum((s1.obj->>$566)::numeric))::numeric / nullif((select sum_delta_temp_blks_read from sum_delta), $567), $568) as ratio_temp_blks_read,\n \n sum((s2.obj->>$569)::numeric) - sum((s1.obj->>$570)::numeric) as diff_temp_blks_written,\n (sum((s2.obj->>$571)::numeric) - sum((s1.obj->>$572)::numeric)) / nullif((select seconds from delta ), $573) as per_sec_temp_blks_written,\n (sum((s2.obj->>$574)::numeric) - sum((s1.obj->>$575)::numeric)) / nullif((sum((s2.obj->>$576)::numeric) - sum((s1.obj->>$577)::numeric)), $578) as per_call_temp_blks_written,\n round($579 * (sum((s2.obj->>$580)::numeric) - sum((s1.obj->>$581)::numeric))::numeric / nullif((select sum_delta_temp_blks_written from sum_delta), $582), $583) as ratio_temp_blks_written,\n \n sum((s2.obj->>$584)::numeric) - sum((s1.obj->>$585)::numeric) as diff_blk_read_time,\n (sum((s2.obj->>$586)::numeric) - sum((s1.obj->>$587)::numeric)) / nullif((select seconds from delta ), $588) as per_sec_blk_read_time,\n (sum((s2.obj->>$589)::numeric) - sum((s1.obj->>$590)::numeric)) / nullif((sum((s2.obj->>$591)::numeric) - sum((s1.obj->>$592)::numeric)), $593) as per_call_blk_read_time,\n round($594 * (sum((s2.obj->>$595)::numeric) - sum((s1.obj->>$596)::numeric))::numeric / nullif((select sum_delta_blk_read_time from sum_delta), $597), $598) as ratio_blk_read_time,\n \n sum((s2.obj->>$599)::numeric) - sum((s1.obj->>$600)::numeric) as diff_blk_write_time,\n (sum((s2.obj->>$601)::numeric) - sum((s1.obj->>$602)::numeric)) / nullif((select seconds from delta ), $603) as per_sec_blk_write_time,\n (sum((s2.obj->>$604)::numeric) - sum((s1.obj->>$605)::numeric)) / nullif((sum((s2.obj->>$606)::numeric) - sum((s1.obj->>$607)::numeric)), $608) as per_call_blk_write_time,\n round($609 * (sum((s2.obj->>$610)::numeric) - sum((s1.obj->>$611)::numeric))::numeric / nullif((select sum_delta_blk_write_time from sum_delta), $612), $613) as ratio_blk_write_time,\n \n sum((s2.obj->>$614)::numeric) - sum((s1.obj->>$615)::numeric) as diff_kcache_reads,\n (sum((s2.obj->>$616)::numeric) - sum((s1.obj->>$617)::numeric)) / nullif((select seconds from delta ), $618) as per_sec_kcache_reads,\n (sum((s2.obj->>$619)::numeric) - sum((s1.obj->>$620)::numeric)) / nullif((sum((s2.obj->>$621)::numeric) - sum((s1.obj->>$622)::numeric)), $623) as per_call_kcache_reads,\n round($624 * (sum((s2.obj->>$625)::numeric) - sum((s1.obj->>$626)::numeric))::numeric / nullif((select sum_delta_kcache_reads from sum_delta), $627), $628) as ratio_kcache_reads,\n \n sum((s2.obj->>$629)::numeric) - sum((s1.obj->>$630)::numeric) as diff_kcache_writes,\n (sum((s2.obj->>$631)::numeric) - sum((s1.obj->>$632)::numeric)) / nullif((select seconds from delta ), $633) as per_sec_kcache_writes,\n (sum((s2.obj->>$634)::numeric) - sum((s1.obj->>$635)::numeric)) / nullif((sum((s2.obj->>$636)::numeric) - sum((s1.obj->>$637)::numeric)), $638) as per_call_kcache_writes,\n round($639 * (sum((s2.obj->>$640)::numeric) - sum((s1.obj->>$641)::numeric))::numeric / nullif((select sum_delta_kcache_writes from sum_delta), $642), $643) as ratio_kcache_writes,\n \n sum((s2.obj->>$644)::numeric) - sum((s1.obj->>$645)::numeric) as diff_kcache_user_time_ms,\n (sum((s2.obj->>$646)::numeric) - sum((s1.obj->>$647)::numeric)) / nullif((select seconds from delta ), $648) as per_sec_kcache_user_time_ms,\n (sum((s2.obj->>$649)::numeric) - sum((s1.obj->>$650)::numeric)) / nullif((sum((s2.obj->>$651)::numeric) - sum((s1.obj->>$652)::numeric)), $653) as per_call_kcache_user_time_ms,\n round($654 * (sum((s2.obj->>$655)::numeric) - sum((s1.obj->>$656)::numeric))::numeric / nullif((select sum_delta_kcache_user_time_ms from sum_delta), $657), $658) as ratio_kcache_user_time_ms,\n \n sum((s2.obj->>$659)::numeric) - sum((s1.obj->>$660)::numeric) as diff_kcache_system_time_ms,\n (sum((s2.obj->>$661)::numeric) - sum((s1.obj->>$662)::numeric)) / nullif((select seconds from delta ), $663) as per_sec_kcache_system_time_ms,\n (sum((s2.obj->>$664)::numeric) - sum((s1.obj->>$665)::numeric)) / nullif((sum((s2.obj->>$666)::numeric) - sum((s1.obj->>$667)::numeric)), $668) as per_call_kcache_system_time_ms,\n round($669 * (sum((s2.obj->>$670)::numeric) - sum((s1.obj->>$671)::numeric))::numeric / nullif((select sum_delta_kcache_system_time_ms from sum_delta), $672), $673) as ratio_kcache_system_time_ms,\n \n $674 as _\n from s1\n join s2 using(md5)\n ), workload_type_pre as (\n \n select\n case lower(regexp_replace(s1.obj->>$675, $676, $677))\n when $678 then\n case\n when s1.obj->>$679 ~* $680 then $681\n when s1.obj->>$682 ~* $683 then $684\n else $685\n end\n else lower(regexp_replace(s1.obj->>$686, $687, $688))\n end as word,\n \n sum((s2.obj->>$689)::numeric) - sum((s1.obj->>$690)::numeric) as diff_calls,\n (sum((s2.obj->>$691)::numeric) - sum((s1.obj->>$692)::numeric)) / nullif((select seconds from delta ), $693) as per_sec_calls,\n (sum((s2.obj->>$694)::numeric) - sum((s1.obj->>$695)::numeric)) / nullif((sum((s2.obj->>$696)::numeric) - sum((s1.obj->>$697)::numeric)), $698) as per_call_calls,\n round($699 * (sum((s2.obj->>$700)::numeric) - sum((s1.obj->>$701)::numeric))::numeric / nullif((select sum_delta_calls from sum_delta), $702), $703) as ratio_calls,\n \n sum((s2.obj->>$704)::numeric) - sum((s1.obj->>$705)::numeric) as diff_total_time,\n (sum((s2.obj->>$706)::numeric) - sum((s1.obj->>$707)::numeric)) / nullif((select seconds from delta ), $708) as per_sec_total_time,\n (sum((s2.obj->>$709)::numeric) - sum((s1.obj->>$710)::numeric)) / nullif((sum((s2.obj->>$711)::numeric) - sum((s1.obj->>$712)::numeric)), $713) as per_call_total_time,\n round($714 * (sum((s2.obj->>$715)::numeric) - sum((s1.obj->>$716)::numeric))::numeric / nullif((select sum_delta_total_time from sum_delta), $717), $718) as ratio_total_time,\n \n sum((s2.obj->>$719)::numeric) - sum((s1.obj->>$720)::numeric) as diff_rows,\n (sum((s2.obj->>$721)::numeric) - sum((s1.obj->>$722)::numeric)) / nullif((select seconds from delta ), $723) as per_sec_rows,\n (sum((s2.obj->>$724)::numeric) - sum((s1.obj->>$725)::numeric)) / nullif((sum((s2.obj->>$726)::numeric) - sum((s1.obj->>$727)::numeric)), $728) as per_call_rows,\n round($729 * (sum((s2.obj->>$730)::numeric) - sum((s1.obj->>$731)::numeric))::numeric / nullif((select sum_delta_rows from sum_delta), $732), $733) as ratio_rows,\n \n sum((s2.obj->>$734)::numeric) - sum((s1.obj->>$735)::numeric) as diff_shared_blks_hit,\n (sum((s2.obj->>$736)::numeric) - sum((s1.obj->>$737)::numeric)) / nullif((select seconds from delta ), $738) as per_sec_shared_blks_hit,\n (sum((s2.obj->>$739)::numeric) - sum((s1.obj->>$740)::numeric)) / nullif((sum((s2.obj->>$741)::numeric) - sum((s1.obj->>$742)::numeric)), $743) as per_call_shared_blks_hit,\n round($744 * (sum((s2.obj->>$745)::numeric) - sum((s1.obj->>$746)::numeric))::numeric / nullif((select sum_delta_shared_blks_hit from sum_delta), $747), $748) as ratio_shared_blks_hit,\n \n sum((s2.obj->>$749)::numeric) - sum((s1.obj->>$750)::numeric) as diff_shared_blks_read,\n (sum((s2.obj->>$751)::numeric) - sum((s1.obj->>$752)::numeric)) / nullif((select seconds from delta ), $753) as per_sec_shared_blks_read,\n (sum((s2.obj->>$754)::numeric) - sum((s1.obj->>$755)::numeric)) / nullif((sum((s2.obj->>$756)::numeric) - sum((s1.obj->>$757)::numeric)), $758) as per_call_shared_blks_read,\n round($759 * (sum((s2.obj->>$760)::numeric) - sum((s1.obj->>$761)::numeric))::numeric / nullif((select sum_delta_shared_blks_read from sum_delta), $762), $763) as ratio_shared_blks_read,\n \n sum((s2.obj->>$764)::numeric) - sum((s1.obj->>$765)::numeric) as diff_shared_blks_dirtied,\n (sum((s2.obj->>$766)::numeric) - sum((s1.obj->>$767)::numeric)) / nullif((select seconds from delta ), $768) as per_sec_shared_blks_dirtied,\n (sum((s2.obj->>$769)::numeric) - sum((s1.obj->>$770)::numeric)) / nullif((sum((s2.obj->>$771)::numeric) - sum((s1.obj->>$772)::numeric)), $773) as per_call_shared_blks_dirtied,\n round($774 * (sum((s2.obj->>$775)::numeric) - sum((s1.obj->>$776)::numeric))::numeric / nullif((select sum_delta_shared_blks_dirtied from sum_delta), $777), $778) as ratio_shared_blks_dirtied,\n \n sum((s2.obj->>$779)::numeric) - sum((s1.obj->>$780)::numeric) as diff_shared_blks_written,\n (sum((s2.obj->>$781)::numeric) - sum((s1.obj->>$782)::numeric)) / nullif((select seconds from delta ), $783) as per_sec_shared_blks_written,\n (sum((s2.obj->>$784)::numeric) - sum((s1.obj->>$785)::numeric)) / nullif((sum((s2.obj->>$786)::numeric) - sum((s1.obj->>$787)::numeric)), $788) as per_call_shared_blks_written,\n round($789 * (sum((s2.obj->>$790)::numeric) - sum((s1.obj->>$791)::numeric))::numeric / nullif((select sum_delta_shared_blks_written from sum_delta), $792), $793) as ratio_shared_blks_written,\n \n sum((s2.obj->>$794)::numeric) - sum((s1.obj->>$795)::numeric) as diff_local_blks_hit,\n (sum((s2.obj->>$796)::numeric) - sum((s1.obj->>$797)::numeric)) / nullif((select seconds from delta ), $798) as per_sec_local_blks_hit,\n (sum((s2.obj->>$799)::numeric) - sum((s1.obj->>$800)::numeric)) / nullif((sum((s2.obj->>$801)::numeric) - sum((s1.obj->>$802)::numeric)), $803) as per_call_local_blks_hit,\n round($804 * (sum((s2.obj->>$805)::numeric) - sum((s1.obj->>$806)::numeric))::numeric / nullif((select sum_delta_local_blks_hit from sum_delta), $807), $808) as ratio_local_blks_hit,\n \n sum((s2.obj->>$809)::numeric) - sum((s1.obj->>$810)::numeric) as diff_local_blks_read,\n (sum((s2.obj->>$811)::numeric) - sum((s1.obj->>$812)::numeric)) / nullif((select seconds from delta ), $813) as per_sec_local_blks_read,\n (sum((s2.obj->>$814)::numeric) - sum((s1.obj->>$815)::numeric)) / nullif((sum((s2.obj->>$816)::numeric) - sum((s1.obj->>$817)::numeric)), $818) as per_call_local_blks_read,\n round($819 * (sum((s2.obj->>$820)::numeric) - sum((s1.obj->>$821)::numeric))::numeric / nullif((select sum_delta_local_blks_read from sum_delta), $822), $823) as ratio_local_blks_read,\n \n sum((s2.obj->>$824)::numeric) - sum((s1.obj->>$825)::numeric) as diff_local_blks_dirtied,\n (sum((s2.obj->>$826)::numeric) - sum((s1.obj->>$827)::numeric)) / nullif((select seconds from delta ), $828) as per_sec_local_blks_dirtied,\n (sum((s2.obj->>$829)::numeric) - sum((s1.obj->>$830)::numeric)) / nullif((sum((s2.obj->>$831)::numeric) - sum((s1.obj->>$832)::numeric)), $833) as per_call_local_blks_dirtied,\n round($834 * (sum((s2.obj->>$835)::numeric) - sum((s1.obj->>$836)::numeric))::numeric / nullif((select sum_delta_local_blks_dirtied from sum_delta), $837), $838) as ratio_local_blks_dirtied,\n \n sum((s2.obj->>$839)::numeric) - sum((s1.obj->>$840)::numeric) as diff_local_blks_written,\n (sum((s2.obj->>$841)::numeric) - sum((s1.obj->>$842)::numeric)) / nullif((select seconds from delta ), $843) as per_sec_local_blks_written,\n (sum((s2.obj->>$844)::numeric) - sum((s1.obj->>$845)::numeric)) / nullif((sum((s2.obj->>$846)::numeric) - sum((s1.obj->>$847)::numeric)), $848) as per_call_local_blks_written,\n round($849 * (sum((s2.obj->>$850)::numeric) - sum((s1.obj->>$851)::numeric))::numeric / nullif((select sum_delta_local_blks_written from sum_delta), $852), $853) as ratio_local_blks_written,\n \n sum((s2.obj->>$854)::numeric) - sum((s1.obj->>$855)::numeric) as diff_temp_blks_read,\n (sum((s2.obj->>$856)::numeric) - sum((s1.obj->>$857)::numeric)) / nullif((select seconds from delta ), $858) as per_sec_temp_blks_read,\n (sum((s2.obj->>$859)::numeric) - sum((s1.obj->>$860)::numeric)) / nullif((sum((s2.obj->>$861)::numeric) - sum((s1.obj->>$862)::numeric)), $863) as per_call_temp_blks_read,\n round($864 * (sum((s2.obj->>$865)::numeric) - sum((s1.obj->>$866)::numeric))::numeric / nullif((select sum_delta_temp_blks_read from sum_delta), $867), $868) as ratio_temp_blks_read,\n \n sum((s2.obj->>$869)::numeric) - sum((s1.obj->>$870)::numeric) as diff_temp_blks_written,\n (sum((s2.obj->>$871)::numeric) - sum((s1.obj->>$872)::numeric)) / nullif((select seconds from delta ), $873) as per_sec_temp_blks_written,\n (sum((s2.obj->>$874)::numeric) - sum((s1.obj->>$875)::numeric)) / nullif((sum((s2.obj->>$876)::numeric) - sum((s1.obj->>$877)::numeric)), $878) as per_call_temp_blks_written,\n round($879 * (sum((s2.obj->>$880)::numeric) - sum((s1.obj->>$881)::numeric))::numeric / nullif((select sum_delta_temp_blks_written from sum_delta), $882), $883) as ratio_temp_blks_written,\n \n sum((s2.obj->>$884)::numeric) - sum((s1.obj->>$885)::numeric) as diff_blk_read_time,\n (sum((s2.obj->>$886)::numeric) - sum((s1.obj->>$887)::numeric)) / nullif((select seconds from delta ), $888) as per_sec_blk_read_time,\n (sum((s2.obj->>$889)::numeric) - sum((s1.obj->>$890)::numeric)) / nullif((sum((s2.obj->>$891)::numeric) - sum((s1.obj->>$892)::numeric)), $893) as per_call_blk_read_time,\n round($894 * (sum((s2.obj->>$895)::numeric) - sum((s1.obj->>$896)::numeric))::numeric / nullif((select sum_delta_blk_read_time from sum_delta), $897), $898) as ratio_blk_read_time,\n \n sum((s2.obj->>$899)::numeric) - sum((s1.obj->>$900)::numeric) as diff_blk_write_time,\n (sum((s2.obj->>$901)::numeric) - sum((s1.obj->>$902)::numeric)) / nullif((select seconds from delta ), $903) as per_sec_blk_write_time,\n (sum((s2.obj->>$904)::numeric) - sum((s1.obj->>$905)::numeric)) / nullif((sum((s2.obj->>$906)::numeric) - sum((s1.obj->>$907)::numeric)), $908) as per_call_blk_write_time,\n round($909 * (sum((s2.obj->>$910)::numeric) - sum((s1.obj->>$911)::numeric))::numeric / nullif((select sum_delta_blk_write_time from sum_delta), $912), $913) as ratio_blk_write_time,\n \n sum((s2.obj->>$914)::numeric) - sum((s1.obj->>$915)::numeric) as diff_kcache_reads,\n (sum((s2.obj->>$916)::numeric) - sum((s1.obj->>$917)::numeric)) / nullif((select seconds from delta ), $918) as per_sec_kcache_reads,\n (sum((s2.obj->>$919)::numeric) - sum((s1.obj->>$920)::numeric)) / nullif((sum((s2.obj->>$921)::numeric) - sum((s1.obj->>$922)::numeric)), $923) as per_call_kcache_reads,\n round($924 * (sum((s2.obj->>$925)::numeric) - sum((s1.obj->>$926)::numeric))::numeric / nullif((select sum_delta_kcache_reads from sum_delta), $927), $928) as ratio_kcache_reads,\n \n sum((s2.obj->>$929)::numeric) - sum((s1.obj->>$930)::numeric) as diff_kcache_writes,\n (sum((s2.obj->>$931)::numeric) - sum((s1.obj->>$932)::numeric)) / nullif((select seconds from delta ), $933) as per_sec_kcache_writes,\n (sum((s2.obj->>$934)::numeric) - sum((s1.obj->>$935)::numeric)) / nullif((sum((s2.obj->>$936)::numeric) - sum((s1.obj->>$937)::numeric)), $938) as per_call_kcache_writes,\n round($939 * (sum((s2.obj->>$940)::numeric) - sum((s1.obj->>$941)::numeric))::numeric / nullif((select sum_delta_kcache_writes from sum_delta), $942), $943) as ratio_kcache_writes,\n \n sum((s2.obj->>$944)::numeric) - sum((s1.obj->>$945)::numeric) as diff_kcache_user_time_ms,\n (sum((s2.obj->>$946)::numeric) - sum((s1.obj->>$947)::numeric)) / nullif((select seconds from delta ), $948) as per_sec_kcache_user_time_ms,\n (sum((s2.obj->>$949)::numeric) - sum((s1.obj->>$950)::numeric)) / nullif((sum((s2.obj->>$951)::numeric) - sum((s1.obj->>$952)::numeric)), $953) as per_call_kcache_user_time_ms,\n round($954 * (sum((s2.obj->>$955)::numeric) - sum((s1.obj->>$956)::numeric))::numeric / nullif((select sum_delta_kcache_user_time_ms from sum_delta), $957), $958) as ratio_kcache_user_time_ms,\n \n sum((s2.obj->>$959)::numeric) - sum((s1.obj->>$960)::numeric) as diff_kcache_system_time_ms,\n (sum((s2.obj->>$961)::numeric) - sum((s1.obj->>$962)::numeric)) / nullif((select seconds from delta ), $963) as per_sec_kcache_system_time_ms,\n (sum((s2.obj->>$964)::numeric) - sum((s1.obj->>$965)::numeric)) / nullif((sum((s2.obj->>$966)::numeric) - sum((s1.obj->>$967)::numeric)), $968) as per_call_kcache_system_time_ms,\n round($969 * (sum((s2.obj->>$970)::numeric) - sum((s1.obj->>$971)::numeric))::numeric / nullif((select sum_delta_kcache_system_time_ms from sum_delta), $972), $973) as ratio_kcache_system_time_ms,\n \n $974 as _\n from s1\n join s2 using(md5)\n group by 1\n ), workload_type as (\n select\n row_number() over(order by diff_total_time desc) as rownum,\n *\n from workload_type_pre\n order by diff_total_time desc\n )\n select json_build_object(\n $975::text, (select j->$976 from snap1),\n $977::text, (select j->$978 from snap2),\n $979::text, ( select (snap2.j->>$980)::numeric - (snap1.j->>$981)::numeric from snap1, snap2 ),\n $982::text, ( select (snap2.j->>$983)::timestamptz - (snap1.j->>$984)::timestamptz from snap1, snap2 ),\n $985::text, (select absolute_error_calls from calc_error),\n $986::text, (select absolute_error_total_time from calc_error),\n $987::text, (select relative_error_calls from calc_error),\n $988::text, (select relative_error_total_time from calc_error),\n $989, json_object_agg(queries.rownum, queries.*),\n $990, (select json_object_agg($991, aggregated.*) from aggregated),\n $992, (select json_object_agg(workload_type.rownum, workload_type.*) from workload_type)\n )\n from queries",
      "calls": 1,
      "total_time": 126.951042,
      "rows": 1,
      "shared_blks_hit": 3,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8328282946743440000,
      "md5": "c7ca45dc7a5c864fdfe617f4237e7a32"
    },
    "e19ef812f593270b404a53e764087b27": {
      "rownum": 45,
      "query": "with data as (\n select\n ae.name,\n installed_version,\n default_version,\n case when installed_version <> default_version then $1 end as is_old\n from pg_extension e\n join pg_available_extensions ae on extname = ae.name\n order by ae.name\n ), withsettins as (\n select\n data.*,\n (select json_object_agg(name, setting)\n from pg_settings\n where name ~ data.name) as settings from data\n order by name\n )\n select json_object_agg(withsettins.name, withsettins) as json from withsettins",
      "calls": 3,
      "total_time": 83.46552,
      "rows": 3,
      "shared_blks_hit": 16,
      "shared_blks_read": 2,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8799259724768328000,
      "md5": "e19ef812f593270b404a53e764087b27"
    },
    "b8e87ad0227c702b59143b9b621b2522": {
      "rownum": 46,
      "query": "with data as (\n with data as (\n select s.*\n from pg_stat_database s\n where s.datname = current_database()\n )\n select\n $1 as metric,\n (select setting from pg_settings where name = $2) as value\n union all\n select\n $3 as metric,\n case\n when pg_is_in_recovery() then $4 || $5\n || ((((case\n when pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() then $6\n else extract ($7 from now() - pg_last_xact_replay_timestamp())\n end)::int)::text || $8)::interval)::text\n || $9 || pg_is_wal_replay_paused()::text || $10\n else\n $11\n end as value\n union all\n (\n with repl_groups as (\n select sync_state, state, string_agg(host(client_addr), $12) as hosts\n from pg_stat_replication\n group by 1, 2\n )\n select\n $13,\n string_agg(sync_state || $14 || state || $15 || hosts, $16)\n from repl_groups\n )\n union all\n select $17, pg_postmaster_start_time()::timestamptz(0)::text\n union all\n select $18, (now() - pg_postmaster_start_time())::interval(0)::text\n union all\n select\n $19,\n (select (checkpoints_timed + checkpoints_req)::text from pg_stat_bgwriter)\n union all\n select\n $20,\n (\n select round($21 * checkpoints_req::numeric /\n (nullif(checkpoints_timed + checkpoints_req, $22)), $23)::text || $24\n from pg_stat_bgwriter\n )\n union all\n select\n $25,\n (\n select round((nullif(buffers_checkpoint::numeric, $26) /\n (($27 * $28 /\n (current_setting($29)::numeric))\n * extract($30 from now() - stats_reset)\n ))::numeric, $31)::text\n from pg_stat_bgwriter\n )\n union all\n select repeat($32, $33), repeat($34, $35)\n union all\n select $36 as metric, datname as value from data\n union all\n select $37, pg_size_pretty(pg_database_size(current_database()))\n union all\n select $38, stats_reset::timestamptz(0)::text from data\n union all\n select $39, (now() - stats_reset)::interval(0)::text from data\n union all\n select $40, (round(blks_hit * $41::numeric / (blks_hit + blks_read), $42))::text || $43 from data \n union all\n select $44, (round(xact_commit * $45::numeric / (xact_commit + xact_rollback), $46))::text || $47 from data\n union all\n select $48, conflicts::text from data\n union all\n select $49, pg_size_pretty(temp_bytes)::text from data\n union all\n select $50, temp_files::text from data\n union all\n select\n $51,\n case\n when (((extract($52 from now()) - extract($53 from data.stats_reset))/$54)::int) <> $55 then\n (temp_files / (((extract($56 from now()) - extract($57 from data.stats_reset))/$58)::int))::text\n else\n temp_files::text\n end\n from data\n union all\n select $59, pg_size_pretty(temp_bytes::numeric / nullif(temp_files, $60))::text from data\n union all\n select $61, deadlocks::text from data\n union all\n select\n $62,\n case\n when ((extract($63 from now()) - extract($64 from data.stats_reset))/$65)::int <> $66 then\n (deadlocks / (((extract($67 from now()) - extract($68 from data.stats_reset))/$69)::int))::text\n else\n deadlocks::text\n end\n from data\n), general_info_json as (\n select json_object_agg(data.metric, data) as json from data where data.metric not like $70\n), database_sizes as (\n select pd.datname, pg_database_size(pd.datname) as db_size from pg_database pd order by db_size desc\n), sorted_database_sizes as (\n select json_object_agg(datname, db_size) from database_sizes ds\n)\nselect\n json_build_object(\n $71,\n (select * from general_info_json),\n $72,\n (select * from sorted_database_sizes)\n )",
      "calls": 3,
      "total_time": 80.876639,
      "rows": 3,
      "shared_blks_hit": 60,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4933918777521902000,
      "md5": "b8e87ad0227c702b59143b9b621b2522"
    },
    "b7d373c8db27e676fdfdc77dc47b08a0": {
      "rownum": 47,
      "query": "CREATE TABLE test_schema.orders\n(\n id serial,\n cnt integer,\n CONSTRAINT orders_pk PRIMARY KEY (id)\n)",
      "calls": 1,
      "total_time": 79.62047,
      "rows": 0,
      "shared_blks_hit": 460,
      "shared_blks_read": 40,
      "shared_blks_dirtied": 47,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1491185255100233500,
      "md5": "b7d373c8db27e676fdfdc77dc47b08a0"
    },
    "d02d1aef973dfdb7a87f56b6b6dfea91": {
      "rownum": 48,
      "query": "create table bloated as select i from generate_series(1, 100000) _(i)",
      "calls": 1,
      "total_time": 66.098358,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 443,
      "shared_blks_dirtied": 444,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 171,
      "temp_blks_written": 171,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2951921325210440700,
      "md5": "d02d1aef973dfdb7a87f56b6b6dfea91"
    },
    "9258f9fcfdd6b8adf0656d0f6af84565": {
      "rownum": 49,
      "query": "with data as (\n with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n ), step0 as (\n select\n tbl.oid tblid,\n nspname,\n tbl.relname AS tblname,\n idx.relname AS idxname,\n idx.reltuples,\n idx.relpages,\n idx.relam,\n indrelid,\n indexrelid,\n regexp_split_to_table(indkey::text, $2)::smallint AS attnum, \n coalesce(substring(array_to_string(idx.reloptions, $3) from $4)::smallint, $5) as fillfactor,\n pg_total_relation_size(tbl.oid) - pg_indexes_size(tbl.oid) - coalesce(pg_total_relation_size(tbl.reltoastrelid), $6) as table_size_bytes\n from pg_index\n join pg_class idx on idx.oid = pg_index.indexrelid\n join pg_class tbl on tbl.oid = pg_index.indrelid\n join pg_namespace on pg_namespace.oid = idx.relnamespace\n join pg_am a ON idx.relam = a.oid\n where a.amname = $7\n AND pg_index.indisvalid\n AND tbl.relkind = $8\n AND idx.relpages > $9\n AND pg_namespace.nspname NOT IN ($10, $11)\n ), step1 as (\n select\n i.tblid,\n i.nspname as schema_name,\n i.tblname as table_name,\n i.idxname as index_name,\n i.reltuples,\n i.relpages,\n i.relam,\n a.attrelid AS table_oid,\n current_setting($12)::numeric AS bs,\n fillfactor,\n \n case when version() ~ $13 then $14 else $15 end as maxalign,\n /* per page header, fixed size: 20 for 7.X, 24 for others */\n $16 AS pagehdr,\n /* per page btree opaque data */\n $17 AS pageopqdata,\n /* per tuple header: add IndexAttributeBitMapData if some cols are null-able */\n case\n when max(coalesce(s.null_frac,$18)) = $19 then $20 \n else $21 + (( $22 + $23 - $24 ) / $25) \n end as index_tuple_hdr_bm,\n /* data len: we remove null values save space using it fractionnal part from stats */\n sum(($26 - coalesce(s.null_frac, $27)) * coalesce(s.avg_width, $28)) as nulldatawidth,\n max(case when a.atttypid = $29::regtype then $30 else $31 end) > $32 as is_na,\n i.table_size_bytes\n from pg_attribute as a\n join step0 as i on a.attrelid = i.indexrelid AND a.attnum = i.attnum\n join pg_stats as s on\n s.schemaname = i.nspname\n and (\n (s.tablename = i.tblname and s.attname = pg_catalog.pg_get_indexdef(a.attrelid, a.attnum, $33)) \n OR (s.tablename = i.idxname AND s.attname = a.attname) \n )\n join pg_type as t on a.atttypid = t.oid\n where a.attnum > $34\n group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17\n ), step2 as (\n select\n *,\n (\n index_tuple_hdr_bm + maxalign\n \n - case when index_tuple_hdr_bm % maxalign = $35 THEN maxalign else index_tuple_hdr_bm % maxalign end\n + nulldatawidth + maxalign\n \n - case\n when nulldatawidth = $36 then $37\n when nulldatawidth::integer % maxalign = $38 then maxalign\n else nulldatawidth::integer % maxalign\n end\n )::numeric as nulldatahdrwidth\n \n from step1\n ), step3 as (\n select\n *,\n \n coalesce($39 + ceil(reltuples / floor((bs - pageopqdata - pagehdr) / ($40 + nulldatahdrwidth)::float)), $41) as est_pages,\n coalesce($42 + ceil(reltuples / floor((bs - pageopqdata - pagehdr) * fillfactor / ($43 * ($44 + nulldatahdrwidth)::float))), $45) as est_pages_ff\n \n from step2\n join pg_am am on step2.relam = am.oid\n where am.amname = $46\n ), step4 as (\n SELECT\n *,\n bs*(relpages)::bigint AS real_size,\n \n bs*(relpages-est_pages)::bigint AS extra_size,\n $47 * (relpages-est_pages)::float / relpages AS extra_ratio,\n bs*(relpages-est_pages_ff) AS bloat_size,\n $48 * (relpages-est_pages_ff)::float / relpages AS bloat_ratio\n \n from step3\n \n )\n select\n case is_na when $49 then $50 else $51 end as \"is_na\",\n index_name as \"index_name\",\n coalesce(nullif(step4.schema_name, $52) || $53, $54) || step4.table_name as \"table_name\",\n left(index_name, $55) || case when length(index_name) > $56 then $57 else $58 end || $59 || coalesce(nullif(step4.schema_name, $60) || $61, $62) || step4.table_name || $63as \"index_table_name\",\n real_size as \"real_size_bytes\",\n pg_size_pretty(real_size::numeric) as \"size\",\n case\n when (real_size - bloat_size)::numeric >=$64\n then real_size::numeric / (real_size - bloat_size)::numeric\n else $65\n end as \"bloat_ratio\",\n extra_ratio as \"extra_ratio_percent\",\n case\n when extra_size::numeric >= $66\n then $67 || pg_size_pretty(extra_size::numeric)::text || $68 || round(extra_ratio::numeric, $69)::text || $70\n else $71\n end as \"extra\",\n case\n when extra_size::numeric >= $72\n then extra_size\n else $73\n end as \"extra_size_bytes\",\n case\n when bloat_size::numeric >= $74\n then $75 || pg_size_pretty(bloat_size::numeric)::text || $76 || round(bloat_ratio::numeric, $77)::text || $78\n else $79\n end as \"bloat\",\n case\n when (bloat_size)::numeric >=$80\n then bloat_size\n else $81\n end as \"bloat_size_bytes\",\n case\n when (bloat_ratio)::numeric >=$82\n then bloat_ratio\n else $83\n end as \"bloat_ratio_percent\",\n case\n when (real_size - bloat_size)::numeric >=$84\n then $85 || pg_size_pretty((real_size - bloat_size)::numeric)\n else $86\n end as \"live_data_size\",\n case\n when (real_size - bloat_size)::numeric >=$87\n then (real_size - bloat_size)::numeric\n else $88\n end as \"live_data_size_bytes\",\n case\n when (real_size - bloat_size)::numeric >=$89\n then (real_size - bloat_size)::numeric\n else $90\n end as \"live_bytes\",\n fillfactor,\n case when ot.table_id is not null then $91 else $92 end as overrided_settings,\n table_size_bytes\n from step4\n left join overrided_tables ot on ot.table_id = step4.tblid\n order by bloat_size desc nulls last\n), limited_data as (\n select * from data\n), num_limited_data as (\n select\n row_number() over () num,\n limited_data.*\n from limited_data\n), limited_json_data as (\n select json_object_agg(ld.\"index_table_name\", ld) as json from num_limited_data ld\n), total_data as (\n select\n sum($93) as count,\n sum(\"extra_size_bytes\") as \"extra_size_bytes_sum\",\n sum(\"real_size_bytes\") as \"real_size_bytes_sum\",\n sum(\"bloat_size_bytes\") as \"bloat_size_bytes_sum\",\n (sum(\"real_size_bytes\")::numeric/sum(\"live_data_size_bytes\")::numeric) as \"bloat_ratio_avg\",\n (sum(\"bloat_size_bytes\")::numeric/sum(\"real_size_bytes\")::numeric * $94) as \"bloat_ratio_percent_avg\",\n sum(\"extra_size_bytes\") as \"extra_size_bytes_sum\",\n (select sum(ts.table_size_bytes) from (select distinct(table_name), table_size_bytes from data) ts) as \"table_size_bytes_sum\",\n sum(\"live_data_size_bytes\") as \"live_data_size_bytes_sum\"\n from data\n)\nselect\n json_build_object(\n $95,\n (select * from limited_json_data),\n $96,\n (select row_to_json(total_data) from total_data),\n $97,\n (select count($98) from limited_data where overrided_settings = $99),\n $100,\n (select pg_database_size(current_database()))\n )",
      "calls": 3,
      "total_time": 50.41928,
      "rows": 3,
      "shared_blks_hit": 33747,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2342313167581097500,
      "md5": "9258f9fcfdd6b8adf0656d0f6af84565"
    },
    "b3be0598758fa478ca0b6bdb92e182bd": {
      "rownum": 50,
      "query": "with fk_indexes as (\n select\n n.nspname as schema_name,\n ci.relname as index_name,\n cr.relname as table_name,\n (confrelid::regclass)::text as fk_table_ref,\n array_to_string(indclass, $1) as opclasses\n from pg_index i\n join pg_class ci on ci.oid = i.indexrelid and ci.relkind = $2\n join pg_class cr on cr.oid = i.indrelid and cr.relkind = $3\n join pg_namespace n on n.oid = ci.relnamespace\n join pg_constraint cn on cn.conrelid = cr.oid\n left join pg_stat_user_indexes si on si.indexrelid = i.indexrelid\n where\n contype = $4\n and i.indisunique is false\n and conkey is not null\n and ci.relpages > $5\n and si.idx_scan < $6\n), table_scans as (\n select relid,\n tables.idx_scan + tables.seq_scan as all_scans,\n ( tables.n_tup_ins + tables.n_tup_upd + tables.n_tup_del ) as writes,\n pg_relation_size(relid) as table_size\n from pg_stat_user_tables as tables\n join pg_class c on c.oid = relid\n where c.relpages > $7\n), all_writes as (\n select sum(writes) as total_writes\n from table_scans\n), indexes as (\n select\n i.indrelid,\n i.indexrelid,\n n.nspname as schema_name,\n cr.relname as table_name,\n ci.relname as index_name,\n quote_ident(n.nspname) as formated_schema_name,\n quote_ident(ci.relname) as formated_index_name,\n quote_ident(cr.relname) as formated_table_name,\n coalesce(nullif(quote_ident(n.nspname), $8) || $9, $10) || quote_ident(cr.relname) as formated_relation_name,\n si.idx_scan,\n pg_relation_size(i.indexrelid) as index_bytes,\n ci.relpages,\n (case when a.amname = $11 then $12 else $13 end) as idx_is_btree,\n pg_get_indexdef(i.indexrelid) as index_def,\n array_to_string(i.indclass, $14) as opclasses\n from pg_index i\n join pg_class ci on ci.oid = i.indexrelid and ci.relkind = $15\n join pg_class cr on cr.oid = i.indrelid and cr.relkind = $16\n join pg_namespace n on n.oid = ci.relnamespace\n join pg_am a ON ci.relam = a.oid\n left join pg_stat_user_indexes si on si.indexrelid = i.indexrelid\n where\n i.indisunique = $17\n and i.indisvalid = $18\n and ci.relpages > $19\n), index_ratios as (\n select\n i.indexrelid as index_id,\n i.schema_name,\n i.table_name,\n i.index_name,\n idx_scan,\n all_scans,\n round(( case when all_scans = $20 then $21::numeric\n else idx_scan::numeric/all_scans * $22 end), $23) as index_scan_pct,\n writes,\n round((case when writes = $24 then idx_scan::numeric else idx_scan::numeric/writes end), $25)\n as scans_per_write,\n index_bytes as index_size_bytes,\n table_size as table_size_bytes,\n i.relpages,\n idx_is_btree,\n index_def,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n i.opclasses,\n case when fi.index_name is not null then $26 else $27 end as supports_fk\n from indexes i\n left join fk_indexes fi on\n fi.fk_table_ref = i.table_name\n and fi.schema_name = i.schema_name \n and fi.opclasses like (i.opclasses || $28)\n join table_scans ts on ts.relid = i.indrelid\n),\n\nnever_used_indexes as (\n select\n $29 as reason,\n ir.*\n from index_ratios ir\n where\n idx_scan = $30\n and idx_is_btree\n order by index_size_bytes desc\n), never_used_indexes_num as (\n select row_number() over () num, nui.*\n from never_used_indexes nui\n), never_used_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from never_used_indexes\n), never_used_indexes_json as (\n select\n json_object_agg(nuin.schema_name || $31 || nuin.index_name, nuin) as json\n from never_used_indexes_num nuin\n),\n\nrarely_used_indexes as (\n select\n $32 as reason,\n *,\n $33 as grp\n from index_ratios\n where\n scans_per_write <= $34\n and index_scan_pct < $35\n and idx_scan > $36\n and writes > $37\n and idx_is_btree\n union all\n select\n $38 as reason,\n *,\n $39 as grp\n from index_ratios\n where\n index_scan_pct < $40\n and scans_per_write > $41\n and idx_scan > $42\n and idx_is_btree\n and index_size_bytes > $43\n union all\n select\n $44 as reason,\n index_ratios.*,\n $45 as grp\n from index_ratios, all_writes\n where\n ( writes::numeric / ( total_writes + $46 ) ) > $47\n and not idx_is_btree\n and index_size_bytes > $48\n order by grp, index_size_bytes desc\n), rarely_used_indexes_num as (\n select row_number() over () num, rui.*\n from rarely_used_indexes rui\n), rarely_used_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from rarely_used_indexes\n), rarely_used_indexes_json as (\n select\n json_object_agg(ruin.schema_name || $49 || ruin.index_name, ruin) as json\n from rarely_used_indexes_num ruin\n),\n\nindex_data as (\n select\n *,\n indkey::text as columns,\n array_to_string(indclass, $50) as opclasses\n from pg_index i\n join pg_class ci on ci.oid = i.indexrelid and ci.relkind = $51\n where indisvalid = $52 and ci.relpages > $53\n), redundant_indexes as (\n select\n i2.indexrelid as index_id,\n tnsp.nspname AS schema_name,\n trel.relname AS table_name,\n pg_relation_size(trel.oid) as table_size_bytes,\n irel.relname AS index_name,\n am1.amname as access_method,\n (i1.indexrelid::regclass)::text as reason,\n i1.indexrelid as reason_index_id,\n pg_get_indexdef(i1.indexrelid) main_index_def,\n pg_size_pretty(pg_relation_size(i1.indexrelid)) main_index_size,\n pg_get_indexdef(i2.indexrelid) index_def,\n pg_relation_size(i2.indexrelid) index_size_bytes,\n s.idx_scan as index_usage,\n quote_ident(tnsp.nspname) as formated_schema_name,\n coalesce(nullif(quote_ident(tnsp.nspname), $54) || $55, $56) || quote_ident(irel.relname) as formated_index_name,\n quote_ident(trel.relname) AS formated_table_name,\n coalesce(nullif(quote_ident(tnsp.nspname), $57) || $58, $59) || quote_ident(trel.relname) as formated_relation_name,\n i2.opclasses\n from\n index_data as i1\n join index_data as i2 on (\n i1.indrelid = i2.indrelid \n and i1.indexrelid <> i2.indexrelid \n )\n inner join pg_opclass op1 on i1.indclass[$60] = op1.oid\n inner join pg_opclass op2 on i2.indclass[$61] = op2.oid\n inner join pg_am am1 on op1.opcmethod = am1.oid\n inner join pg_am am2 on op2.opcmethod = am2.oid\n join pg_stat_user_indexes as s on s.indexrelid = i2.indexrelid\n join pg_class as trel on trel.oid = i2.indrelid\n join pg_namespace as tnsp on trel.relnamespace = tnsp.oid\n join pg_class as irel on irel.oid = i2.indexrelid\n where\n not i2.indisprimary \n and not ( \n i2.indisunique and not i1.indisprimary\n )\n and am1.amname = am2.amname \n and i1.columns like (i2.columns || $62) \n and i1.opclasses like (i2.opclasses || $63)\n), redundant_indexes_fk as (\n select\n ri.*,\n case when fi.index_name is not null then $64 else $65 end as supports_fk\n from redundant_indexes ri\n left join fk_indexes fi on\n fi.fk_table_ref = ri.table_name\n and fi.opclasses like (ri.opclasses || $66)\n where substring(ri.main_index_def from position($67 in ri.main_index_def) for length(ri.main_index_def)) =\n substring(ri.index_def from position($68 in ri.index_def) for length(ri.index_def))\n),\n\nredundant_indexes_tmp_num as (\n select row_number() over () num, rig.*\n from redundant_indexes_fk rig\n), redundant_indexes_tmp_links as (\n select\n ri1.*,\n ri2.num as r_num\n from redundant_indexes_tmp_num ri1\n left join redundant_indexes_tmp_num ri2 on ri2.reason_index_id = ri1.index_id and ri1.reason_index_id = ri2.index_id\n), redundant_indexes_tmp_cut as (\n select\n *\n from redundant_indexes_tmp_links\n where num < r_num or r_num is null\n), redundant_indexes_cut_grouped as (\n select\n distinct(num),\n *\n from redundant_indexes_tmp_cut\n order by index_size_bytes desc\n), redundant_indexes_grouped as (\n select\n index_id,\n schema_name,\n table_name,\n table_size_bytes,\n index_name,\n access_method,\n string_agg(distinct reason, $69) as reason,\n string_agg(main_index_def, $70) as main_index_def,\n string_agg(main_index_size, $71) as main_index_size,\n index_def,\n index_size_bytes,\n index_usage,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n supports_fk\n from redundant_indexes_cut_grouped\n group by\n index_id,\n table_size_bytes,\n schema_name,\n table_name,\n index_name,\n access_method,\n index_def,\n index_size_bytes,\n index_usage,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n supports_fk\n order by index_size_bytes desc\n), redundant_indexes_num as (\n select row_number() over () num, rig.*\n from redundant_indexes_grouped rig\n), redundant_indexes_json as (\n select\n json_object_agg(rin.schema_name || $72 || rin.index_name, rin) as json\n from redundant_indexes_num rin\n), redundant_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from redundant_indexes_grouped\n),\n\ntogether as (\n select\n reason::text,\n index_id::text,\n schema_name::text,\n table_name::text,\n index_name::text,\n pg_size_pretty(index_size_bytes)::text as index_size,\n index_def::text,\n $73 as main_index_def,\n formated_index_name::text,\n formated_schema_name::text,\n formated_table_name::text,\n formated_relation_name::text\n from never_used_indexes\n union all\n select\n reason::text,\n index_id::text,\n schema_name::text,\n table_name::text,\n index_name::text,\n pg_size_pretty(index_size_bytes)::text as index_size,\n index_def::text,\n main_index_def::text,\n formated_index_name::text,\n formated_schema_name::text,\n formated_table_name::text,\n formated_relation_name::text\n from redundant_indexes\n), do_lines as (\n select format($74, max(formated_index_name), max(index_size), string_agg(reason, $75), table_name) as line\n from together t1\n group by table_name, index_name\n order by table_name, index_name\n), undo_lines as (\n select\n replace(\n format($76, max(index_def), table_name),\n $77,\n $78\n )as line\n from together t2\n group by table_name, index_name\n order by table_name, index_name\n), database_stat as (\n select\n row_to_json(dbstat)\n from (\n select\n sd.stats_reset::timestamptz(0),\n age(\n date_trunc($79,now()),\n date_trunc($80,sd.stats_reset)\n ) as stats_age,\n ((extract($81 from now()) - extract($82 from sd.stats_reset))/$83)::int as days\n from pg_stat_database sd\n where datname = current_database()\n ) dbstat\n)\n\nselect\n json_build_object(\n $84,\n (select * from never_used_indexes_json),\n $85,\n (select row_to_json(nuit) from never_used_indexes_total as nuit),\n $86,\n (select * from rarely_used_indexes_json),\n $87,\n (select row_to_json(ruit) from rarely_used_indexes_total as ruit),\n $88,\n (select * from redundant_indexes_json),\n $89,\n (select row_to_json(rit) from redundant_indexes_total as rit),\n $90,\n (select json_agg(dl.line) from do_lines as dl),\n $91,\n (select json_agg(ul.line) from undo_lines as ul),\n $92,\n (select * from database_stat)\n )",
      "calls": 3,
      "total_time": 39.704805,
      "rows": 3,
      "shared_blks_hit": 30752,
      "shared_blks_read": 1,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3166869977555654700,
      "md5": "b3be0598758fa478ca0b6bdb92e182bd"
    },
    "6da9759218244aaa5ca3be7f37cd4177": {
      "rownum": 51,
      "query": "with timeouts as (\n select json_object_agg(s.name,s ) from pg_settings s where name in ($1, $2, $3)\n), locks as (\n select json_object_agg(s.name,s ) from pg_settings s where name in ($4, $5, $6, $7, $8, $9)\n), databases_stat as (\n select\n *,\n ((now() - sd.stats_reset)::interval(0)::text) as stats_reset_age\n from pg_stat_database sd\n where datname in (SELECT datname FROM pg_database WHERE datistemplate = $10)\n order by deadlocks desc\n), num_dbs_data as (\n select\n row_number() over () num,\n ds.*\n from databases_stat ds\n), dbs_data as (\n select json_object_agg(sd.datname, sd) from num_dbs_data sd\n), db_specified_settings as (\n select json_object_agg(dbs.database, dbs) from\n (select\n (select datname from pg_database where oid = pd.setdatabase) as database,\n *\n from pg_db_role_setting pd\n where\n setconfig::text ~ $11\n and setdatabase is not null and setdatabase <> $12\n ) dbs\n), user_specified_settings as (\n select json_object_agg(pr.rolname, pr) from pg_roles pr where rolconfig::text ~ $13\n)\nselect\n json_build_object(\n $14, (select * from timeouts), $15, (select * from locks),\n $16, (select * from dbs_data),\n $17, (select * from db_specified_settings),\n $18, (select * from user_specified_settings)\n )",
      "calls": 3,
      "total_time": 38.239014,
      "rows": 3,
      "shared_blks_hit": 48,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6927439939325166000,
      "md5": "6da9759218244aaa5ca3be7f37cd4177"
    },
    "0ff50369e176dafda680a1d5c408abe3": {
      "rownum": 52,
      "query": "with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n), data as (\n select\n coalesce(nullif(schemaname || $2, $3), $4) || c.relname as \"relation\",\n c.relkind,\n now() - last_autovacuum as since_last_autovacuum,\n now() - last_vacuum as since_last_vacuum,\n autovacuum_count as av_count,\n vacuum_count as v_count,\n n_tup_ins,\n n_tup_upd,\n n_tup_del,\n reltuples::int8 as pg_class_reltuples,\n n_live_tup,\n n_dead_tup,\n round((n_dead_tup::numeric * $5 / nullif(n_dead_tup + n_live_tup, $6))::numeric, $7) as dead_ratio,\n case when ot.table_id is not null then $8 else $9 end as overrided_settings\n from pg_stat_all_tables\n join pg_class c on c.oid = relid\n left join overrided_tables ot on ot.table_id = c.oid\n where reltuples > $10\n order by 13 desc\n), num_dead_tuples as (\n select\n row_number() over () num,\n data.*\n from data\n), dead_tuples as (\n select json_object_agg(num_dead_tuples.\"relation\", num_dead_tuples) as json from num_dead_tuples\n), database_stat as (\n select\n row_to_json(dbstat)\n from (\n select\n sd.stats_reset::timestamptz(0),\n age(\n date_trunc($11,now()),\n date_trunc($12,sd.stats_reset)\n ) as stats_age\n from pg_stat_database sd\n where datname = current_database()\n ) dbstat\n)\nselect\n json_build_object(\n $13,\n (select * from dead_tuples),\n $14,\n (select * from database_stat),\n $15,\n (select count($16) from data where overrided_settings = $17)\n )",
      "calls": 3,
      "total_time": 37.591779,
      "rows": 3,
      "shared_blks_hit": 159,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4833461161022857000,
      "md5": "0ff50369e176dafda680a1d5c408abe3"
    },
    "23bbd085bb37c5fafcd10ade38dfacf7": {
      "rownum": 53,
      "query": "create index i_bloated on bloated(i)",
      "calls": 1,
      "total_time": 37.275195,
      "rows": 0,
      "shared_blks_hit": 534,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8841083458873351000,
      "md5": "23bbd085bb37c5fafcd10ade38dfacf7"
    },
    "ae86f655321284b93745fc70e646b95a": {
      "rownum": 54,
      "query": "with data as (\n with fk_actions ( code, action ) as (\n values ($1, $2),\n ($3, $4),\n ($5, $6),\n ($7, $8),\n ($9, $10)\n ), fk_list as (\n select\n pg_constraint.oid as fkoid, conrelid, confrelid as parentid,\n conname,\n relname,\n nspname,\n fk_actions_update.action as update_action,\n fk_actions_delete.action as delete_action,\n conkey as key_cols,\n pg_class.relpages\n from pg_constraint\n join pg_class on conrelid = pg_class.oid\n join pg_namespace on pg_class.relnamespace = pg_namespace.oid\n join fk_actions as fk_actions_update on confupdtype = fk_actions_update.code\n join fk_actions as fk_actions_delete on confdeltype = fk_actions_delete.code\n where contype = $11 \n ), fk_attributes as (\n select fkoid, conrelid, attname, attnum\n from fk_list\n join pg_attribute on conrelid = attrelid and attnum = any(key_cols)\n order by fkoid, attnum\n ), fk_cols_list as (\n select fkoid, array_agg(attname) as cols_list\n from fk_attributes\n group by fkoid\n ), index_list as (\n select\n indexrelid as indexid,\n pg_class.relname as indexname,\n indrelid,\n indkey,\n indpred is not null as has_predicate\n from pg_index\n join pg_class on indexrelid = pg_class.oid\n where indisvalid and pg_class.relkind = $12 and pg_class.relpages > $13\n ), fk_index_match as (\n select\n fk_list.*,\n indexid,\n indexname,\n indkey::int[] as indexatts,\n has_predicate,\n array_length(key_cols, $14) as fk_colcount,\n array_length(indkey,$15) as index_colcount,\n relpages,\n cols_list\n from fk_list\n join fk_cols_list using (fkoid)\n left join index_list on\n conrelid = indrelid\n and (indkey::int2[])[$16:(array_length(key_cols,$17) -$18)] operator(pg_catalog.@>) key_cols\n ), fk_perfect_match as (\n select fkoid\n from fk_index_match\n where\n (index_colcount - $19) <= fk_colcount\n and not has_predicate\n ), fk_index_check as (\n select $20 as issue, *, $21 as issue_sort\n from fk_index_match\n where indexid is null\n union all\n select $22 as issue, *, $23\n from fk_index_match\n where\n indexid is not null\n and fkoid not in (select fkoid from fk_perfect_match)\n ), parent_table_stats as (\n select\n fkoid,\n tabstats.relname as parent_name,\n (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as parent_writes,\n fk_list.relpages\n from pg_stat_user_tables as tabstats\n join fk_list on relid = parentid\n ), fk_table_stats as (\n select\n fkoid,\n (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as writes,\n seq_scan as table_scans,\n relpages\n from pg_stat_user_tables as tabstats\n join fk_list on relid = conrelid\n )\n select\n nspname as schema_name,\n relname as table_name,\n conname as fk_name,\n issue,\n conrelid,\n writes,\n table_scans,\n parent_name,\n parentid,\n parent_writes,\n cols_list,\n indexid\n from fk_index_check\n join parent_table_stats using (fkoid)\n join fk_table_stats using (fkoid)\n where\n fk_table_stats.relpages > $24\n and (\n writes > $25\n or parent_writes > $26\n or parent_table_stats.relpages > $27\n )\n order by issue_sort, fk_table_stats.relpages desc, table_name, fk_name\n),\nnum_data as (\n select row_number() over () num,\n schema_name,\n table_name,\n fk_name,\n issue,\n round(pg_relation_size(conrelid)/($28^$29)::numeric) as table_mb,\n writes,\n table_scans,\n parent_name,\n round(pg_relation_size(parentid)/($30^$31)::numeric) as parent_mb,\n parent_writes,\n cols_list,\n pg_get_indexdef(indexid) as indexdef\n from data\n)\nselect json_object_agg(num_data.num, num_data) from num_data",
      "calls": 3,
      "total_time": 36.610444,
      "rows": 3,
      "shared_blks_hit": 180,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3443800202045939700,
      "md5": "ae86f655321284b93745fc70e646b95a"
    },
    "d5350092f6715050afb023608945ae0e": {
      "rownum": 55,
      "query": "with data as (\n select\n c.oid,\n (select spcname from pg_tablespace where oid = reltablespace) as tblspace,\n nspname as schema_name,\n relname as table_name,\n c.reltuples as row_estimate,\n pg_total_relation_size(c.oid) as total_bytes,\n pg_indexes_size(c.oid) as index_bytes,\n pg_total_relation_size(reltoastrelid) as toast_bytes,\n pg_total_relation_size(c.oid) - pg_indexes_size(c.oid) - coalesce(pg_total_relation_size(reltoastrelid), $1) as table_bytes\n from pg_class c\n left join pg_namespace n on n.oid = c.relnamespace\n where relkind = $2 and nspname <> $3\n order by c.relpages desc\n), data2 as (\n select\n $4::oid as oid,\n $5 as tblspace,\n $6 as schema_name,\n $7 as table_name,\n sum(row_estimate) as row_estimate,\n sum(total_bytes) as total_bytes,\n sum(index_bytes) as index_bytes,\n sum(toast_bytes) as toast_bytes,\n sum(table_bytes) as table_bytes\n from data\n union all\n select\n $8::oid as oid,\n $9,\n $10 as schema_name,\n $11 || coalesce(tblspace, $12) || $13 as table_name,\n sum(row_estimate) as row_estimate,\n sum(total_bytes) as total_bytes,\n sum(index_bytes) as index_bytes,\n sum(toast_bytes) as toast_bytes,\n sum(table_bytes) as table_bytes\n from data\n where (select count(distinct coalesce(tblspace, $14)) from data) > $15\n group by tblspace\n union all\n select * from data\n), tables as (\n select\n coalesce(nullif(schema_name, $16) || $17, $18) || table_name || coalesce($19 || tblspace || $20, $21) as \"Table\",\n $22 || case\n when row_estimate > $23^$24 then round(row_estimate::numeric / $25^$26::numeric, $27)::text || $28\n when row_estimate > $29^$30 then round(row_estimate::numeric / $31^$32::numeric, $33)::text || $34\n when row_estimate > $35^$36 then round(row_estimate::numeric / $37^$38::numeric, $39)::text || $40\n when row_estimate > $41^$42 then round(row_estimate::numeric / $43^$44::numeric, $45)::text || $46\n else row_estimate::text\n end as \"Rows\",\n pg_size_pretty(total_bytes) || $47 || round(\n $48 * total_bytes::numeric / nullif(sum(total_bytes) over (partition by (schema_name is null), left(table_name, $49) = $50), $51),\n $52\n )::text || $53 as \"Total Size\",\n pg_size_pretty(table_bytes) || $54 || round(\n $55 * table_bytes::numeric / nullif(sum(table_bytes) over (partition by (schema_name is null), left(table_name, 3) = '***'), $56),\n $57\n )::text || $58 as \"Table Size\",\n pg_size_pretty(index_bytes) || $59 || round(\n $60 * index_bytes::numeric / nullif(sum(index_bytes) over (partition by (schema_name is null), left(table_name, 3) = '***'), $61),\n $62\n )::text || $63 as \"Index(es) Size\",\n pg_size_pretty(toast_bytes) || $64 || round(\n $65 * toast_bytes::numeric / nullif(sum(toast_bytes) over (partition by (schema_name is null), left(table_name, 3) = '***'), $66),\n $67\n )::text || $68 as \"TOAST Size\"\n from data2\n where schema_name is distinct from $69\n order by oid is null desc, total_bytes desc nulls last\n), total as (\n select\n $70::bigint as num,\n ts.*\n from tables ts\n where \"Table\" = $71\n), num_tables as (\n select\n row_number() over () num,\n ts.*\n from tables ts\n where \"Table\" <> $72\n), together as (\n select * from total\n union all\n select * from num_tables\n)\nselect json_object_agg(t.\"Table\", t) as json from together t",
      "calls": 2,
      "total_time": 35.543154,
      "rows": 2,
      "shared_blks_hit": 5694,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1240453345977110000,
      "md5": "d5350092f6715050afb023608945ae0e"
    },
    "ab7d8f0edf844d85869cd324de44e515": {
      "rownum": 56,
      "query": "delete from bloated where i % $1 = $2",
      "calls": 1,
      "total_time": 33.076121,
      "rows": 50000,
      "shared_blks_hit": 50443,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3076169388096589300,
      "md5": "ab7d8f0edf844d85869cd324de44e515"
    },
    "6f3d061d4bbc9149d617dcbd58d72cee": {
      "rownum": 57,
      "query": "with data as (\n with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n ), step1 as (\n select\n tbl.oid tblid,\n ns.nspname as schema_name,\n tbl.relname as table_name,\n tbl.reltuples,\n tbl.relpages as heappages,\n coalesce(toast.relpages, $2) as toastpages,\n coalesce(toast.reltuples, $3) as toasttuples,\n coalesce(substring(array_to_string(tbl.reloptions, $4) from $5 for $6)::int2, $7) as fillfactor,\n current_setting($8)::numeric as bs,\n case when version() ~ $9 then $10 else $11 end as ma, \n $12 as page_hdr,\n $13 + case when max(coalesce(null_frac, $14)) > $15 then ($16 + count(*)) / $17 else $18::int end\n + case when tbl.relhasoids then $19 else $20 end as tpl_hdr_size,\n sum(($21 - coalesce(s.null_frac, $22)) * coalesce(s.avg_width, $23)) as tpl_data_size,\n bool_or(att.atttypid = $24::regtype) or count(att.attname) <> count(s.attname) as is_na\n from pg_attribute as att\n join pg_class as tbl on att.attrelid = tbl.oid and tbl.relkind = $25\n join pg_namespace as ns on ns.oid = tbl.relnamespace\n join pg_stats as s on s.schemaname = ns.nspname and s.tablename = tbl.relname and not s.inherited and s.attname = att.attname\n left join pg_class as toast on tbl.reltoastrelid = toast.oid\n where att.attnum > $26 and not att.attisdropped and s.schemaname not in ($27, $28) and tbl.relpages > $29\n group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, tbl.relhasoids\n order by 2, 3\n ), step2 as (\n select\n *,\n (\n $30 + tpl_hdr_size + tpl_data_size + ($31 * ma)\n - case when tpl_hdr_size % ma = $32 then ma else tpl_hdr_size % ma end\n - case when ceil(tpl_data_size)::int % ma = $33 then ma else ceil(tpl_data_size)::int % ma end\n ) as tpl_size,\n bs - page_hdr as size_per_block,\n (heappages + toastpages) as tblpages\n from step1\n ), step3 as (\n select\n *,\n ceil(reltuples / ((bs - page_hdr) / tpl_size)) + ceil(toasttuples / $34) as est_tblpages,\n ceil(reltuples / ((bs - page_hdr) * fillfactor / (tpl_size * $35))) + ceil(toasttuples / $36) as est_tblpages_ff\n \n from step2\n ), step4 as (\n select\n *,\n tblpages * bs as real_size,\n (tblpages - est_tblpages) * bs as extra_size,\n case when tblpages - est_tblpages > $37 then $38 * (tblpages - est_tblpages) / tblpages::float else $39 end as extra_ratio,\n (tblpages - est_tblpages_ff) * bs as bloat_size,\n case when tblpages - est_tblpages_ff > $40 then $41 * (tblpages - est_tblpages_ff) / tblpages::float else $42 end as bloat_ratio\n \n from step3\n left join pg_stat_user_tables su on su.relid = tblid\n \n \n )\n select\n case is_na when $43 then $44 else $45 end as \"is_na\",\n coalesce(nullif(step4.schema_name, $46) || $47, $48) || step4.table_name as \"table_name\",\n pg_size_pretty(real_size::numeric) as \"real_size\",\n case\n when extra_size::numeric >= $49\n then extra_size::numeric\n else $50\n end as \"extra_size_bytes\",\n extra_ratio as \"extra_ratio_percent\",\n case\n when extra_size::numeric >= $51\n then $52 || pg_size_pretty(extra_size::numeric)::text || $53 || round(extra_ratio::numeric, $54)::text || $55\n else $56\n end as \"extra\",\n case\n when bloat_size::numeric >= $57\n then bloat_size::numeric\n else $58\n end as \"bloat_size_bytes\",\n bloat_ratio as \"bloat_ratio_percent\",\n case\n when bloat_size::numeric >= $59\n then $60 || pg_size_pretty(bloat_size::numeric)::text || $61 || round(bloat_ratio::numeric, $62)::text || $63\n else $64\n end as \"bloat_estimate\",\n real_size as \"real_size_bytes\",\n case\n when (real_size - bloat_size)::numeric >=$65\n then $66 || pg_size_pretty((real_size - bloat_size)::numeric)\n else $67\n end as \"live_data_size\",\n case\n when (real_size - bloat_size)::numeric >=$68\n then (real_size - bloat_size)::numeric\n else $69\n end as \"live_data_size_bytes\",\n greatest(last_autovacuum, last_vacuum)::timestamp(0)::text\n || case greatest(last_autovacuum, last_vacuum)\n when last_autovacuum then $70\n else $71 end as \"last_vaccuum\",\n (\n select\n coalesce(substring(array_to_string(reloptions, $72) from $73)::smallint, $74)\n from pg_class\n where oid = tblid\n ) as \"fillfactor\",\n case when ot.table_id is not null then $75 else $76 end as overrided_settings,\n case\n when (real_size - bloat_size)::numeric >=$77\n then real_size::numeric / (real_size - bloat_size)::numeric\n else $78\n end as \"bloat_ratio\"\n from step4\n left join overrided_tables ot on ot.table_id = step4.tblid\n order by bloat_size desc nulls last\n), limited_data as (\n select * from data\n), num_limited_data as (\n select\n row_number() over () num,\n limited_data.*\n from limited_data\n), limited_json_data as (\n select json_object_agg(ld.\"table_name\", ld) as json from num_limited_data ld\n), total_data as (\n select\n sum($79) as count,\n sum(\"extra_size_bytes\") as \"extra_size_bytes_sum\",\n sum(\"real_size_bytes\") as \"real_size_bytes_sum\",\n sum(\"bloat_size_bytes\") as \"bloat_size_bytes_sum\",\n sum(\"live_data_size_bytes\") as \"live_data_size_bytes_sum\",\n (sum(\"bloat_size_bytes\")::numeric/sum(\"real_size_bytes\")::numeric * $80) as \"bloat_ratio_percent_avg\",\n (sum(\"real_size_bytes\")::numeric/sum(\"live_data_size_bytes\")::numeric) as \"bloat_ratio_avg\",\n sum(\"extra_size_bytes\") as \"extra_size_bytes_sum\"\n from data\n)\nselect\n json_build_object(\n $81,\n (select * from limited_json_data),\n $82,\n (select row_to_json(total_data) from total_data),\n $83,\n (select count($84) from limited_data where overrided_settings = $85),\n $86,\n (select pg_database_size(current_database()))\n )",
      "calls": 3,
      "total_time": 28.532476,
      "rows": 3,
      "shared_blks_hit": 12083,
      "shared_blks_read": 13,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8225577340242389000,
      "md5": "6f3d061d4bbc9149d617dcbd58d72cee"
    },
    "c4790fb842d88609c9245b132b30ea70": {
      "rownum": 58,
      "query": "create table t_47 as select i from generate_series(1, 1000) _(i)",
      "calls": 1,
      "total_time": 20.134332,
      "rows": 0,
      "shared_blks_hit": 230,
      "shared_blks_read": 7,
      "shared_blks_dirtied": 8,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4647624177302223000,
      "md5": "c4790fb842d88609c9245b132b30ea70"
    },
    "b56c0bbcdd112624648ef48f216f3e92": {
      "rownum": 59,
      "query": "alter system set random_page_cost = 2.22",
      "calls": 1,
      "total_time": 18.438483,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1881993450838449000,
      "md5": "b56c0bbcdd112624648ef48f216f3e92"
    },
    "c367fda374da4995af47de525908a301": {
      "rownum": 60,
      "query": "with data as (\n \n select\n /* rownum in snapshot may be not equal to resulting rownum */\n row_number() over (order by total_time desc) as rownum,\n /* pg_stat_statements_part */\n left(query, $1) as query, /* obsolete left ? check pg_stat_statements for cutting */\n calls,\n total_time,\n /*\n min_time,\n max_time,\n mean_time\n stddev_time\n */\n rows,\n shared_blks_hit,\n shared_blks_read,\n shared_blks_dirtied,\n shared_blks_written,\n local_blks_hit,\n local_blks_read,\n local_blks_dirtied,\n local_blks_written,\n temp_blks_read,\n temp_blks_written,\n blk_read_time,\n blk_write_time,\n queryid,\n /*\n save hash\n */\n md5( queryid::text || dbid::text || userid::text ) as md5\n from pg_stat_statements s\n order by total_time desc\n limit $2\n \n )\n select json_build_object(\n $3::text, to_json(now()::timestamptz)::json,\n $4::text, to_json(extract($5 from now()::timestamptz))::json,\n $6, json_object_agg(data.md5, data.*)\n )\n from data",
      "calls": 2,
      "total_time": 13.359829,
      "rows": 2,
      "shared_blks_hit": 12,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 6083449333754262000,
      "md5": "c367fda374da4995af47de525908a301"
    },
    "01a3b4e9764210801c1652a73a862271": {
      "rownum": 61,
      "query": "with settings as (\n select\n json_object_agg(s.name, s)\n from (\n select *\n from pg_settings s\n where\n name not in ($1, $2, $3)\n order by name) s\n), configs as (\n select\n json_object_agg(s.name, s)\n from (select * from pg_config s order by name) s\n)\nselect json_build_object($4, (select * from settings), $5, (select * from configs))",
      "calls": 3,
      "total_time": 13.019272,
      "rows": 3,
      "shared_blks_hit": 9,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1953130978734338600,
      "md5": "01a3b4e9764210801c1652a73a862271"
    },
    "92d63af03b4a15c5a12e730fc76cd3ea": {
      "rownum": 62,
      "query": "create index concurrently i_86 on t_86(i)",
      "calls": 1,
      "total_time": 11.129334,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8296847210748937000,
      "md5": "92d63af03b4a15c5a12e730fc76cd3ea"
    },
    "2ea1d43f8ce2bb9e37579f752cf47068": {
      "rownum": 63,
      "query": "select\n json_build_object($1, version(),\n $2, current_setting($3),\n $4, (select regexp_replace(current_setting($5), $6, $7)),\n $8, (select regexp_replace(current_setting($9), $10, $11)))",
      "calls": 3,
      "total_time": 11.11218,
      "rows": 3,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4605761145085266400,
      "md5": "2ea1d43f8ce2bb9e37579f752cf47068"
    },
    "f02a3c324d47aab6677f9a470273b2e9": {
      "rownum": 64,
      "query": "select json_object_agg(s.name, s) from (select * from pg_settings s order by category, name) s",
      "calls": 3,
      "total_time": 10.393524,
      "rows": 3,
      "shared_blks_hit": 9,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3946074279987536000,
      "md5": "f02a3c324d47aab6677f9a470273b2e9"
    },
    "00a4f940849120bbfb59883305e8ec29": {
      "rownum": 65,
      "query": "create index concurrently i_87 on t_87(i)",
      "calls": 1,
      "total_time": 10.094599,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4787997258376531000,
      "md5": "00a4f940849120bbfb59883305e8ec29"
    },
    "2dd66b22b61a789768ad7400d27dd2c7": {
      "rownum": 66,
      "query": "with data as (\n select\n ae.name,\n installed_version,\n default_version,\n case when installed_version <> default_version then $1 end as is_old\n from pg_extension e\n join pg_available_extensions ae on extname = ae.name\n order by ae.name\n ), withsettins as (\n select\n data.*,\n (select json_object_agg(name, setting)\n from pg_settings\n where name ~ data.name) as settings from data\n order by name\n )\n select json_object_agg(withsettins.name, withsettins) as json from withsettins",
      "calls": 3,
      "total_time": 9.075812,
      "rows": 3,
      "shared_blks_hit": 28,
      "shared_blks_read": 2,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8799259724768328000,
      "md5": "2dd66b22b61a789768ad7400d27dd2c7"
    },
    "21f44671377b75eabf4270d04b2a65b0": {
      "rownum": 67,
      "query": "create index concurrently i_79 on t_79(i)",
      "calls": 1,
      "total_time": 7.719953,
      "rows": 0,
      "shared_blks_hit": 268,
      "shared_blks_read": 6,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1633515346756009000,
      "md5": "21f44671377b75eabf4270d04b2a65b0"
    },
    "43e9adb569a681a982ad22290f73fcf2": {
      "rownum": 68,
      "query": "select pg_reload_conf()",
      "calls": 1,
      "total_time": 7.661219,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6290564462188021000,
      "md5": "43e9adb569a681a982ad22290f73fcf2"
    },
    "3f5606a4240da971a53090a748662aa3": {
      "rownum": 69,
      "query": "create index concurrently i_75 on t_75(i)",
      "calls": 1,
      "total_time": 7.42178,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7808037623078936000,
      "md5": "3f5606a4240da971a53090a748662aa3"
    },
    "44420a1087661f429d68b98d4902469f": {
      "rownum": 70,
      "query": "create index concurrently i_78 on t_78(i)",
      "calls": 1,
      "total_time": 7.207941,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2212016571712053000,
      "md5": "44420a1087661f429d68b98d4902469f"
    },
    "df9e43f53f3999d2a4f7b1395c5ecc90": {
      "rownum": 71,
      "query": "create index concurrently i_84 on t_84(i)",
      "calls": 1,
      "total_time": 7.130474,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 6993074307960304000,
      "md5": "df9e43f53f3999d2a4f7b1395c5ecc90"
    },
    "10ebc718c3fe73ce43017778ed537a55": {
      "rownum": 72,
      "query": "create index concurrently i_91 on t_91(i)",
      "calls": 1,
      "total_time": 7.127635,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1691705557438052000,
      "md5": "10ebc718c3fe73ce43017778ed537a55"
    },
    "ae817cd4ff09538761c56d4fcde6a47d": {
      "rownum": 73,
      "query": "create index concurrently i_85 on t_85(i)",
      "calls": 1,
      "total_time": 6.881569,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2595835262191500300,
      "md5": "ae817cd4ff09538761c56d4fcde6a47d"
    },
    "d63803c367b0c5bd21daaf9aa8ae888a": {
      "rownum": 74,
      "query": "with stat_statements as (\n select json_object_agg(pg_settings.name, pg_settings) as json from pg_settings where name ~ $1\n), kcache as (\n select json_object_agg(pg_settings.name, pg_settings) as json from pg_settings where name ~ $2\n)\nselect json_build_object($3, (select * from stat_statements), $4, (select * from kcache))",
      "calls": 3,
      "total_time": 6.85874,
      "rows": 3,
      "shared_blks_hit": 9,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3798127187466836000,
      "md5": "d63803c367b0c5bd21daaf9aa8ae888a"
    },
    "e1e0f9cc2a48693984cb6b617f5d4d01": {
      "rownum": 75,
      "query": "create index concurrently i_82 on t_82(i)",
      "calls": 1,
      "total_time": 6.803466,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7612278864277391000,
      "md5": "e1e0f9cc2a48693984cb6b617f5d4d01"
    },
    "80e133f5b8e238a0f9699bb0f3a527c7": {
      "rownum": 76,
      "query": "create index concurrently i_90 on t_90(i)",
      "calls": 1,
      "total_time": 6.657301,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 6019360893381295000,
      "md5": "80e133f5b8e238a0f9699bb0f3a527c7"
    },
    "24413a6b03bd91f00bcbfacdcdec9efc": {
      "rownum": 77,
      "query": "create index concurrently i_76 on t_76(i)",
      "calls": 1,
      "total_time": 6.542153,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -949153349382420900,
      "md5": "24413a6b03bd91f00bcbfacdcdec9efc"
    },
    "734762bee8278fb48b3f3983a5eae884": {
      "rownum": 78,
      "query": "create extension if not exists pg_stat_kcache",
      "calls": 1,
      "total_time": 6.501919,
      "rows": 0,
      "shared_blks_hit": 1416,
      "shared_blks_read": 64,
      "shared_blks_dirtied": 21,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2571546517107304400,
      "md5": "734762bee8278fb48b3f3983a5eae884"
    },
    "735202283cbc345a98e4e11a2a38ac32": {
      "rownum": 79,
      "query": "create index concurrently i_80 on t_80(i)",
      "calls": 1,
      "total_time": 6.484588,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8442339306910687000,
      "md5": "735202283cbc345a98e4e11a2a38ac32"
    },
    "4f582bfd5c113f7e4eee5e5bc008390c": {
      "rownum": 80,
      "query": "create index concurrently i_88 on t_88(i)",
      "calls": 1,
      "total_time": 6.453088,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1100590649273718800,
      "md5": "4f582bfd5c113f7e4eee5e5bc008390c"
    },
    "9f4cfff1c0387389606dac086ba2ef8c": {
      "rownum": 81,
      "query": "create index concurrently i_81 on t_81(i)",
      "calls": 1,
      "total_time": 6.287746,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7113339789015606000,
      "md5": "9f4cfff1c0387389606dac086ba2ef8c"
    },
    "b025d0faa8393ae49aabc0ddf64c9da0": {
      "rownum": 82,
      "query": "create index concurrently i_89 on t_89(i)",
      "calls": 1,
      "total_time": 6.242218,
      "rows": 0,
      "shared_blks_hit": 269,
      "shared_blks_read": 6,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2900588791574794000,
      "md5": "b025d0faa8393ae49aabc0ddf64c9da0"
    },
    "b519963ed307136a18e85d65f70591fe": {
      "rownum": 83,
      "query": "create index concurrently i_77 on t_77(i)",
      "calls": 1,
      "total_time": 6.237877,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5698822125004129000,
      "md5": "b519963ed307136a18e85d65f70591fe"
    },
    "5b6cedb1f4737a013efe170aff1c978b": {
      "rownum": 84,
      "query": "create index concurrently i_83 on t_83(i)",
      "calls": 1,
      "total_time": 6.176905,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -258601094240367170,
      "md5": "5b6cedb1f4737a013efe170aff1c978b"
    },
    "1d2931be834935aea64e76357c42db3c": {
      "rownum": 85,
      "query": "with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n), per_instance as (\n select\n datname,\n age(datfrozenxid),\n round(\n age(datfrozenxid)::numeric * $2\n / ($3 * $4^$5 - current_setting($6)::numeric\n )::numeric,\n $7\n ) as capacity_used,\n datfrozenxid,\n (age(datfrozenxid) > $8)::int as warning\n from pg_database\n order by 3 desc\n), num_per_instance as (\n select\n row_number() over () num,\n per_instance.*\n from per_instance\n), per_database as (\n select\n coalesce(nullif(n.nspname || $9, $10), $11) || c.relname as relation,\n greatest(age(c.relfrozenxid), age(t.relfrozenxid)) as age,\n round(\n (greatest(age(c.relfrozenxid), age(t.relfrozenxid))::numeric *\n $12 / ($13 * $14^$15 - current_setting($16)::numeric)::numeric),\n $17\n ) as capacity_used,\n c.relfrozenxid as rel_relfrozenxid,\n t.relfrozenxid as toast_relfrozenxid,\n (greatest(age(c.relfrozenxid), age(t.relfrozenxid)) > $18)::int as warning,\n case when ot.table_id is not null then $19 else $20 end as overrided_settings\n from pg_class c\n join pg_namespace n on c.relnamespace = n.oid\n left join pg_class t ON c.reltoastrelid = t.oid\n left join overrided_tables ot on ot.table_id = c.oid\n where c.relkind IN ($21, $22) and not (n.nspname = $23 and c.relname <> $24)\n and n.nspname <> $25\n order by 3 desc\n), num_per_database as (\n select\n row_number() over () num,\n per_database.*\n from per_database\n)\nselect\n json_build_object(\n $26,\n (select json_object_agg(i.datname, i) from num_per_instance i),\n $27,\n (select json_object_agg(d.relation, d) from num_per_database d),\n $28,\n (select count($29) from per_database where overrided_settings = $30)\n )",
      "calls": 3,
      "total_time": 5.845304,
      "rows": 3,
      "shared_blks_hit": 162,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2832171118643663000,
      "md5": "1d2931be834935aea64e76357c42db3c"
    },
    "e065683ad8f1421ef6762c4d8a48fd70": {
      "rownum": 86,
      "query": "create table t_85 as select i from generate_series(1, 1000) _(i)",
      "calls": 1,
      "total_time": 5.811038,
      "rows": 0,
      "shared_blks_hit": 227,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 5,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5225309780912299000,
      "md5": "e065683ad8f1421ef6762c4d8a48fd70"
    },
    "3b4d6a0ff362c86c2bea2385a6c2d0b3": {
      "rownum": 87,
      "query": "create index concurrently i_1 on t_1(i)",
      "calls": 1,
      "total_time": 5.791224,
      "rows": 0,
      "shared_blks_hit": 269,
      "shared_blks_read": 8,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 958340091574683800,
      "md5": "3b4d6a0ff362c86c2bea2385a6c2d0b3"
    },
    "7d34e52c285edbc28e7bc039ad2804f5": {
      "rownum": 88,
      "query": "create index concurrently i_104 on t_104(i)",
      "calls": 1,
      "total_time": 5.732029,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -541825542137433860,
      "md5": "7d34e52c285edbc28e7bc039ad2804f5"
    },
    "ca69d6008e80427d1a1e60f94fae5f31": {
      "rownum": 89,
      "query": "create index concurrently i_40 on t_40(i)",
      "calls": 1,
      "total_time": 5.641552,
      "rows": 0,
      "shared_blks_hit": 269,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -9027679220709900000,
      "md5": "ca69d6008e80427d1a1e60f94fae5f31"
    },
    "8f22a10befd53f5681c3cdd77d21dba4": {
      "rownum": 90,
      "query": "create index concurrently i_94 on t_94(i)",
      "calls": 1,
      "total_time": 5.608067,
      "rows": 0,
      "shared_blks_hit": 270,
      "shared_blks_read": 8,
      "shared_blks_dirtied": 6,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5288109407298079000,
      "md5": "8f22a10befd53f5681c3cdd77d21dba4"
    },
    "3a1593949aca51cbace8f8b1efd09add": {
      "rownum": 91,
      "query": "create index concurrently i_32 on t_32(i)",
      "calls": 1,
      "total_time": 5.607877,
      "rows": 0,
      "shared_blks_hit": 269,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4974597650942008000,
      "md5": "3a1593949aca51cbace8f8b1efd09add"
    },
    "cf6f3607755110273e0312b6926a57e9": {
      "rownum": 92,
      "query": "create index concurrently i_4 on t_4(i)",
      "calls": 1,
      "total_time": 5.514894,
      "rows": 0,
      "shared_blks_hit": 271,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5284099713134512000,
      "md5": "cf6f3607755110273e0312b6926a57e9"
    },
    "b0e5c99ec8cd8ef51dc965762a40489f": {
      "rownum": 93,
      "query": "create index concurrently i_20 on t_20(i)",
      "calls": 1,
      "total_time": 5.413087,
      "rows": 0,
      "shared_blks_hit": 271,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1400494284431661000,
      "md5": "b0e5c99ec8cd8ef51dc965762a40489f"
    },
    "6d403b727ddf4715cf215dbcfd553cf8": {
      "rownum": 94,
      "query": "create index concurrently i_26 on t_26(i)",
      "calls": 1,
      "total_time": 5.382418,
      "rows": 0,
      "shared_blks_hit": 269,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5850580761070767000,
      "md5": "6d403b727ddf4715cf215dbcfd553cf8"
    },
    "e042d869d5e2d3e88dfcb06b121a562a": {
      "rownum": 95,
      "query": "create index concurrently i_16 on t_16(i)",
      "calls": 1,
      "total_time": 5.380477,
      "rows": 0,
      "shared_blks_hit": 271,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8450475488496166000,
      "md5": "e042d869d5e2d3e88dfcb06b121a562a"
    },
    "58cbf2284e306a47276b7bdb41d7d64a": {
      "rownum": 96,
      "query": "create index concurrently i_17 on t_17(i)",
      "calls": 1,
      "total_time": 5.349144,
      "rows": 0,
      "shared_blks_hit": 271,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1919255799293944800,
      "md5": "58cbf2284e306a47276b7bdb41d7d64a"
    },
    "4a4fd373a45794e753be2b699bb11ff9": {
      "rownum": 97,
      "query": "create index concurrently i_14 on t_14(i)",
      "calls": 1,
      "total_time": 5.325298,
      "rows": 0,
      "shared_blks_hit": 271,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1173119768399570700,
      "md5": "4a4fd373a45794e753be2b699bb11ff9"
    },
    "1f2c42191fe17e27c34f616744d44429": {
      "rownum": 98,
      "query": "select json_object_agg(s.name, s)\n from pg_settings s\n where name in (\n $1,\n $2,\n $3,\n $4,\n $5,\n $6,\n $7,\n $8\n )",
      "calls": 3,
      "total_time": 5.280593,
      "rows": 3,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8820281542468019000,
      "md5": "1f2c42191fe17e27c34f616744d44429"
    },
    "9a5f8a3eda27b8d8ddf2f3e961422a65": {
      "rownum": 99,
      "query": "create index concurrently i_92 on t_92(i)",
      "calls": 1,
      "total_time": 5.269876,
      "rows": 0,
      "shared_blks_hit": 267,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8204734688009769000,
      "md5": "9a5f8a3eda27b8d8ddf2f3e961422a65"
    },
    "1598d365ee6da7ba024b495021fc25cc": {
      "rownum": 100,
      "query": "create index concurrently i_3 on t_3(i)",
      "calls": 1,
      "total_time": 5.261862,
      "rows": 0,
      "shared_blks_hit": 272,
      "shared_blks_read": 5,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6612741197290691000,
      "md5": "1598d365ee6da7ba024b495021fc25cc"
    }
  }
}
