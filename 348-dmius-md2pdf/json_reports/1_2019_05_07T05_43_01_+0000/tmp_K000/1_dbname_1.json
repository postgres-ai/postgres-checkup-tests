{
  "snapshot_timestamptz": "2019-05-07T05:43:15.432666+00:00",
  "snapshot_timestamptz_s": 1557207795.43267,
  "queries": {
    "163cfa2d9b239012222256b85416e9ef": {
      "rownum": 1,
      "query": "create table t_slw_q as select id::int8 from generate_series(0, 10000000) _(id)",
      "calls": 1,
      "total_time": 18859.436688,
      "rows": 0,
      "shared_blks_hit": 130,
      "shared_blks_read": 44248,
      "shared_blks_dirtied": 44248,
      "shared_blks_written": 42200,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 17090,
      "temp_blks_written": 17090,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -837353630728469800,
      "md5": "163cfa2d9b239012222256b85416e9ef"
    },
    "eec46fe61d3934b8c6c2139d5e7161be": {
      "rownum": 2,
      "query": "VACUUM ANALYZE",
      "calls": 1,
      "total_time": 10444.873026,
      "rows": 0,
      "shared_blks_hit": 133008,
      "shared_blks_read": 166253,
      "shared_blks_dirtied": 92338,
      "shared_blks_written": 78664,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -4922882474069691000,
      "md5": "eec46fe61d3934b8c6c2139d5e7161be"
    },
    "05f9d44992276e849a316faf875dbe58": {
      "rownum": 3,
      "query": "update t_rar_q set t_dat=$1 where t_dat between $2 and $3",
      "calls": 9,
      "total_time": 7279.846901,
      "rows": 744542,
      "shared_blks_hit": 1521775,
      "shared_blks_read": 17303,
      "shared_blks_dirtied": 11934,
      "shared_blks_written": 8259,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 615357981169976700,
      "md5": "05f9d44992276e849a316faf875dbe58"
    },
    "af25b9c8adc50fa5257e20b79affaad2": {
      "rownum": 4,
      "query": "create table t_red_fk_2 as select id, (random() * 1000000)::int8 as r_t1_id from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 5216.907637,
      "rows": 0,
      "shared_blks_hit": 140,
      "shared_blks_read": 5406,
      "shared_blks_dirtied": 5406,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 591824813582986000,
      "md5": "af25b9c8adc50fa5257e20b79affaad2"
    },
    "6d9a4e6ff38cfa7e3509df6ea5a57a5d": {
      "rownum": 5,
      "query": "create index concurrently i_unused on t_with_unused_index(i)",
      "calls": 1,
      "total_time": 3943.454059,
      "rows": 0,
      "shared_blks_hit": 3269,
      "shared_blks_read": 6352,
      "shared_blks_dirtied": 1293,
      "shared_blks_written": 1256,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1273,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6612128672608002000,
      "md5": "6d9a4e6ff38cfa7e3509df6ea5a57a5d"
    },
    "ec9be94fe2de3d3848884d07acaa9da0": {
      "rownum": 6,
      "query": "update t_with_bloat set i = i",
      "calls": 1,
      "total_time": 3217.185887,
      "rows": 1000000,
      "shared_blks_hit": 2013284,
      "shared_blks_read": 8851,
      "shared_blks_dirtied": 8850,
      "shared_blks_written": 6551,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8174650002211617000,
      "md5": "ec9be94fe2de3d3848884d07acaa9da0"
    },
    "a46b26bc52f7d1afc7d154f92496efd4": {
      "rownum": 7,
      "query": "create table t_rar_q as select id, (random() * 1000000)::int8 as t_dat from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 2591.55351,
      "rows": 0,
      "shared_blks_hit": 197,
      "shared_blks_read": 5407,
      "shared_blks_dirtied": 5425,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8726250694613120000,
      "md5": "a46b26bc52f7d1afc7d154f92496efd4"
    },
    "d3e175ba87be1b2053de2abd743da1a8": {
      "rownum": 8,
      "query": "create table t_with_redundant_idx as select id, id as f1, id as f2, id as f3, id as f4 from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 2578.371531,
      "rows": 0,
      "shared_blks_hit": 158,
      "shared_blks_read": 6370,
      "shared_blks_dirtied": 6370,
      "shared_blks_written": 4898,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2527906257619262000,
      "md5": "d3e175ba87be1b2053de2abd743da1a8"
    },
    "27a2afaa729fad42c3714d99adcdcc8c": {
      "rownum": 9,
      "query": "create table t_fk_2 as select id, (random() * 1000000)::int8 as t1_id from generate_series(1, 1000000) _(id)",
      "calls": 1,
      "total_time": 2381.114203,
      "rows": 0,
      "shared_blks_hit": 134,
      "shared_blks_read": 5406,
      "shared_blks_dirtied": 5406,
      "shared_blks_written": 3358,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 22211663676525936,
      "md5": "27a2afaa729fad42c3714d99adcdcc8c"
    },
    "3c696f84403e8cc04bda0b9cb3851d09": {
      "rownum": 10,
      "query": "create table t_red_fk_1 as select id::int8 from generate_series(0, 1000000) _(id)",
      "calls": 1,
      "total_time": 2316.310101,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4428,
      "shared_blks_dirtied": 4429,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5601151487238124000,
      "md5": "3c696f84403e8cc04bda0b9cb3851d09"
    },
    "87226e76b7e4a7d8e6309faa0f90a732": {
      "rownum": 11,
      "query": "create table t_fk_1 as select id::int8 from generate_series(0, 1000000) _(id)",
      "calls": 1,
      "total_time": 2308.461583,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4425,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7718336515547744000,
      "md5": "87226e76b7e4a7d8e6309faa0f90a732"
    },
    "8b24dc720ee7b997d06403463ee87e6c": {
      "rownum": 12,
      "query": "create table test_schema.t_with_invalid_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2255.730916,
      "rows": 0,
      "shared_blks_hit": 130,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4426,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5156236148593934000,
      "md5": "8b24dc720ee7b997d06403463ee87e6c"
    },
    "f02a209c690eb4e80fd5a6eb797601bd": {
      "rownum": 13,
      "query": "create table t_with_bloat as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2223.416143,
      "rows": 0,
      "shared_blks_hit": 132,
      "shared_blks_read": 4429,
      "shared_blks_dirtied": 4431,
      "shared_blks_written": 2378,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -6446764050704029000,
      "md5": "f02a209c690eb4e80fd5a6eb797601bd"
    },
    "850453c65d65fcf612bf296d9a6a9268": {
      "rownum": 14,
      "query": "create index r_red_fk_2_fk_idx on t_red_fk_2(r_t1_id)",
      "calls": 1,
      "total_time": 2206.260579,
      "rows": 0,
      "shared_blks_hit": 1039,
      "shared_blks_read": 2291,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 3915,
      "temp_blks_written": 2933,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2801630118753177600,
      "md5": "850453c65d65fcf612bf296d9a6a9268"
    },
    "74e5721c6470a95d09ee76772b44165b": {
      "rownum": 15,
      "query": "create table t_with_redundant_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2191.223102,
      "rows": 0,
      "shared_blks_hit": 128,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4427,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -5095830603244401000,
      "md5": "74e5721c6470a95d09ee76772b44165b"
    },
    "b2e6824504caaebf8acd2eaee913a031": {
      "rownum": 16,
      "query": "create table t_with_unused_index as select i from generate_series(1, 1000000) _(i)",
      "calls": 1,
      "total_time": 2187.020506,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 4425,
      "shared_blks_dirtied": 4425,
      "shared_blks_written": 2377,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 1709,
      "temp_blks_written": 1709,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -678916242629262500,
      "md5": "b2e6824504caaebf8acd2eaee913a031"
    },
    "ec072b80b11cc3e40fb8bf74a5761bb3": {
      "rownum": 17,
      "query": "VACUUM (ANALYZE)",
      "calls": 1,
      "total_time": 1899.067649,
      "rows": 0,
      "shared_blks_hit": 54584,
      "shared_blks_read": 88220,
      "shared_blks_dirtied": 13161,
      "shared_blks_written": 11620,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 613725734663719400,
      "md5": "ec072b80b11cc3e40fb8bf74a5761bb3"
    },
    "856c7f8a018144ce1f247944c8d434cc": {
      "rownum": 18,
      "query": "alter table t_red_fk_1 add primary key (id)",
      "calls": 1,
      "total_time": 1511.360792,
      "rows": 0,
      "shared_blks_hit": 2851,
      "shared_blks_read": 4698,
      "shared_blks_dirtied": 2378,
      "shared_blks_written": 2345,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 4111,
      "temp_blks_written": 3324,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7202543407834562000,
      "md5": "856c7f8a018144ce1f247944c8d434cc"
    },
    "1649aed0a915d2e8036efb2c4b9755cc": {
      "rownum": 19,
      "query": "create index t_rar_q_idx on t_rar_q(id)",
      "calls": 1,
      "total_time": 1439.847648,
      "rows": 0,
      "shared_blks_hit": 1148,
      "shared_blks_read": 1756,
      "shared_blks_dirtied": 1752,
      "shared_blks_written": 1716,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1257,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2650688778442027500,
      "md5": "1649aed0a915d2e8036efb2c4b9755cc"
    },
    "06437597460cb5d8930b2017b1665452": {
      "rownum": 20,
      "query": "create index concurrently t_with_redundant_idx_f1_f2 on t_with_redundant_idx(f1,f2)",
      "calls": 1,
      "total_time": 1350.673604,
      "rows": 0,
      "shared_blks_hit": 3900,
      "shared_blks_read": 8703,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8920212056722243000,
      "md5": "06437597460cb5d8930b2017b1665452"
    },
    "da5a0eef2ba2f7e988f1d5a0ff21fc4c": {
      "rownum": 21,
      "query": "create index concurrently i_redundant_1 on t_with_redundant_index(i)",
      "calls": 1,
      "total_time": 1214.423389,
      "rows": 0,
      "shared_blks_hit": 3298,
      "shared_blks_read": 6301,
      "shared_blks_dirtied": 1245,
      "shared_blks_written": 1211,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1267,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 566438153080519400,
      "md5": "da5a0eef2ba2f7e988f1d5a0ff21fc4c"
    },
    "778e9b1c3868ed953e8757c9433cad37": {
      "rownum": 22,
      "query": "create index concurrently t_with_redundant_idx_id on t_with_redundant_idx(id)",
      "calls": 1,
      "total_time": 1213.217292,
      "rows": 0,
      "shared_blks_hit": 3385,
      "shared_blks_read": 9194,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 216,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5967467509848557000,
      "md5": "778e9b1c3868ed953e8757c9433cad37"
    },
    "224d865dd34585308e581b912755efd0": {
      "rownum": 23,
      "query": "create index concurrently t_with_redundant_idx_f3_1 on t_with_redundant_idx(f3)",
      "calls": 1,
      "total_time": 1212.194897,
      "rows": 0,
      "shared_blks_hit": 3675,
      "shared_blks_read": 8898,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7990293000632035000,
      "md5": "224d865dd34585308e581b912755efd0"
    },
    "be889306bbfa9d9eca28ef11af3d38ba": {
      "rownum": 24,
      "query": "create index concurrently t_with_redundant_idx_f1_2 on t_with_redundant_idx(f1)",
      "calls": 1,
      "total_time": 1199.162067,
      "rows": 0,
      "shared_blks_hit": 3707,
      "shared_blks_read": 8863,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 812,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 879148290678321700,
      "md5": "be889306bbfa9d9eca28ef11af3d38ba"
    },
    "ff81168f1c2862518de3443458d02bda": {
      "rownum": 25,
      "query": "alter table t_fk_1 add primary key (id)",
      "calls": 1,
      "total_time": 1178.943205,
      "rows": 0,
      "shared_blks_hit": 3244,
      "shared_blks_read": 3645,
      "shared_blks_dirtied": 2383,
      "shared_blks_written": 2345,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 7844596772736630000,
      "md5": "ff81168f1c2862518de3443458d02bda"
    },
    "8dcf0f0cc69b8d43571c8b929e9a8831": {
      "rownum": 26,
      "query": "alter table t_with_redundant_idx add primary key (id)",
      "calls": 1,
      "total_time": 1175.689679,
      "rows": 0,
      "shared_blks_hit": 3224,
      "shared_blks_read": 6656,
      "shared_blks_dirtied": 4329,
      "shared_blks_written": 4290,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3416651331628416000,
      "md5": "8dcf0f0cc69b8d43571c8b929e9a8831"
    },
    "58ac8da9087643303846fa3a138ace19": {
      "rownum": 27,
      "query": "create index concurrently t_with_redundant_idx_f2 on t_with_redundant_idx(f2)",
      "calls": 1,
      "total_time": 1167.870473,
      "rows": 0,
      "shared_blks_hit": 3633,
      "shared_blks_read": 8937,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 357,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1902759977384827000,
      "md5": "58ac8da9087643303846fa3a138ace19"
    },
    "27f6dc3e9df7257f2706b46e0f9e62b3": {
      "rownum": 28,
      "query": "create index concurrently t_with_redundant_idx_f3_2 on t_with_redundant_idx(f3)",
      "calls": 1,
      "total_time": 1154.114298,
      "rows": 0,
      "shared_blks_hit": 3777,
      "shared_blks_read": 8793,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8565802378619238000,
      "md5": "27f6dc3e9df7257f2706b46e0f9e62b3"
    },
    "479a5ddfb0da19fd69d5e0b48b1c36b3": {
      "rownum": 29,
      "query": "create index concurrently t_with_redundant_idx_f1 on t_with_redundant_idx(f1)",
      "calls": 1,
      "total_time": 1151.737799,
      "rows": 0,
      "shared_blks_hit": 3581,
      "shared_blks_read": 8989,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1283,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7862275411983427000,
      "md5": "479a5ddfb0da19fd69d5e0b48b1c36b3"
    },
    "c459e2dd8ac8fad23213b9b8e65aa13a": {
      "rownum": 30,
      "query": "create unique index t_with_redundant_idx_f1_uniq on t_with_redundant_idx (f1)",
      "calls": 1,
      "total_time": 1094.257561,
      "rows": 0,
      "shared_blks_hit": 1209,
      "shared_blks_read": 2222,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2449,
      "temp_blks_written": 1284,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1566471017150549200,
      "md5": "c459e2dd8ac8fad23213b9b8e65aa13a"
    },
    "8720b0edefb6a45da423ed1cd159dfb5": {
      "rownum": 31,
      "query": "create index r_red_fk_1_id_idx on t_red_fk_1(id)",
      "calls": 1,
      "total_time": 1082.094716,
      "rows": 0,
      "shared_blks_hit": 1150,
      "shared_blks_read": 1254,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1281,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3040282640922053000,
      "md5": "8720b0edefb6a45da423ed1cd159dfb5"
    },
    "009cd28de9f131450e7a7f53709571cf": {
      "rownum": 32,
      "query": "create index r_red_fk_1_X_idx on t_red_fk_1(id)",
      "calls": 1,
      "total_time": 1071.260512,
      "rows": 0,
      "shared_blks_hit": 1167,
      "shared_blks_read": 1242,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1289,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3969450259942249000,
      "md5": "009cd28de9f131450e7a7f53709571cf"
    },
    "3bf99ed9e7251ac855b911c880c74f10": {
      "rownum": 33,
      "query": "create index concurrently i_redundant_2 on t_with_redundant_index(i)",
      "calls": 1,
      "total_time": 1035.002078,
      "rows": 0,
      "shared_blks_hit": 3400,
      "shared_blks_read": 6274,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 2448,
      "temp_blks_written": 1319,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 5045454327338548000,
      "md5": "3bf99ed9e7251ac855b911c880c74f10"
    },
    "07353b6ca38efff937cf943dc3a10af6": {
      "rownum": 34,
      "query": "create database checkup_test_db",
      "calls": 1,
      "total_time": 704.96556,
      "rows": 0,
      "shared_blks_hit": 61,
      "shared_blks_read": 4,
      "shared_blks_dirtied": 6,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2133351059478393300,
      "md5": "07353b6ca38efff937cf943dc3a10af6"
    },
    "7d3902e050b3ea7e4451d53392759108": {
      "rownum": 35,
      "query": "select count(*) from t_slw_q",
      "calls": 1,
      "total_time": 662.90654,
      "rows": 1,
      "shared_blks_hit": 0,
      "shared_blks_read": 44248,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 96,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3807976279930832000,
      "md5": "7d3902e050b3ea7e4451d53392759108"
    },
    "182ba4f0ffb554baf311c8fa6800939f": {
      "rownum": 36,
      "query": "create database dbname",
      "calls": 1,
      "total_time": 649.442932,
      "rows": 0,
      "shared_blks_hit": 51,
      "shared_blks_read": 8,
      "shared_blks_dirtied": 3,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 3617698589948080000,
      "md5": "182ba4f0ffb554baf311c8fa6800939f"
    },
    "2f0005113f457cf45d459529c3f01e05": {
      "rownum": 37,
      "query": "alter table t_red_fk_2 add constraint fk_red_fk2_t1 foreign key (r_t1_id) references t_red_fk_1(id)",
      "calls": 1,
      "total_time": 622.852558,
      "rows": 0,
      "shared_blks_hit": 4529,
      "shared_blks_read": 5521,
      "shared_blks_dirtied": 3358,
      "shared_blks_written": 3326,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 2911641097746118700,
      "md5": "2f0005113f457cf45d459529c3f01e05"
    },
    "2c9a2ec5fb1e2d77030e6204ea8b7318": {
      "rownum": 38,
      "query": "alter table t_fk_2 add constraint fk_t2_t1 foreign key (t1_id) references t_fk_1(id)",
      "calls": 1,
      "total_time": 619.765394,
      "rows": 0,
      "shared_blks_hit": 4469,
      "shared_blks_read": 5664,
      "shared_blks_dirtied": 3382,
      "shared_blks_written": 3326,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8519389473273073000,
      "md5": "2c9a2ec5fb1e2d77030e6204ea8b7318"
    },
    "7900f9ff95b009d844e03ae8f769a70a": {
      "rownum": 39,
      "query": "with data as (\n select\n ae.name,\n installed_version,\n default_version,\n case when installed_version <> default_version then $1 end as is_old\n from pg_extension e\n join pg_available_extensions ae on extname = ae.name\n order by ae.name\n ), withsettins as (\n select\n data.*,\n (select json_object_agg(name, setting)\n from pg_settings\n where name ~ data.name) as settings from data\n order by name\n )\n select json_object_agg(withsettins.name, withsettins) as json from withsettins",
      "calls": 1,
      "total_time": 203.450952,
      "rows": 1,
      "shared_blks_hit": 4,
      "shared_blks_read": 2,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -8799259724768328000,
      "md5": "7900f9ff95b009d844e03ae8f769a70a"
    },
    "f3ca5b19ffc27a3fdd871531017e82b7": {
      "rownum": 40,
      "query": "with data as (\n with overrided_tables as (\n select\n pc.oid as table_id,\n pn.nspname as scheme_name,\n pc.relname as table_name,\n pc.reloptions as options\n from pg_class pc\n join pg_namespace pn on pn.oid = pc.relnamespace\n where reloptions::text ~ $1\n ), step1 as (\n select\n i.tblid,\n i.nspname as schema_name,\n i.tblname as table_name,\n i.idxname as index_name,\n i.reltuples,\n i.relpages,\n i.relam,\n a.attrelid AS table_oid,\n current_setting($2)::numeric AS bs,\n fillfactor,\n \n case when version() ~ $3 then $4 else $5 end as maxalign,\n /* per page header, fixed size: 20 for 7.X, 24 for others */\n $6 AS pagehdr,\n /* per page btree opaque data */\n $7 AS pageopqdata,\n /* per tuple header: add IndexAttributeBitMapData if some cols are null-able */\n case\n when max(coalesce(s.null_frac,$8)) = $9 then $10 \n else $11 + (( $12 + $13 - $14 ) / $15) \n end as index_tuple_hdr_bm,\n /* data len: we remove null values save space using it fractionnal part from stats */\n sum(($16 - coalesce(s.null_frac, $17)) * coalesce(s.avg_width, $18)) as nulldatawidth,\n max(case when a.atttypid = $19::regtype then $20 else $21 end) > $22 as is_na\n from pg_attribute as a\n join (\n select\n tbl.oid tblid, nspname, tbl.relname AS tblname, idx.relname AS idxname, idx.reltuples, idx.relpages, idx.relam,\n indrelid, indexrelid, indkey::smallint[] AS attnum,\n coalesce(substring(array_to_string(idx.reloptions, $23) from $24)::smallint, $25) as fillfactor\n from pg_index\n join pg_class idx on idx.oid = pg_index.indexrelid\n join pg_class tbl on tbl.oid = pg_index.indrelid\n join pg_namespace on pg_namespace.oid = idx.relnamespace\n where pg_index.indisvalid AND tbl.relkind = $26 AND idx.relpages > $27\n ) as i on a.attrelid = i.indexrelid\n join pg_stats as s on\n s.schemaname = i.nspname\n and (\n (s.tablename = i.tblname and s.attname = pg_catalog.pg_get_indexdef(a.attrelid, a.attnum, $28)) \n OR (s.tablename = i.idxname AND s.attname = a.attname) \n )\n join pg_type as t on a.atttypid = t.oid\n where a.attnum > $29\n group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n ), step2 as (\n select\n *,\n (\n index_tuple_hdr_bm + maxalign\n \n - case when index_tuple_hdr_bm % maxalign = $30 THEN maxalign else index_tuple_hdr_bm % maxalign end\n + nulldatawidth + maxalign\n \n - case\n when nulldatawidth = $31 then $32\n when nulldatawidth::integer % maxalign = $33 then maxalign\n else nulldatawidth::integer % maxalign\n end\n )::numeric as nulldatahdrwidth\n \n from step1\n ), step3 as (\n select\n *,\n \n coalesce($34 + ceil(reltuples / floor((bs - pageopqdata - pagehdr) / ($35 + nulldatahdrwidth)::float)), $36) as est_pages,\n coalesce($37 + ceil(reltuples / floor((bs - pageopqdata - pagehdr) * fillfactor / ($38 * ($39 + nulldatahdrwidth)::float))), $40) as est_pages_ff\n \n from step2\n join pg_am am on step2.relam = am.oid\n where am.amname = $41\n ), step4 as (\n SELECT\n *,\n bs*(relpages)::bigint AS real_size,\n \n bs*(relpages-est_pages)::bigint AS extra_size,\n $42 * (relpages-est_pages)::float / relpages AS extra_ratio,\n bs*(relpages-est_pages_ff) AS bloat_size,\n $43 * (relpages-est_pages_ff)::float / relpages AS bloat_ratio\n \n from step3\n \n )\n select\n case is_na when $44 then $45 else $46 end as \"Is N/A\",\n format(\n $47,\n left(index_name, $48) || case when length(index_name) > $49 then $50 else $51 end,\n coalesce(nullif(step4.schema_name, $52) || $53, $54) || step4.table_name\n ) as \"Index (Table)\",\n real_size as \"Real size bytes\",\n pg_size_pretty(real_size::numeric) as \"Size\",\n extra_ratio as \"Extra ratio\",\n case\n when extra_size::numeric >= $55\n then $56 || pg_size_pretty(extra_size::numeric)::text || $57 || round(extra_ratio::numeric, $58)::text || $59\n else $60\n end as \"Extra\",\n case\n when extra_size::numeric >= $61\n then extra_size\n else $62\n end as \"Extra size bytes\",\n case\n when bloat_size::numeric >= $63\n then $64 || pg_size_pretty(bloat_size::numeric)::text || $65 || round(bloat_ratio::numeric, $66)::text || $67\n else $68\n end as \"Bloat\",\n case\n when (bloat_size)::numeric >=$69\n then bloat_size\n else $70\n end as \"Bloat size bytes\",\n case\n when (bloat_ratio)::numeric >=$71\n then bloat_ratio\n else $72\n end as \"Bloat ratio\",\n case\n when (real_size - bloat_size)::numeric >=$73\n then $74 || pg_size_pretty((real_size - bloat_size)::numeric)\n else $75\n end as \"Live\",\n case\n when (real_size - bloat_size)::numeric >=$76\n then (real_size - bloat_size)::numeric\n else $77\n end as \"Live bytes\", \n fillfactor,\n case when ot.table_id is not null then $78 else $79 end as overrided_settings\n from step4\n left join overrided_tables ot on ot.table_id = step4.tblid\n order by real_size desc nulls last\n), limited_data as (\n select * from data limit $80\n), num_limited_data as (\n select\n row_number() over () num,\n limited_data.*\n from limited_data\n), limited_json_data as (\n select json_object_agg(ld.\"Index (Table)\", ld) as json from num_limited_data ld\n), total_data as (\n select\n sum($81) as count,\n sum(\"Extra size bytes\") as \"Extra size bytes sum\",\n sum(\"Real size bytes\") as \"Real size bytes sum\",\n sum(\"Bloat size bytes\") as \"Bloat size bytes sum\",\n (sum(\"Bloat size bytes\")::numeric/sum(\"Real size bytes\")::numeric * $82) as \"Bloat ratio\",\n sum(\"Extra size bytes\") as \"Extra size bytes sum\"\n from data\n)\nselect\n json_build_object(\n $83,\n (select * from limited_json_data),\n $84,\n (select row_to_json(total_data) from total_data),\n $85,\n (select count($86) from limited_data where overrided_settings = $87)\n )",
      "calls": 1,
      "total_time": 127.713701,
      "rows": 1,
      "shared_blks_hit": 194805,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4866697448425993000,
      "md5": "f3ca5b19ffc27a3fdd871531017e82b7"
    },
    "db570fdb9efb2788263a46d64f598460": {
      "rownum": 41,
      "query": "create table bloated as select i from generate_series(1, 100000) _(i)",
      "calls": 1,
      "total_time": 69.399031,
      "rows": 0,
      "shared_blks_hit": 126,
      "shared_blks_read": 443,
      "shared_blks_dirtied": 455,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 171,
      "temp_blks_written": 171,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2951921325210440700,
      "md5": "db570fdb9efb2788263a46d64f598460"
    },
    "087f5e34d41d5a3b38ca7b3e9f232813": {
      "rownum": 42,
      "query": "CREATE TABLE test_schema.orders\n(\n id serial,\n cnt integer,\n CONSTRAINT orders_pk PRIMARY KEY (id)\n)",
      "calls": 1,
      "total_time": 63.274363,
      "rows": 0,
      "shared_blks_hit": 455,
      "shared_blks_read": 44,
      "shared_blks_dirtied": 25,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -1491185255100233500,
      "md5": "087f5e34d41d5a3b38ca7b3e9f232813"
    },
    "47f3b6f83dd15d923f38781199dadd68": {
      "rownum": 43,
      "query": "create index i_bloated on bloated(i)",
      "calls": 1,
      "total_time": 35.133141,
      "rows": 0,
      "shared_blks_hit": 534,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 2,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 8841083458873351000,
      "md5": "47f3b6f83dd15d923f38781199dadd68"
    },
    "ec0c52e265041128960d2e93fcda2e39": {
      "rownum": 44,
      "query": "delete from bloated where i % $1 = $2",
      "calls": 1,
      "total_time": 32.90769,
      "rows": 50000,
      "shared_blks_hit": 50443,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4425566965367016000,
      "md5": "ec0c52e265041128960d2e93fcda2e39"
    },
    "05e9cc78eee42db64c6cf7867a89fdef": {
      "rownum": 45,
      "query": "with data as (\n with data as (\n select s.*\n from pg_stat_database s\n where s.datname = current_database()\n )\n select $1 as metric, version() as value\n union all\n select\n $2 as metric,\n (select setting from pg_settings where name = $3) as value\n union all\n select\n $4 as metric,\n case\n when pg_is_in_recovery() then $5 || $6\n || ((((case\n when pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() then $7\n else extract ($8 from now() - pg_last_xact_replay_timestamp())\n end)::int)::text || $9)::interval)::text\n || $10 || pg_is_wal_replay_paused()::text || $11\n else\n $12\n end as value\n union all\n (\n with repl_groups as (\n select sync_state, state, string_agg(host(client_addr), $13) as hosts\n from pg_stat_replication\n group by 1, 2\n )\n select\n $14,\n string_agg(sync_state || $15 || state || $16 || hosts, $17)\n from repl_groups\n )\n union all\n select $18, pg_postmaster_start_time()::timestamptz(0)::text\n union all\n select $19, (now() - pg_postmaster_start_time())::interval(0)::text\n union all\n select\n $20,\n (select (checkpoints_timed + checkpoints_req)::text from pg_stat_bgwriter)\n union all\n select\n $21,\n (\n select round($22 * checkpoints_req::numeric /\n (nullif(checkpoints_timed + checkpoints_req, $23)), $24)::text || $25\n from pg_stat_bgwriter\n )\n union all\n select\n $26,\n (\n select round((nullif(buffers_checkpoint::numeric, $27) /\n (($28 * $29 /\n (current_setting($30)::numeric))\n * extract($31 from now() - stats_reset)\n ))::numeric, $32)::text\n from pg_stat_bgwriter\n )\n union all\n select repeat($33, $34), repeat($35, $36)\n union all\n select $37 as metric, datname as value from data\n union all\n select $38, pg_size_pretty(pg_database_size(current_database()))\n union all\n select $39, stats_reset::timestamptz(0)::text from data\n union all\n select $40, (now() - stats_reset)::interval(0)::text from data\n/* union all\n select 'Installed Extensions', (\n with exts as (\n select extname || ' ' || extversion e, (-1 + row_number() over (order by extname)) / 5 i from pg_extension\n ), lines(l) as (\n select string_agg(e, ', ' order by i) l from exts group by i\n )\n select string_agg(l, e'\\n') from lines\n )*/\n union all\n select $41, (round(blks_hit * $42::numeric / (blks_hit + blks_read), $43))::text || $44 from data \n union all\n select $45, (round(xact_commit * $46::numeric / (xact_commit + xact_rollback), $47))::text || $48 from data\n union all\n select $49, conflicts::text from data\n union all\n select $50, pg_size_pretty(temp_bytes)::text from data\n union all\n select $51, temp_files::text from data\n union all\n select\n $52,\n case\n when (((extract($53 from now()) - extract($54 from data.stats_reset))/$55)::int) <> $56 then\n (temp_files / (((extract($57 from now()) - extract($58 from data.stats_reset))/$59)::int))::text\n else\n temp_files::text\n end\n from data\n union all\n select $60, pg_size_pretty(temp_bytes::numeric / nullif(temp_files, $61))::text from data\n union all\n select $62, deadlocks::text from data\n union all\n select\n $63,\n case\n when ((extract($64 from now()) - extract($65 from data.stats_reset))/$66)::int <> $67 then\n (deadlocks / (((extract($68 from now()) - extract($69 from data.stats_reset))/$70)::int))::text\n else\n deadlocks::text\n end\n from data\n), general_info_json as (\n select json_object_agg(data.metric, data) as json from data where data.metric not like $71\n), database_sizes as (\n select pd.datname, pg_database_size(pd.datname) as db_size from pg_database pd order by db_size desc\n), sorted_database_sizes as (\n select json_object_agg(datname, db_size) from database_sizes ds\n)\nselect\n json_build_object(\n $72,\n (select * from general_info_json),\n $73,\n (select * from sorted_database_sizes)\n )",
      "calls": 1,
      "total_time": 31.669909,
      "rows": 1,
      "shared_blks_hit": 20,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 4045452109519354400,
      "md5": "05e9cc78eee42db64c6cf7867a89fdef"
    },
    "8de816f5a1892abd8bdd864b5fc9df0f": {
      "rownum": 46,
      "query": "alter system set random_page_cost = 2.22",
      "calls": 1,
      "total_time": 27.617701,
      "rows": 0,
      "shared_blks_hit": 0,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": 1881993450838449000,
      "md5": "8de816f5a1892abd8bdd864b5fc9df0f"
    },
    "6ba1d6b0e36e2221c1e06c75bf3d81e3": {
      "rownum": 47,
      "query": "with data as (\n with fk_actions ( code, action ) as (\n values ($1, $2),\n ($3, $4),\n ($5, $6),\n ($7, $8),\n ($9, $10)\n ), fk_list as (\n select\n pg_constraint.oid as fkoid, conrelid, confrelid as parentid,\n conname,\n relname,\n nspname,\n fk_actions_update.action as update_action,\n fk_actions_delete.action as delete_action,\n conkey as key_cols\n from pg_constraint\n join pg_class on conrelid = pg_class.oid\n join pg_namespace on pg_class.relnamespace = pg_namespace.oid\n join fk_actions as fk_actions_update on confupdtype = fk_actions_update.code\n join fk_actions as fk_actions_delete on confdeltype = fk_actions_delete.code\n where contype = $11\n ), fk_attributes as (\n select fkoid, conrelid, attname, attnum\n from fk_list\n join pg_attribute on conrelid = attrelid and attnum = any(key_cols)\n order by fkoid, attnum\n ), fk_cols_list as (\n select fkoid, array_agg(attname) as cols_list\n from fk_attributes\n group by fkoid\n ), index_list as (\n select\n indexrelid as indexid,\n pg_class.relname as indexname,\n indrelid,\n indkey,\n indpred is not null as has_predicate,\n pg_get_indexdef(indexrelid) as indexdef\n from pg_index\n join pg_class on indexrelid = pg_class.oid\n where indisvalid\n ), fk_index_match as (\n select\n fk_list.*,\n indexid,\n indexname,\n indkey::int[] as indexatts,\n has_predicate,\n indexdef,\n array_length(key_cols, $12) as fk_colcount,\n array_length(indkey,$13) as index_colcount,\n round(pg_relation_size(conrelid)/($14^$15)::numeric) as table_mb,\n cols_list\n from fk_list\n join fk_cols_list using (fkoid)\n left join index_list on\n conrelid = indrelid\n and (indkey::int2[])[$16:(array_length(key_cols,$17) -$18)] operator(pg_catalog.@>) key_cols\n ), fk_perfect_match as (\n select fkoid\n from fk_index_match\n where\n (index_colcount - $19) <= fk_colcount\n and not has_predicate\n and indexdef like $20\n ), fk_index_check as (\n select $21 as issue, *, $22 as issue_sort\n from fk_index_match\n where indexid is null\n union all\n select $23 as issue, *, $24\n from fk_index_match\n where\n indexid is not null\n and fkoid not in (select fkoid from fk_perfect_match)\n ), parent_table_stats as (\n select\n fkoid,\n tabstats.relname as parent_name,\n (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as parent_writes,\n round(pg_relation_size(parentid)/($25^$26)::numeric) as parent_mb\n from pg_stat_user_tables as tabstats\n join fk_list on relid = parentid\n ), fk_table_stats as (\n select\n fkoid,\n (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as writes,\n seq_scan as table_scans\n from pg_stat_user_tables as tabstats\n join fk_list on relid = conrelid\n )\n select\n nspname as schema_name,\n relname as table_name,\n conname as fk_name,\n issue,\n table_mb,\n writes,\n table_scans,\n parent_name,\n parent_mb,\n parent_writes,\n cols_list,\n indexdef\n from fk_index_check\n join parent_table_stats using (fkoid)\n join fk_table_stats using (fkoid)\n where\n table_mb > $27\n and (\n writes > $28\n or parent_writes > $29\n or parent_mb > $30\n )\n order by issue_sort, table_mb desc, table_name, fk_name\n),\nnum_data as (\n select row_number() over () num, data.* from data limit $31\n)\nselect json_object_agg(num_data.num, num_data) from num_data",
      "calls": 1,
      "total_time": 21.2267,
      "rows": 1,
      "shared_blks_hit": 9123,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -2132628873233605400,
      "md5": "6ba1d6b0e36e2221c1e06c75bf3d81e3"
    },
    "742cbaed2bc6a1935431908b67c44887": {
      "rownum": 48,
      "query": "with fk_indexes as (\n select\n schemaname as schema_name,\n (indexrelid::regclass)::text as index_name,\n (relid::regclass)::text as table_name,\n (confrelid::regclass)::text as fk_table_ref,\n array_to_string(indclass, $1) as opclasses\n from\n pg_stat_user_indexes\n join pg_index using (indexrelid)\n left join pg_constraint\n on array_to_string(indkey, $2) = array_to_string(conkey, $3)\n and schemaname = (connamespace::regnamespace)::text\n and conrelid = relid\n and contype = $4\n where idx_scan = $5\n and indisunique is false\n and conkey is not null \n), table_scans as (\n select relid,\n tables.idx_scan + tables.seq_scan as all_scans,\n ( tables.n_tup_ins + tables.n_tup_upd + tables.n_tup_del ) as writes,\n pg_relation_size(relid) as table_size\n from pg_stat_user_tables as tables\n), all_writes as (\n select sum(writes) as total_writes\n from table_scans\n), indexes as (\n select\n idx_stat.relid,\n idx_stat.indexrelid,\n idx_stat.schemaname as schema_name,\n idx_stat.relname as table_name,\n idx_stat.indexrelname as index_name,\n quote_ident(idx_stat.schemaname) as formated_schema_name,\n quote_ident(idx_stat.indexrelname) as formated_index_name,\n quote_ident(idx_stat.relname) as formated_table_name,\n coalesce(nullif(quote_ident(idx_stat.schemaname), $6) || $7, $8) || quote_ident(idx_stat.relname) as formated_relation_name,\n idx_stat.idx_scan,\n pg_relation_size(idx_stat.indexrelid) as index_bytes,\n indexdef ~* $9 as idx_is_btree,\n pg_get_indexdef(pg_index.indexrelid) as index_def,\n array_to_string(pg_index.indclass, $10) as opclasses\n from pg_stat_user_indexes as idx_stat\n join pg_index\n using (indexrelid)\n join pg_indexes as indexes\n on idx_stat.schemaname = indexes.schemaname\n and idx_stat.relname = indexes.tablename\n and idx_stat.indexrelname = indexes.indexname\n where\n pg_index.indisunique = $11\n and pg_index.indisvalid = $12\n), index_ratios as (\n select\n i.indexrelid as index_id,\n i.schema_name,\n i.table_name,\n i.index_name,\n idx_scan,\n all_scans,\n round(( case when all_scans = $13 then $14::numeric\n else idx_scan::numeric/all_scans * $15 end), $16) as index_scan_pct,\n writes,\n round((case when writes = $17 then idx_scan::numeric else idx_scan::numeric/writes end), $18)\n as scans_per_write,\n index_bytes as index_size_bytes,\n table_size as table_size_bytes,\n idx_is_btree,\n index_def,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n i.opclasses,\n case when fi.index_name is not null then $19 else $20 end as supports_fk\n from indexes i\n left join fk_indexes fi on\n fi.fk_table_ref = i.table_name\n and fi.opclasses like (i.opclasses || $21)\n join table_scans\n using (relid)\n),\n\nnever_used_indexes as (\n select\n $22 as reason,\n ir.*\n from index_ratios ir\n where\n idx_scan = $23\n and idx_is_btree\n order by index_size_bytes desc\n), never_used_indexes_num as (\n select row_number() over () num, nui.* \n from never_used_indexes nui\n limit $24\n), never_used_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from never_used_indexes\n), never_used_indexes_json as (\n select\n json_object_agg(nuin.schema_name || $25 || nuin.index_name, nuin) as json\n from never_used_indexes_num nuin\n),\n\nrarely_used_indexes as (\n select\n $26 as reason,\n *,\n $27 as grp\n from index_ratios\n where\n scans_per_write <= $28\n and index_scan_pct < $29\n and idx_scan > $30\n and writes > $31\n and idx_is_btree\n union all\n select\n $32 as reason,\n *,\n $33 as grp\n from index_ratios\n where\n index_scan_pct < $34\n and scans_per_write > $35\n and idx_scan > $36\n and idx_is_btree\n and index_size_bytes > $37\n union all\n select\n $38 as reason,\n index_ratios.*,\n $39 as grp\n from index_ratios, all_writes\n where\n ( writes::numeric / ( total_writes + $40 ) ) > $41\n and not idx_is_btree\n and index_size_bytes > $42\n order by grp, index_size_bytes desc\n), rarely_used_indexes_num as (\n select row_number() over () num, rui.*\n from rarely_used_indexes rui\n limit $43\n), rarely_used_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from rarely_used_indexes\n), rarely_used_indexes_json as (\n select\n json_object_agg(ruin.schema_name || $44 || ruin.index_name, ruin) as json\n from rarely_used_indexes_num ruin\n),\n\nindex_data as (\n select\n *,\n indkey::text as columns,\n array_to_string(indclass, $45) as opclasses\n from pg_index\n where indisvalid = $46\n), redundant_indexes as (\n select\n i2.indexrelid as index_id,\n tnsp.nspname AS schema_name,\n trel.relname AS table_name,\n pg_relation_size(trel.oid) as table_size_bytes,\n irel.relname AS index_name,\n am1.amname as access_method,\n (i1.indexrelid::regclass)::text as reason,\n pg_get_indexdef(i1.indexrelid) main_index_def,\n pg_size_pretty(pg_relation_size(i1.indexrelid)) main_index_size,\n pg_get_indexdef(i2.indexrelid) index_def,\n pg_relation_size(i2.indexrelid) index_size_bytes,\n s.idx_scan as index_usage,\n quote_ident(tnsp.nspname) as formated_schema_name,\n quote_ident(irel.relname) as formated_index_name,\n quote_ident(trel.relname) AS formated_table_name,\n coalesce(nullif(quote_ident(tnsp.nspname), $47) || $48, $49) || quote_ident(trel.relname) as formated_relation_name,\n i2.opclasses\n from\n index_data as i1\n join index_data as i2 on (\n i1.indrelid = i2.indrelid \n and i1.indexrelid <> i2.indexrelid \n )\n inner join pg_opclass op1 on i1.indclass[$50] = op1.oid\n inner join pg_opclass op2 on i2.indclass[$51] = op2.oid\n inner join pg_am am1 on op1.opcmethod = am1.oid\n inner join pg_am am2 on op2.opcmethod = am2.oid\n join pg_stat_user_indexes as s on s.indexrelid = i2.indexrelid\n join pg_class as trel on trel.oid = i2.indrelid\n join pg_namespace as tnsp on trel.relnamespace = tnsp.oid\n join pg_class as irel on irel.oid = i2.indexrelid\n where\n not i2.indisprimary \n and not ( \n i2.indisunique and not i1.indisprimary\n )\n and am1.amname = am2.amname \n and i1.columns like (i2.columns || $52) \n and i1.opclasses like (i2.opclasses || $53)\n \n and pg_get_expr(i1.indexprs, i1.indrelid) is not distinct from pg_get_expr(i2.indexprs, i2.indrelid)\n \n and pg_get_expr(i1.indpred, i1.indrelid) is not distinct from pg_get_expr(i2.indpred, i2.indrelid)\n), redundant_indexes_fk as (\n select\n ri.*,\n case when fi.index_name is not null then $54 else $55 end as supports_fk\n from redundant_indexes ri\n left join fk_indexes fi on\n fi.fk_table_ref = ri.table_name\n and fi.opclasses like (ri.opclasses || $56)\n), redundant_indexes_grouped as (\n select\n index_id,\n schema_name,\n table_name,\n table_size_bytes,\n index_name,\n access_method,\n string_agg(reason, $57) as reason,\n string_agg(main_index_def, $58) as main_index_def,\n string_agg(main_index_size, $59) as main_index_size,\n index_def,\n index_size_bytes,\n index_usage,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n supports_fk\n from redundant_indexes_fk\n group by\n index_id,\n table_size_bytes,\n schema_name,\n table_name,\n index_name,\n access_method,\n index_def,\n index_size_bytes,\n index_usage,\n formated_index_name,\n formated_schema_name,\n formated_table_name,\n formated_relation_name,\n supports_fk\n order by index_size_bytes desc\n), redundant_indexes_num as (\n select row_number() over () num, rig.*\n from redundant_indexes_grouped rig\n limit $60\n),\nredundant_indexes_json as (\n select\n json_object_agg(rin.schema_name || $61 || rin.index_name, rin) as json\n from redundant_indexes_num rin\n), redundant_indexes_total as (\n select\n sum(index_size_bytes) as index_size_bytes_sum,\n sum(table_size_bytes) as table_size_bytes_sum\n from redundant_indexes_grouped\n),\n\ntogether as (\n select\n reason::text,\n index_id::text,\n schema_name::text,\n table_name::text,\n index_name::text,\n pg_size_pretty(index_size_bytes)::text as index_size,\n index_def::text,\n $62 as main_index_def,\n formated_index_name::text,\n formated_schema_name::text,\n formated_table_name::text,\n formated_relation_name::text\n from never_used_indexes\n union all\n select\n reason::text,\n index_id::text,\n schema_name::text,\n table_name::text,\n index_name::text,\n pg_size_pretty(index_size_bytes)::text as index_size,\n index_def::text,\n main_index_def::text,\n formated_index_name::text,\n formated_schema_name::text,\n formated_table_name::text,\n formated_relation_name::text\n from redundant_indexes\n), do_lines as (\n select format($63, max(formated_index_name), max(index_size), string_agg(reason, $64), table_name) as line\n from together t1\n group by table_name, index_name\n order by table_name, index_name\n), undo_lines as (\n select\n replace(\n format($65, max(index_def), table_name),\n $66,\n $67\n )as line\n from together t2\n group by table_name, index_name\n order by table_name, index_name\n), database_stat as (\n select\n row_to_json(dbstat)\n from (\n select\n sd.stats_reset::timestamptz(0),\n age(\n date_trunc($68,now()),\n date_trunc($69,sd.stats_reset)\n ) as stats_age,\n ((extract($70 from now()) - extract($71 from sd.stats_reset))/$72)::int as days\n from pg_stat_database sd\n where datname = current_database()\n ) dbstat\n)\n\nselect\n json_build_object(\n $73,\n (select * from never_used_indexes_json),\n $74,\n (select row_to_json(nuit) from never_used_indexes_total as nuit),\n $75,\n (select * from rarely_used_indexes_json),\n $76,\n (select row_to_json(ruit) from rarely_used_indexes_total as ruit),\n $77,\n (select * from redundant_indexes_json),\n $78,\n (select row_to_json(rit) from redundant_indexes_total as rit),\n $79,\n (select json_agg(dl.line) from do_lines as dl),\n $80,\n (select json_agg(ul.line) from undo_lines as ul),\n $81,\n (select * from database_stat)\n )",
      "calls": 1,
      "total_time": 21.18223,
      "rows": 1,
      "shared_blks_hit": 11673,
      "shared_blks_read": 1,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -790515615054798000,
      "md5": "742cbaed2bc6a1935431908b67c44887"
    },
    "69efeb9b80da3827960feb0fd5cebc37": {
      "rownum": 49,
      "query": "create table t_28 as select i from generate_series(1, 1000) _(i)",
      "calls": 1,
      "total_time": 21.134067,
      "rows": 0,
      "shared_blks_hit": 232,
      "shared_blks_read": 8,
      "shared_blks_dirtied": 8,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -7110851609792799000,
      "md5": "69efeb9b80da3827960feb0fd5cebc37"
    },
    "6a7bb7b81c267b3641bc02ef300a4edf": {
      "rownum": 50,
      "query": "with timeouts as (\n select json_object_agg(s.name,s ) from pg_settings s where name in ($1, $2, $3)\n), locks as (\n select json_object_agg(s.name,s ) from pg_settings s where name in ($4, $5, $6, $7, $8, $9)\n), databases_stat as (\n select\n *,\n ((now() - sd.stats_reset)::interval(0)::text) as stats_reset_age\n from pg_stat_database sd\n where datname in (SELECT datname FROM pg_database WHERE datistemplate = $10)\n order by deadlocks desc\n limit $11\n), num_dbs_data as (\n select\n row_number() over () num,\n ds.*\n from databases_stat ds\n), dbs_data as (\n select json_object_agg(sd.datname, sd) from num_dbs_data sd\n), db_specified_settings as (\n select json_object_agg(dbs.database, dbs) from\n (select\n (select datname from pg_database where oid = pd.setdatabase) as database,\n *\n from pg_db_role_setting pd\n where\n setconfig::text ~ $12\n and setdatabase is not null and setdatabase <> $13\n ) dbs\n), user_specified_settings as (\n select json_object_agg(pr.rolname, pr) from pg_roles pr where rolconfig::text ~ $14\n)\nselect\n json_build_object(\n $15, (select * from timeouts), $16, (select * from locks),\n $17, (select * from dbs_data),\n $18, (select * from db_specified_settings),\n $19, (select * from user_specified_settings)\n )",
      "calls": 1,
      "total_time": 12.512558,
      "rows": 1,
      "shared_blks_hit": 16,
      "shared_blks_read": 0,
      "shared_blks_dirtied": 0,
      "shared_blks_written": 0,
      "local_blks_hit": 0,
      "local_blks_read": 0,
      "local_blks_dirtied": 0,
      "local_blks_written": 0,
      "temp_blks_read": 0,
      "temp_blks_written": 0,
      "blk_read_time": 0,
      "blk_write_time": 0,
      "queryid": -3081574733525319000,
      "md5": "6a7bb7b81c267b3641bc02ef300a4edf"
    }
  }
}
